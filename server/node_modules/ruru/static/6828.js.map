{"version":3,"file":"6828.js","mappings":"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","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/model.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/markers/common/markers.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/collections.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/editorColorRegistry.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/severity.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IModelService = createDecorator('modelService');\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n(function (MarkerSeverity) {\n    function compare(a, b) {\n        return b - a;\n    }\n    MarkerSeverity.compare = compare;\n    const _displayStrings = Object.create(null);\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n    function toString(a) {\n        return _displayStrings[a] || '';\n    }\n    MarkerSeverity.toString = toString;\n    function fromSeverity(severity) {\n        switch (severity) {\n            case Severity.Error: return MarkerSeverity.Error;\n            case Severity.Warning: return MarkerSeverity.Warning;\n            case Severity.Info: return MarkerSeverity.Info;\n            case Severity.Ignore: return MarkerSeverity.Hint;\n        }\n    }\n    MarkerSeverity.fromSeverity = fromSeverity;\n    function toSeverity(severity) {\n        switch (severity) {\n            case MarkerSeverity.Error: return Severity.Error;\n            case MarkerSeverity.Warning: return Severity.Warning;\n            case MarkerSeverity.Info: return Severity.Info;\n            case MarkerSeverity.Hint: return Severity.Ignore;\n        }\n    }\n    MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var IMarkerData;\n(function (IMarkerData) {\n    const emptyString = '';\n    function makeKey(markerData) {\n        return makeKeyOptionalMessage(markerData, true);\n    }\n    IMarkerData.makeKey = makeKey;\n    function makeKeyOptionalMessage(markerData, useMessage) {\n        const result = [emptyString];\n        if (markerData.source) {\n            result.push(markerData.source.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.code) {\n            if (typeof markerData.code === 'string') {\n                result.push(markerData.code.replace('¦', '\\\\¦'));\n            }\n            else {\n                result.push(markerData.code.value.replace('¦', '\\\\¦'));\n            }\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.severity !== undefined && markerData.severity !== null) {\n            result.push(MarkerSeverity.toString(markerData.severity));\n        }\n        else {\n            result.push(emptyString);\n        }\n        // Modifed to not include the message as part of the marker key to work around\n        // https://github.com/microsoft/vscode/issues/77475\n        if (markerData.message && useMessage) {\n            result.push(markerData.message.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n            result.push(markerData.startLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n            result.push(markerData.startColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n            result.push(markerData.endLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n            result.push(markerData.endColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        result.push(emptyString);\n        return result.join('¦');\n    }\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\nexport const IMarkerService = createDecorator('markerService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!after.has(element)) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!before.has(element)) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\n/**\n * Computes the intersection of two sets.\n *\n * @param setA - The first set.\n * @param setB - The second iterable.\n * @returns A new set containing the elements that are in both `setA` and `setB`.\n */\nexport function intersection(setA, setB) {\n    const result = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { activeContrastBorder, editorBackground, registerColor, editorWarningForeground, editorInfoForeground, editorWarningBorder, editorInfoBorder, contrastBorder, editorFindMatchHighlight, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\n/**\n * Definition of the editor colors\n */\nexport const editorLineHighlight = registerColor('editor.lineHighlightBackground', null, nls.localize('lineHighlight', 'Background color for the highlight of line at the cursor position.'));\nexport const editorLineHighlightBorder = registerColor('editor.lineHighlightBorder', { dark: '#282828', light: '#eeeeee', hcDark: '#f38518', hcLight: contrastBorder }, nls.localize('lineHighlightBorderBox', 'Background color for the border around the line at the cursor position.'));\nexport const editorRangeHighlight = registerColor('editor.rangeHighlightBackground', { dark: '#ffffff0b', light: '#fdff0033', hcDark: null, hcLight: null }, nls.localize('rangeHighlight', 'Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorRangeHighlightBorder = registerColor('editor.rangeHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('rangeHighlightBorder', 'Background color of the border around highlighted ranges.'));\nexport const editorSymbolHighlight = registerColor('editor.symbolHighlightBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('symbolHighlight', 'Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSymbolHighlightBorder = registerColor('editor.symbolHighlightBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('symbolHighlightBorder', 'Background color of the border around highlighted symbols.'));\nexport const editorCursorForeground = registerColor('editorCursor.foreground', { dark: '#AEAFAD', light: Color.black, hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('caret', 'Color of the editor cursor.'));\nexport const editorCursorBackground = registerColor('editorCursor.background', null, nls.localize('editorCursorBackground', 'The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorPrimaryForeground = registerColor('editorMultiCursor.primary.foreground', editorCursorForeground, nls.localize('editorMultiCursorPrimaryForeground', 'Color of the primary editor cursor when multiple cursors are present.'));\nexport const editorMultiCursorPrimaryBackground = registerColor('editorMultiCursor.primary.background', editorCursorBackground, nls.localize('editorMultiCursorPrimaryBackground', 'The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorMultiCursorSecondaryForeground = registerColor('editorMultiCursor.secondary.foreground', editorCursorForeground, nls.localize('editorMultiCursorSecondaryForeground', 'Color of secondary editor cursors when multiple cursors are present.'));\nexport const editorMultiCursorSecondaryBackground = registerColor('editorMultiCursor.secondary.background', editorCursorBackground, nls.localize('editorMultiCursorSecondaryBackground', 'The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.'));\nexport const editorWhitespaces = registerColor('editorWhitespace.foreground', { dark: '#e3e4e229', light: '#33333333', hcDark: '#e3e4e229', hcLight: '#CCCCCC' }, nls.localize('editorWhitespaces', 'Color of whitespace characters in the editor.'));\nexport const editorLineNumbers = registerColor('editorLineNumber.foreground', { dark: '#858585', light: '#237893', hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorLineNumbers', 'Color of editor line numbers.'));\nexport const deprecatedEditorIndentGuides = registerColor('editorIndentGuide.background', editorWhitespaces, nls.localize('editorIndentGuides', 'Color of the editor indentation guides.'), false, nls.localize('deprecatedEditorIndentGuides', '\\'editorIndentGuide.background\\' is deprecated. Use \\'editorIndentGuide.background1\\' instead.'));\nexport const deprecatedEditorActiveIndentGuides = registerColor('editorIndentGuide.activeBackground', editorWhitespaces, nls.localize('editorActiveIndentGuide', 'Color of the active editor indentation guides.'), false, nls.localize('deprecatedEditorActiveIndentGuide', '\\'editorIndentGuide.activeBackground\\' is deprecated. Use \\'editorIndentGuide.activeBackground1\\' instead.'));\nexport const editorIndentGuide1 = registerColor('editorIndentGuide.background1', deprecatedEditorIndentGuides, nls.localize('editorIndentGuides1', 'Color of the editor indentation guides (1).'));\nexport const editorIndentGuide2 = registerColor('editorIndentGuide.background2', '#00000000', nls.localize('editorIndentGuides2', 'Color of the editor indentation guides (2).'));\nexport const editorIndentGuide3 = registerColor('editorIndentGuide.background3', '#00000000', nls.localize('editorIndentGuides3', 'Color of the editor indentation guides (3).'));\nexport const editorIndentGuide4 = registerColor('editorIndentGuide.background4', '#00000000', nls.localize('editorIndentGuides4', 'Color of the editor indentation guides (4).'));\nexport const editorIndentGuide5 = registerColor('editorIndentGuide.background5', '#00000000', nls.localize('editorIndentGuides5', 'Color of the editor indentation guides (5).'));\nexport const editorIndentGuide6 = registerColor('editorIndentGuide.background6', '#00000000', nls.localize('editorIndentGuides6', 'Color of the editor indentation guides (6).'));\nexport const editorActiveIndentGuide1 = registerColor('editorIndentGuide.activeBackground1', deprecatedEditorActiveIndentGuides, nls.localize('editorActiveIndentGuide1', 'Color of the active editor indentation guides (1).'));\nexport const editorActiveIndentGuide2 = registerColor('editorIndentGuide.activeBackground2', '#00000000', nls.localize('editorActiveIndentGuide2', 'Color of the active editor indentation guides (2).'));\nexport const editorActiveIndentGuide3 = registerColor('editorIndentGuide.activeBackground3', '#00000000', nls.localize('editorActiveIndentGuide3', 'Color of the active editor indentation guides (3).'));\nexport const editorActiveIndentGuide4 = registerColor('editorIndentGuide.activeBackground4', '#00000000', nls.localize('editorActiveIndentGuide4', 'Color of the active editor indentation guides (4).'));\nexport const editorActiveIndentGuide5 = registerColor('editorIndentGuide.activeBackground5', '#00000000', nls.localize('editorActiveIndentGuide5', 'Color of the active editor indentation guides (5).'));\nexport const editorActiveIndentGuide6 = registerColor('editorIndentGuide.activeBackground6', '#00000000', nls.localize('editorActiveIndentGuide6', 'Color of the active editor indentation guides (6).'));\nconst deprecatedEditorActiveLineNumber = registerColor('editorActiveLineNumber.foreground', { dark: '#c6c6c6', light: '#0B216F', hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorActiveLineNumber', 'Color of editor active line number'), false, nls.localize('deprecatedEditorActiveLineNumber', 'Id is deprecated. Use \\'editorLineNumber.activeForeground\\' instead.'));\nexport const editorActiveLineNumber = registerColor('editorLineNumber.activeForeground', deprecatedEditorActiveLineNumber, nls.localize('editorActiveLineNumber', 'Color of editor active line number'));\nexport const editorDimmedLineNumber = registerColor('editorLineNumber.dimmedForeground', null, nls.localize('editorDimmedLineNumber', 'Color of the final editor line when editor.renderFinalNewline is set to dimmed.'));\nexport const editorRuler = registerColor('editorRuler.foreground', { dark: '#5A5A5A', light: Color.lightgrey, hcDark: Color.white, hcLight: '#292929' }, nls.localize('editorRuler', 'Color of the editor rulers.'));\nexport const editorCodeLensForeground = registerColor('editorCodeLens.foreground', { dark: '#999999', light: '#919191', hcDark: '#999999', hcLight: '#292929' }, nls.localize('editorCodeLensForeground', 'Foreground color of editor CodeLens'));\nexport const editorBracketMatchBackground = registerColor('editorBracketMatch.background', { dark: '#0064001a', light: '#0064001a', hcDark: '#0064001a', hcLight: '#0000' }, nls.localize('editorBracketMatchBackground', 'Background color behind matching brackets'));\nexport const editorBracketMatchBorder = registerColor('editorBracketMatch.border', { dark: '#888', light: '#B9B9B9', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorBracketMatchBorder', 'Color for matching brackets boxes'));\nexport const editorOverviewRulerBorder = registerColor('editorOverviewRuler.border', { dark: '#7f7f7f4d', light: '#7f7f7f4d', hcDark: '#7f7f7f4d', hcLight: '#666666' }, nls.localize('editorOverviewRulerBorder', 'Color of the overview ruler border.'));\nexport const editorOverviewRulerBackground = registerColor('editorOverviewRuler.background', null, nls.localize('editorOverviewRulerBackground', 'Background color of the editor overview ruler.'));\nexport const editorGutter = registerColor('editorGutter.background', editorBackground, nls.localize('editorGutter', 'Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.'));\nexport const editorUnnecessaryCodeBorder = registerColor('editorUnnecessaryCode.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: contrastBorder }, nls.localize('unnecessaryCodeBorder', 'Border color of unnecessary (unused) source code in the editor.'));\nexport const editorUnnecessaryCodeOpacity = registerColor('editorUnnecessaryCode.opacity', { dark: Color.fromHex('#000a'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('unnecessaryCodeOpacity', 'Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  \\'editorUnnecessaryCode.border\\' theme color to underline unnecessary code instead of fading it out.'));\nexport const ghostTextBorder = registerColor('editorGhostText.border', { dark: null, light: null, hcDark: Color.fromHex('#fff').transparent(0.8), hcLight: Color.fromHex('#292929').transparent(0.8) }, nls.localize('editorGhostTextBorder', 'Border color of ghost text in the editor.'));\nexport const ghostTextForeground = registerColor('editorGhostText.foreground', { dark: Color.fromHex('#ffffff56'), light: Color.fromHex('#0007'), hcDark: null, hcLight: null }, nls.localize('editorGhostTextForeground', 'Foreground color of the ghost text in the editor.'));\nexport const ghostTextBackground = registerColor('editorGhostText.background', null, nls.localize('editorGhostTextBackground', 'Background color of the ghost text in the editor.'));\nconst rulerRangeDefault = new Color(new RGBA(0, 122, 204, 0.6));\nexport const overviewRulerRangeHighlight = registerColor('editorOverviewRuler.rangeHighlightForeground', rulerRangeDefault, nls.localize('overviewRulerRangeHighlight', 'Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerError = registerColor('editorOverviewRuler.errorForeground', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('overviewRuleError', 'Overview ruler marker color for errors.'));\nexport const overviewRulerWarning = registerColor('editorOverviewRuler.warningForeground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Overview ruler marker color for warnings.'));\nexport const overviewRulerInfo = registerColor('editorOverviewRuler.infoForeground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('overviewRuleInfo', 'Overview ruler marker color for infos.'));\nexport const editorBracketHighlightingForeground1 = registerColor('editorBracketHighlight.foreground1', { dark: '#FFD700', light: '#0431FAFF', hcDark: '#FFD700', hcLight: '#0431FAFF' }, nls.localize('editorBracketHighlightForeground1', 'Foreground color of brackets (1). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground2 = registerColor('editorBracketHighlight.foreground2', { dark: '#DA70D6', light: '#319331FF', hcDark: '#DA70D6', hcLight: '#319331FF' }, nls.localize('editorBracketHighlightForeground2', 'Foreground color of brackets (2). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground3 = registerColor('editorBracketHighlight.foreground3', { dark: '#179FFF', light: '#7B3814FF', hcDark: '#87CEFA', hcLight: '#7B3814FF' }, nls.localize('editorBracketHighlightForeground3', 'Foreground color of brackets (3). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground4 = registerColor('editorBracketHighlight.foreground4', '#00000000', nls.localize('editorBracketHighlightForeground4', 'Foreground color of brackets (4). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground5 = registerColor('editorBracketHighlight.foreground5', '#00000000', nls.localize('editorBracketHighlightForeground5', 'Foreground color of brackets (5). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingForeground6 = registerColor('editorBracketHighlight.foreground6', '#00000000', nls.localize('editorBracketHighlightForeground6', 'Foreground color of brackets (6). Requires enabling bracket pair colorization.'));\nexport const editorBracketHighlightingUnexpectedBracketForeground = registerColor('editorBracketHighlight.unexpectedBracket.foreground', { dark: new Color(new RGBA(255, 18, 18, 0.8)), light: new Color(new RGBA(255, 18, 18, 0.8)), hcDark: 'new Color(new RGBA(255, 50, 50, 1))', hcLight: '#B5200D' }, nls.localize('editorBracketHighlightUnexpectedBracketForeground', 'Foreground color of unexpected brackets.'));\nexport const editorBracketPairGuideBackground1 = registerColor('editorBracketPairGuide.background1', '#00000000', nls.localize('editorBracketPairGuide.background1', 'Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground2 = registerColor('editorBracketPairGuide.background2', '#00000000', nls.localize('editorBracketPairGuide.background2', 'Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground3 = registerColor('editorBracketPairGuide.background3', '#00000000', nls.localize('editorBracketPairGuide.background3', 'Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground4 = registerColor('editorBracketPairGuide.background4', '#00000000', nls.localize('editorBracketPairGuide.background4', 'Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground5 = registerColor('editorBracketPairGuide.background5', '#00000000', nls.localize('editorBracketPairGuide.background5', 'Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideBackground6 = registerColor('editorBracketPairGuide.background6', '#00000000', nls.localize('editorBracketPairGuide.background6', 'Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground1 = registerColor('editorBracketPairGuide.activeBackground1', '#00000000', nls.localize('editorBracketPairGuide.activeBackground1', 'Background color of active bracket pair guides (1). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground2 = registerColor('editorBracketPairGuide.activeBackground2', '#00000000', nls.localize('editorBracketPairGuide.activeBackground2', 'Background color of active bracket pair guides (2). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground3 = registerColor('editorBracketPairGuide.activeBackground3', '#00000000', nls.localize('editorBracketPairGuide.activeBackground3', 'Background color of active bracket pair guides (3). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground4 = registerColor('editorBracketPairGuide.activeBackground4', '#00000000', nls.localize('editorBracketPairGuide.activeBackground4', 'Background color of active bracket pair guides (4). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground5 = registerColor('editorBracketPairGuide.activeBackground5', '#00000000', nls.localize('editorBracketPairGuide.activeBackground5', 'Background color of active bracket pair guides (5). Requires enabling bracket pair guides.'));\nexport const editorBracketPairGuideActiveBackground6 = registerColor('editorBracketPairGuide.activeBackground6', '#00000000', nls.localize('editorBracketPairGuide.activeBackground6', 'Background color of active bracket pair guides (6). Requires enabling bracket pair guides.'));\nexport const editorUnicodeHighlightBorder = registerColor('editorUnicodeHighlight.border', editorWarningForeground, nls.localize('editorUnicodeHighlight.border', 'Border color used to highlight unicode characters.'));\nexport const editorUnicodeHighlightBackground = registerColor('editorUnicodeHighlight.background', editorWarningBackground, nls.localize('editorUnicodeHighlight.background', 'Background color used to highlight unicode characters.'));\n// contains all color rules that used to defined in editor/browser/widget/editor.css\nregisterThemingParticipant((theme, collector) => {\n    const background = theme.getColor(editorBackground);\n    const lineHighlight = theme.getColor(editorLineHighlight);\n    const imeBackground = (lineHighlight && !lineHighlight.isTransparent() ? lineHighlight : background);\n    if (imeBackground) {\n        collector.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${imeBackground}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { OverviewRulerLane } from '../model.js';\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\nimport { overviewRulerWarning, overviewRulerInfo, overviewRulerError } from '../core/editorColorRegistry.js';\nimport { IModelService } from './model.js';\nimport { Range } from '../core/range.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { minimapInfo, minimapWarning, minimapError } from '../../../platform/theme/common/colorRegistry.js';\nimport { BidirectionalMap, ResourceMap } from '../../../base/common/map.js';\nimport { diffSets } from '../../../base/common/collections.js';\nlet MarkerDecorationsService = class MarkerDecorationsService extends Disposable {\n    constructor(modelService, _markerService) {\n        super();\n        this._markerService = _markerService;\n        this._onDidChangeMarker = this._register(new Emitter());\n        this._markerDecorations = new ResourceMap();\n        modelService.getModels().forEach(model => this._onModelAdded(model));\n        this._register(modelService.onModelAdded(this._onModelAdded, this));\n        this._register(modelService.onModelRemoved(this._onModelRemoved, this));\n        this._register(this._markerService.onMarkerChanged(this._handleMarkerChange, this));\n    }\n    dispose() {\n        super.dispose();\n        this._markerDecorations.forEach(value => value.dispose());\n        this._markerDecorations.clear();\n    }\n    getMarker(uri, decoration) {\n        const markerDecorations = this._markerDecorations.get(uri);\n        return markerDecorations ? (markerDecorations.getMarker(decoration) || null) : null;\n    }\n    _handleMarkerChange(changedResources) {\n        changedResources.forEach((resource) => {\n            const markerDecorations = this._markerDecorations.get(resource);\n            if (markerDecorations) {\n                this._updateDecorations(markerDecorations);\n            }\n        });\n    }\n    _onModelAdded(model) {\n        const markerDecorations = new MarkerDecorations(model);\n        this._markerDecorations.set(model.uri, markerDecorations);\n        this._updateDecorations(markerDecorations);\n    }\n    _onModelRemoved(model) {\n        const markerDecorations = this._markerDecorations.get(model.uri);\n        if (markerDecorations) {\n            markerDecorations.dispose();\n            this._markerDecorations.delete(model.uri);\n        }\n        // clean up markers for internal, transient models\n        if (model.uri.scheme === Schemas.inMemory\n            || model.uri.scheme === Schemas.internal\n            || model.uri.scheme === Schemas.vscode) {\n            this._markerService?.read({ resource: model.uri }).map(marker => marker.owner).forEach(owner => this._markerService.remove(owner, [model.uri]));\n        }\n    }\n    _updateDecorations(markerDecorations) {\n        // Limit to the first 500 errors/warnings\n        const markers = this._markerService.read({ resource: markerDecorations.model.uri, take: 500 });\n        if (markerDecorations.update(markers)) {\n            this._onDidChangeMarker.fire(markerDecorations.model);\n        }\n    }\n};\nMarkerDecorationsService = __decorate([\n    __param(0, IModelService),\n    __param(1, IMarkerService)\n], MarkerDecorationsService);\nexport { MarkerDecorationsService };\nclass MarkerDecorations extends Disposable {\n    constructor(model) {\n        super();\n        this.model = model;\n        this._map = new BidirectionalMap();\n        this._register(toDisposable(() => {\n            this.model.deltaDecorations([...this._map.values()], []);\n            this._map.clear();\n        }));\n    }\n    update(markers) {\n        // We use the fact that marker instances are not recreated when different owners\n        // update. So we can compare references to find out what changed since the last update.\n        const { added, removed } = diffSets(new Set(this._map.keys()), new Set(markers));\n        if (added.length === 0 && removed.length === 0) {\n            return false;\n        }\n        const oldIds = removed.map(marker => this._map.get(marker));\n        const newDecorations = added.map(marker => {\n            return {\n                range: this._createDecorationRange(this.model, marker),\n                options: this._createDecorationOption(marker)\n            };\n        });\n        const ids = this.model.deltaDecorations(oldIds, newDecorations);\n        for (const removedMarker of removed) {\n            this._map.delete(removedMarker);\n        }\n        for (let index = 0; index < ids.length; index++) {\n            this._map.set(added[index], ids[index]);\n        }\n        return true;\n    }\n    getMarker(decoration) {\n        return this._map.getKey(decoration.id);\n    }\n    _createDecorationRange(model, rawMarker) {\n        let ret = Range.lift(rawMarker);\n        if (rawMarker.severity === MarkerSeverity.Hint && !this._hasMarkerTag(rawMarker, 1 /* MarkerTag.Unnecessary */) && !this._hasMarkerTag(rawMarker, 2 /* MarkerTag.Deprecated */)) {\n            // * never render hints on multiple lines\n            // * make enough space for three dots\n            ret = ret.setEndPosition(ret.startLineNumber, ret.startColumn + 2);\n        }\n        ret = model.validateRange(ret);\n        if (ret.isEmpty()) {\n            const maxColumn = model.getLineLastNonWhitespaceColumn(ret.startLineNumber) ||\n                model.getLineMaxColumn(ret.startLineNumber);\n            if (maxColumn === 1 || ret.endColumn >= maxColumn) {\n                // empty line or behind eol\n                // keep the range as is, it will be rendered 1ch wide\n                return ret;\n            }\n            const word = model.getWordAtPosition(ret.getStartPosition());\n            if (word) {\n                ret = new Range(ret.startLineNumber, word.startColumn, ret.endLineNumber, word.endColumn);\n            }\n        }\n        else if (rawMarker.endColumn === Number.MAX_VALUE && rawMarker.startColumn === 1 && ret.startLineNumber === ret.endLineNumber) {\n            const minColumn = model.getLineFirstNonWhitespaceColumn(rawMarker.startLineNumber);\n            if (minColumn < ret.endColumn) {\n                ret = new Range(ret.startLineNumber, minColumn, ret.endLineNumber, ret.endColumn);\n                rawMarker.startColumn = minColumn;\n            }\n        }\n        return ret;\n    }\n    _createDecorationOption(marker) {\n        let className;\n        let color = undefined;\n        let zIndex;\n        let inlineClassName = undefined;\n        let minimap;\n        switch (marker.severity) {\n            case MarkerSeverity.Hint:\n                if (this._hasMarkerTag(marker, 2 /* MarkerTag.Deprecated */)) {\n                    className = undefined;\n                }\n                else if (this._hasMarkerTag(marker, 1 /* MarkerTag.Unnecessary */)) {\n                    className = \"squiggly-unnecessary\" /* ClassName.EditorUnnecessaryDecoration */;\n                }\n                else {\n                    className = \"squiggly-hint\" /* ClassName.EditorHintDecoration */;\n                }\n                zIndex = 0;\n                break;\n            case MarkerSeverity.Info:\n                className = \"squiggly-info\" /* ClassName.EditorInfoDecoration */;\n                color = themeColorFromId(overviewRulerInfo);\n                zIndex = 10;\n                minimap = {\n                    color: themeColorFromId(minimapInfo),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n            case MarkerSeverity.Warning:\n                className = \"squiggly-warning\" /* ClassName.EditorWarningDecoration */;\n                color = themeColorFromId(overviewRulerWarning);\n                zIndex = 20;\n                minimap = {\n                    color: themeColorFromId(minimapWarning),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n            case MarkerSeverity.Error:\n            default:\n                className = \"squiggly-error\" /* ClassName.EditorErrorDecoration */;\n                color = themeColorFromId(overviewRulerError);\n                zIndex = 30;\n                minimap = {\n                    color: themeColorFromId(minimapError),\n                    position: 1 /* MinimapPosition.Inline */\n                };\n                break;\n        }\n        if (marker.tags) {\n            if (marker.tags.indexOf(1 /* MarkerTag.Unnecessary */) !== -1) {\n                inlineClassName = \"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */;\n            }\n            if (marker.tags.indexOf(2 /* MarkerTag.Deprecated */) !== -1) {\n                inlineClassName = \"squiggly-inline-deprecated\" /* ClassName.EditorDeprecatedInlineDecoration */;\n            }\n        }\n        return {\n            description: 'marker-decoration',\n            stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n            className,\n            showIfCollapsed: true,\n            overviewRuler: {\n                color,\n                position: OverviewRulerLane.Right\n            },\n            minimap,\n            zIndex,\n            inlineClassName,\n        };\n    }\n    _hasMarkerTag(marker, tag) {\n        if (marker.tags) {\n            return marker.tags.indexOf(tag) >= 0;\n        }\n        return false;\n    }\n}\n"],"names":["Extensions","JSONContribution","jsonContributionRegistry","constructor","this","_onDidChangeSchema","schemasById","registerSchema","uri","unresolvedSchemaContent","id","length","charAt","substring","fire","notifySchemaChanged","add","IModelService","IThemeService","themeColorFromId","getThemeTypeSelector","type","DARK","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","ThemingContribution","themingRegistry","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","push","idx","indexOf","splice","getThemingParticipants","registerThemingParticipant","Themable","themeService","super","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles","MarkerSeverity","IMarkerData","compare","a","b","_displayStrings","Object","create","Error","Warning","Info","toString","fromSeverity","severity","Ignore","Hint","toSeverity","emptyString","makeKeyOptionalMessage","markerData","useMessage","result","source","replace","code","value","undefined","message","startLineNumber","startColumn","endLineNumber","endColumn","join","makeKey","IMarkerService","Registry","data","Map","has","set","as","get","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","target","key","index","arguments","storeServiceDependency","diffSets","before","after","removed","added","element","intersection","setA","setB","Set","elem","editorLineHighlight","editorLineHighlightBorder","dark","light","hcDark","hcLight","editorCursorForeground","black","white","editorCursorBackground","editorMultiCursorPrimaryForeground","editorMultiCursorPrimaryBackground","editorMultiCursorSecondaryForeground","editorMultiCursorSecondaryBackground","editorWhitespaces","editorLineNumbers","deprecatedEditorIndentGuides","deprecatedEditorActiveIndentGuides","editorIndentGuide1","editorIndentGuide2","editorIndentGuide3","editorIndentGuide4","editorIndentGuide5","editorIndentGuide6","editorActiveIndentGuide1","editorActiveIndentGuide2","editorActiveIndentGuide3","editorActiveIndentGuide4","editorActiveIndentGuide5","editorActiveIndentGuide6","deprecatedEditorActiveLineNumber","editorDimmedLineNumber","editorOverviewRulerBorder","lightgrey","editorOverviewRulerBackground","editorUnnecessaryCodeOpacity","fromHex","transparent","ghostTextForeground","rulerRangeDefault","overviewRulerRangeHighlight","overviewRulerError","overviewRulerWarning","overviewRulerInfo","editorBracketHighlightingForeground1","editorBracketHighlightingForeground2","editorBracketHighlightingForeground3","editorBracketHighlightingForeground4","editorBracketHighlightingForeground5","editorBracketHighlightingForeground6","editorBracketHighlightingUnexpectedBracketForeground","editorBracketPairGuideBackground1","editorBracketPairGuideBackground2","editorBracketPairGuideBackground3","editorBracketPairGuideBackground4","editorBracketPairGuideBackground5","editorBracketPairGuideBackground6","editorBracketPairGuideActiveBackground1","editorBracketPairGuideActiveBackground2","editorBracketPairGuideActiveBackground3","editorBracketPairGuideActiveBackground4","editorBracketPairGuideActiveBackground5","editorBracketPairGuideActiveBackground6","collector","background","getColor","lineHighlight","imeBackground","isTransparent","addRule","Severity","_error","_warning","_info","fromValue","__param","paramIndex","decorator","MarkerDecorationsService","modelService","_markerService","_onDidChangeMarker","_markerDecorations","getModels","forEach","model","_onModelAdded","onModelAdded","onModelRemoved","_onModelRemoved","onMarkerChanged","_handleMarkerChange","dispose","clear","getMarker","decoration","markerDecorations","changedResources","resource","_updateDecorations","MarkerDecorations","delete","scheme","inMemory","internal","vscode","read","map","marker","owner","remove","markers","take","update","decorators","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__decorate","_map","deltaDecorations","values","keys","oldIds","newDecorations","range","_createDecorationRange","options","_createDecorationOption","ids","removedMarker","getKey","rawMarker","ret","lift","_hasMarkerTag","setEndPosition","validateRange","isEmpty","maxColumn","getLineLastNonWhitespaceColumn","getLineMaxColumn","word","getWordAtPosition","getStartPosition","Number","MAX_VALUE","minColumn","getLineFirstNonWhitespaceColumn","className","color","zIndex","inlineClassName","minimap","position","tags","description","stickiness","showIfCollapsed","overviewRuler","Right","tag"],"sourceRoot":""}