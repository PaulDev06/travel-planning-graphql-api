{"version":3,"file":"2203.js","mappings":";yHAIO,SAASA,EAAiBC,EAAcC,GAC3C,MAAMC,EAAaF,EACsB,iBAA9BE,EAAWC,gBAClBC,OAAOC,eAAeH,EAAY,iBAAkB,CAChDI,IAAK,IAAML,GAGvB,C,yBAEO,MAAMM,EAAaC,M,+TCFnB,MAAMC,GAAsB,QAAc,uBAAwB,KAAM,KAAa,sBAAuB,gJACtGC,GAAsB,QAAc,uBAAwB,KAAM,KAAa,sBAAuB,gJACtGC,GAAmB,QAAc,oBAAqB,CAAEC,KAAM,KAAaC,MAAO,KAAaC,OAAQ,KAAsBC,QAAS,MAAwB,KAAa,mBAAoB,6IAC/LC,GAA+B,QAAc,gCAAiC,KAAM,KAAa,+BAAgC,0JACjIC,GAAgC,QAAc,iCAAkC,CAAEL,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,KAAMG,QAAQ,WAAWC,YAAY,KAAQ,KAAa,gCAAiC,iJACvOC,GAAgC,QAAc,iCAAkC,CAAER,KAAM,KAAMS,MAAOR,MAAO,KAAMQ,MAAOP,OAAQ,KAAMC,QAAS,MAAQ,KAAa,gCAAiC,iJACtMO,GAAoC,QAAc,qCAAsC,KAAM,KAAa,oCAAqC,sJAChJC,GAAkC,QAAc,mCAAoC,CAAEX,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,KAAMG,QAAQ,WAAWC,YAAY,KAAQ,KAAa,kCAAmC,mJAC7OK,GAAkC,QAAc,mCAAoC,KAAM,KAAa,kCAAmC,mJAC1IC,GAAsC,QAAc,uCAAwC,KAAM,KAAa,sCAAuC,wJACtJC,GAA8B,QAAc,+BAAgC,KAAM,KAAa,8BAA+B,kJAC9HC,GAA2B,QAAc,4BAA6B,KAAM,KAAa,2BAA4B,+IACrHC,GAAsB,QAAc,uBAAwB,CAAEhB,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMO,MAAMF,YAAY,IAAMJ,QAAS,KAAMG,QAAQ,WAAWC,YAAY,KAAQ,KAAa,sBAAuB,mEACjOU,GAAsB,QAAc,uBAAwB,KAAM,KAAa,sBAAuB,mEACtGC,GAAyB,QAAc,sBAAuB,CAAElB,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,qBAAsB,gGACrKgB,GAA4B,QAAc,6BAA8B,CAAEnB,KAAM,KAAgBC,MAAO,KAAgBC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,4BAA6B,+FAChMiB,GAA0B,QAAc,2BAA4B,CAAEpB,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAaC,QAAS,MAAe,KAAa,YAAa,4FAChLkB,GAA+B,QAAc,gCAAiC,CAAErB,KAAMoB,EAAyBnB,OAAO,QAAkBI,EAA+Be,EAAyB,WAAYlB,OAAQkB,EAAyBjB,QAASiB,GAA2B,KAAa,+BAAgC,sHAI9TE,IAH4B,QAAc,6BAA8B,CAAEtB,KAAM,UAAWC,MAAO,UAAWC,OAAQ,UAAWC,QAAS,WAAa,KAAa,wBAAyB,+FACtK,QAAc,uBAAwB,CAAEH,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,sBAAuB,uDAC5I,QAAc,yBAA0B,CAAEH,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,wBAAyB,yDAC7I,QAAc,8BAA+B,CAAEF,OAAO,QAAO,KAAwB,GAAID,MAAM,OAAQ,KAAwB,GAAIE,OAAQ,KAAwBC,QAAS,MAA0B,KAAa,6BAA8B,oEAC9QoB,GAA0B,QAAc,2BAA4B,CAAEvB,KAAM,KAAMO,YAAaN,MAAO,KAAMM,YAAaL,OAAQ,UAAWC,QAAS,WAAa,KAAa,0BAA2B,gEAC1MqB,GAAmC,QAAc,oCAAqC,CAAExB,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,mCAAoC,2FAC/NsB,GAAyB,QAAc,0BAA2B,KAAc,KAAa,yBAA0B,+DAKvHC,IAJ2B,QAAc,6BAA8B,CAAE1B,KAAM,KAA0BC,MAAO,KAA0BC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,2BAA4B,6CACjL,QAAc,yBAA0B,CAAEH,KAAM,KAAgCC,MAAO,KAAgCC,OAAQ,KAAgBC,QAAS,MAAwB,KAAa,iCAAkC,yCACnO,QAAc,8BAA+B,CAAEH,KAAM,UAAWC,MAAO,UAAWC,OAAQ,UAAWC,QAAS,WAAa,KAAa,6BAA8B,iEAE1K,QAAc,0BAA2B,CAAEH,KAAM,UAAWC,MAAO,UAAWC,OAAQ,UAAWC,QAAS,WAAa,KAAa,yBAA0B,mDACvLwB,GAAiC,QAAc,mCAAmC,QAAYD,EAAwB,IAAM,KAAa,iCAAkC,sEAE3KE,GAAqB,QAAc,0BAA2B,CAAE5B,KAAM,YAAaC,MAAO,YAAaC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,qBAAsB,wCACzK0B,GAA8B,QAAc,8BAA+B,CAAE7B,MAAM,QAAY,KAAY,KAAOC,OAAO,QAAY,KAAY,KAAOC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,8BAA+B,0CAEtM,QAAc,8BAA+B,KAAwB,KAAa,6BAA8B,mCAChH,QAAc,8BAA+B,KAAwB,KAAa,6BAA8B,mCAC3G,QAAc,mCAAoCK,EAA+B,KAAa,kCAAmC,wDACjI,QAAc,mCAAoCH,EAA+B,KAAa,kCAAmC,sD,iBC1CzK,IAAIyB,EAOJ,SAASC,EAAeC,GAC3B,OAAOA,IAAWF,EAAYG,oBAAsBD,IAAWF,EAAYI,mBAC/E,CACO,SAASC,EAAOH,GACnB,OAAOA,IAAWF,EAAYM,MAAQJ,IAAWF,EAAYG,kBACjE,C,oCAXA,SAAWH,GACPA,EAAkB,KAAI,OACtBA,EAAmB,MAAI,QACvBA,EAAgC,mBAAI,SACpCA,EAAiC,oBAAI,SACxC,CALD,CAKGA,IAAgBA,EAAc,CAAC,G,iBCR3B,SAASO,EAAKC,EAAOC,EAAI,GAC5B,OAAOD,EAAMA,EAAME,QAAU,EAAID,GACrC,CACO,SAASE,EAAMC,GAClB,GAAmB,IAAfA,EAAIF,OACJ,MAAM,IAAIG,MAAM,qBAEpB,MAAO,CAACD,EAAIE,MAAM,EAAGF,EAAIF,OAAS,GAAIE,EAAIA,EAAIF,OAAS,GAC3D,CACO,SAASK,EAAOC,EAAKC,EAAOC,EAAa,CAACC,EAAGC,IAAMD,IAAMC,GAC5D,GAAIJ,IAAQC,EACR,OAAO,EAEX,IAAKD,IAAQC,EACT,OAAO,EAEX,GAAID,EAAIN,SAAWO,EAAMP,OACrB,OAAO,EAEX,IAAK,IAAIW,EAAI,EAAGC,EAAMN,EAAIN,OAAQW,EAAIC,EAAKD,IACvC,IAAKH,EAAWF,EAAIK,GAAIJ,EAAMI,IAC1B,OAAO,EAGf,OAAO,CACX,CAKO,SAASE,EAA8Bf,EAAOgB,GACjD,MAAMC,EAAOjB,EAAME,OAAS,EACxBc,EAAQC,IACRjB,EAAMgB,GAAShB,EAAMiB,IAEzBjB,EAAMkB,KACV,CAYO,SAASC,EAAanB,EAAOoB,EAAKC,GACrC,OAiBG,SAAuBnB,EAAQoB,GAClC,IAAIC,EAAM,EAAGC,EAAOtB,EAAS,EAC7B,KAAOqB,GAAOC,GAAM,CAChB,MAAMC,GAAQF,EAAMC,GAAQ,EAAK,EAC3BE,EAAOJ,EAAaG,GAC1B,GAAIC,EAAO,EACPH,EAAME,EAAM,MAEX,MAAIC,EAAO,GAIZ,OAAOD,EAHPD,EAAOC,EAAM,CAIjB,CACJ,CACA,QAASF,EAAM,EACnB,CAjCWI,CAAc3B,EAAME,OAAQW,GAAKQ,EAAWrB,EAAMa,GAAIO,GACjE,CAiCO,SAASQ,EAAYC,EAAKC,EAAMC,GAEnC,IADAF,GAAY,IACDC,EAAK5B,OACZ,MAAM,IAAI8B,UAAU,iBAExB,MAAMC,EAAaH,EAAKI,KAAKC,MAAML,EAAK5B,OAASgC,KAAKE,WAChDC,EAAQ,GACRC,EAAS,GACTC,EAAS,GACf,IAAK,MAAMC,KAASV,EAAM,CACtB,MAAMW,EAAMV,EAAQS,EAAOP,GACvBQ,EAAM,EACNJ,EAAMK,KAAKF,GAENC,EAAM,EACXH,EAAOI,KAAKF,GAGZD,EAAOG,KAAKF,EAEpB,CACA,OAAIX,EAAMQ,EAAMnC,OACL0B,EAAYC,EAAKQ,EAAON,GAE1BF,EAAMQ,EAAMnC,OAASqC,EAAOrC,OAC1BqC,EAAO,GAGPX,EAAYC,GAAOQ,EAAMnC,OAASqC,EAAOrC,QAASoC,EAAQP,EAEzE,CACO,SAASY,EAAQb,EAAMC,GAC1B,MAAMa,EAAS,GACf,IAAIC,EACJ,IAAK,MAAMC,KAAWhB,EAAKxB,MAAM,GAAGyC,KAAKhB,GAChCc,GAAsD,IAAtCd,EAAQc,EAAa,GAAIC,GAK1CD,EAAaH,KAAKI,IAJlBD,EAAe,CAACC,GAChBF,EAAOF,KAAKG,IAMpB,OAAOD,CACX,CAMO,SAAUI,EAAgBC,EAAOC,GACpC,IAAIL,EACA5B,EACJ,IAAK,MAAMkC,KAAQF,OACFG,IAATnC,GAAsBiC,EAAgBjC,EAAMkC,GAC5CN,EAAaH,KAAKS,IAGdN,UACMA,GAEVA,EAAe,CAACM,IAEpBlC,EAAOkC,EAEPN,UACMA,EAEd,CACO,SAASQ,EAAgBjD,EAAKkD,GACjC,IAAK,IAAIzC,EAAI,EAAGA,GAAKT,EAAIF,OAAQW,IAC7ByC,EAAQ,IAANzC,OAAUuC,EAAYhD,EAAIS,EAAI,GAAIA,IAAMT,EAAIF,YAASkD,EAAYhD,EAAIS,GAE/E,CACO,SAAS0C,EAAqBnD,EAAKkD,GACtC,IAAK,IAAIzC,EAAI,EAAGA,EAAIT,EAAIF,OAAQW,IAC5ByC,EAAQ,IAANzC,OAAUuC,EAAYhD,EAAIS,EAAI,GAAIT,EAAIS,GAAIA,EAAI,IAAMT,EAAIF,YAASkD,EAAYhD,EAAIS,EAAI,GAE/F,CAIO,SAAS2C,EAASxD,GACrB,OAAOA,EAAMyD,OAAQC,KAAQA,EACjC,CAIO,SAASC,EAAgB3D,GAC5B,IAAI4D,EAAK,EACT,IAAK,IAAI/C,EAAI,EAAGA,EAAIb,EAAME,OAAQW,IACxBb,EAAMa,KACRb,EAAM4D,GAAM5D,EAAMa,GAClB+C,GAAM,GAGd5D,EAAME,OAAS0D,CACnB,CAIO,SAASC,EAAeC,GAC3B,OAAQC,MAAMC,QAAQF,IAAuB,IAAfA,EAAI5D,MACtC,CACO,SAAS+D,EAAgBH,GAC5B,OAAOC,MAAMC,QAAQF,IAAQA,EAAI5D,OAAS,CAC9C,CAKO,SAASgE,EAASlE,EAAOmE,EAAQ3B,GAASA,GAC7C,MAAM4B,EAAO,IAAIC,IACjB,OAAOrE,EAAMyD,OAAOX,IAChB,MAAM1B,EAAM+C,EAAMrB,GAClB,OAAIsB,EAAKE,IAAIlD,KAGbgD,EAAKG,IAAInD,IACF,IAEf,CACO,SAASoD,EAAexE,EAAOyE,GAClC,OAAOzE,EAAME,OAAS,EAAIF,EAAM,GAAKyE,CACzC,CACO,SAASC,EAAMC,EAAKf,GACvB,IAAIgB,EAAqB,iBAAPhB,EAAkBe,EAAM,EACxB,iBAAPf,EACPgB,EAAOD,GAGPC,EAAO,EACPhB,EAAKe,GAET,MAAM/B,EAAS,GACf,GAAIgC,GAAQhB,EACR,IAAK,IAAI/C,EAAI+D,EAAM/D,EAAI+C,EAAI/C,IACvB+B,EAAOF,KAAK7B,QAIhB,IAAK,IAAIA,EAAI+D,EAAM/D,EAAI+C,EAAI/C,IACvB+B,EAAOF,KAAK7B,GAGpB,OAAO+B,CACX,CAKO,SAASiC,EAAYC,EAAQC,EAAaC,GAC7C,MAAMC,EAASH,EAAOxE,MAAM,EAAGyE,GACzBG,EAAQJ,EAAOxE,MAAMyE,GAC3B,OAAOE,EAAOE,OAAOH,EAAWE,EACpC,CAIO,SAASE,EAAYhF,EAAKoC,GAC7B,MAAMxB,EAAQZ,EAAIiF,QAAQ7C,GACtBxB,GAAS,IACTZ,EAAIkF,OAAOtE,EAAO,GAClBZ,EAAImF,QAAQ/C,GAEpB,CAIO,SAASgD,EAAUpF,EAAKoC,GAC3B,MAAMxB,EAAQZ,EAAIiF,QAAQ7C,GACtBxB,GAAS,IACTZ,EAAIkF,OAAOtE,EAAO,GAClBZ,EAAIsC,KAAKF,GAEjB,CACO,SAASiD,EAASrF,EAAK6C,GAC1B,IAAK,MAAME,KAAQF,EACf7C,EAAIsC,KAAKS,EAEjB,CACO,SAASuC,EAAQC,GACpB,OAAO5B,MAAMC,QAAQ2B,GAAKA,EAAI,CAACA,EACnC,CA4BO,SAASL,EAAOtF,EAAO4F,EAAOC,EAAaC,GAC9C,MAAM9E,EAAQ+E,EAAoB/F,EAAO4F,GACzC,IAAIhD,EAAS5C,EAAMsF,OAAOtE,EAAO6E,GAMjC,YALezC,IAAXR,IAEAA,EAAS,IA1BV,SAAoB5C,EAAO4F,EAAOE,GACrC,MAAME,EAAWD,EAAoB/F,EAAO4F,GACtCK,EAAiBjG,EAAME,OACvBgG,EAAiBJ,EAAS5F,OAChCF,EAAME,OAAS+F,EAAiBC,EAEhC,IAAK,IAAIrF,EAAIoF,EAAiB,EAAGpF,GAAKmF,EAAUnF,IAC5Cb,EAAMa,EAAIqF,GAAkBlG,EAAMa,GAEtC,IAAK,IAAIA,EAAI,EAAGA,EAAIqF,EAAgBrF,IAChCb,EAAMa,EAAImF,GAAYF,EAASjF,EAEvC,CAgBIsF,CAAWnG,EAAOgB,EAAO8E,GAClBlD,CACX,CAQA,SAASmD,EAAoB/F,EAAO4F,GAChC,OAAOA,EAAQ,EAAI1D,KAAKkE,IAAIR,EAAQ5F,EAAME,OAAQ,GAAKgC,KAAKmE,IAAIT,EAAO5F,EAAME,OACjF,CACO,IAAIoG,EAsBJ,SAASC,EAAUC,EAAUnF,GAChC,MAAO,CAACV,EAAGC,IAAMS,EAAWmF,EAAS7F,GAAI6F,EAAS5F,GACtD,CACO,SAAS6F,KAAuBC,GACnC,MAAO,CAACC,EAAOC,KACX,IAAK,MAAMvF,KAAcqF,EAAa,CAClC,MAAM9D,EAASvB,EAAWsF,EAAOC,GACjC,IAAKN,EAAcO,2BAA2BjE,GAC1C,OAAOA,CAEf,CACA,OAAO0D,EAAcQ,yBAE7B,C,+RAlCA,SAAWR,GAIPA,EAAcS,WAHd,SAAoBnE,GAChB,OAAOA,EAAS,CACpB,EAKA0D,EAAcU,kBAHd,SAA2BpE,GACvB,OAAOA,GAAU,CACrB,EAKA0D,EAAcW,cAHd,SAAuBrE,GACnB,OAAOA,EAAS,CACpB,EAKA0D,EAAcO,2BAHd,SAAoCjE,GAChC,OAAkB,IAAXA,CACX,EAEA0D,EAAcY,YAAc,EAC5BZ,EAAca,UAAY,EAC1Bb,EAAcQ,yBAA2B,CAC5C,CApBD,CAoBGR,IAAkBA,EAAgB,CAAC,IAkB/B,MAAMc,EAAmB,CAACzG,EAAGC,IAAMD,EAAIC,EACjCyG,EAAoB,CAAC1G,EAAGC,IAAMwG,EAAiBzG,EAAI,EAAI,EAAGC,EAAI,EAAI,GACxE,SAAS0G,EAAajG,GACzB,MAAO,CAACV,EAAGC,KAAOS,EAAWV,EAAGC,EACpC,CACO,MAAM2G,EAIT,WAAAC,CAAYvE,GACRwE,KAAKxE,MAAQA,EACbwE,KAAKC,SAAW,EAChBD,KAAKE,QAAUF,KAAKxE,MAAM/C,OAAS,CACvC,CACA,UAAIA,GACA,OAAOuH,KAAKE,QAAUF,KAAKC,SAAW,CAC1C,CAKA,SAAAE,CAAUC,GAGN,IAAI7B,EAAWyB,KAAKC,SACpB,KAAO1B,EAAWyB,KAAKxE,MAAM/C,QAAU2H,EAAUJ,KAAKxE,MAAM+C,KACxDA,IAEJ,MAAMpD,EAASoD,IAAayB,KAAKC,SAAW,KAAOD,KAAKxE,MAAM3C,MAAMmH,KAAKC,SAAU1B,GAEnF,OADAyB,KAAKC,SAAW1B,EACTpD,CACX,CAMA,gBAAAkF,CAAiBD,GAGb,IAAIE,EAASN,KAAKE,QAClB,KAAOI,GAAU,GAAKF,EAAUJ,KAAKxE,MAAM8E,KACvCA,IAEJ,MAAMnF,EAASmF,IAAWN,KAAKE,QAAU,KAAOF,KAAKxE,MAAM3C,MAAMyH,EAAS,EAAGN,KAAKE,QAAU,GAE5F,OADAF,KAAKE,QAAUI,EACRnF,CACX,CACA,IAAAoF,GACI,GAAoB,IAAhBP,KAAKvH,OAGT,OAAOuH,KAAKxE,MAAMwE,KAAKC,SAC3B,CACA,OAAAO,GACI,MAAMrF,EAAS6E,KAAKxE,MAAMwE,KAAKC,UAE/B,OADAD,KAAKC,WACE9E,CACX,CACA,SAAAsF,CAAUC,GACN,MAAMvF,EAAS6E,KAAKxE,MAAM3C,MAAMmH,KAAKC,SAAUD,KAAKC,SAAWS,GAE/D,OADAV,KAAKC,UAAYS,EACVvF,CACX,EAKG,MAAMwF,SACAX,KAAKY,MAAQ,IAAID,EAAiBE,MAAmB,CAC9D,WAAAd,CAKAe,GACId,KAAKc,QAAUA,CACnB,CACA,OAAAC,GACI,MAAM5F,EAAS,GAEf,OADA6E,KAAKc,QAAQpF,IAAUP,EAAOF,KAAKS,IAAc,IAC1CP,CACX,CACA,MAAAa,CAAOoE,GACH,OAAO,IAAIO,EAAiBK,GAAMhB,KAAKc,QAAQpF,IAAQ0E,EAAU1E,IAAQsF,EAAGtF,IAChF,CACA,GAAAuF,CAAIC,GACA,OAAO,IAAIP,EAAiBK,GAAMhB,KAAKc,QAAQpF,GAAQsF,EAAGE,EAAMxF,KACpE,CACA,QAAAyF,CAASf,GACL,IAAIjF,EAOJ,OANA6E,KAAKc,QAAQpF,IACL0E,EAAU1E,KACVP,EAASO,IAEN,IAEJP,CACX,CACA,aAAAiG,CAAcxH,GACV,IAAIuB,EACAkG,GAAQ,EAQZ,OAPArB,KAAKc,QAAQpF,KACL2F,GAASxC,EAAcW,cAAc5F,EAAW8B,EAAMP,OACtDkG,GAAQ,EACRlG,EAASO,IAEN,IAEJP,CACX,EAKG,MAAMmG,EACT,WAAAvB,CAAYwB,GACRvB,KAAKuB,UAAYA,CACrB,CAIA,4BAAOC,CAAsB7I,EAAK8I,GAC9B,MAAMC,EAAcpF,MAAMa,KAAKxE,EAAIgJ,QAAQrG,KAAK,CAACsG,EAAQC,IAAWJ,EAAU9I,EAAIiJ,GAASjJ,EAAIkJ,KAC/F,OAAO,IAAIP,EAAYI,EAC3B,CAIA,KAAAI,CAAMnJ,GACF,OAAOA,EAAIsI,IAAI,CAACc,EAAGxI,IAAUZ,EAAIqH,KAAKuB,UAAUhI,IACpD,CAIA,OAAAyI,GACI,MAAMC,EAAkBjC,KAAKuB,UAAU1I,QACvC,IAAK,IAAIO,EAAI,EAAGA,EAAI4G,KAAKuB,UAAU9I,OAAQW,IACvC6I,EAAgBjC,KAAKuB,UAAUnI,IAAMA,EAEzC,OAAO,IAAIkI,EAAYW,EAC3B,E,sGC9eG,MAAMC,EACT,mBAAOC,GAIH,OAHKnC,KAAKoC,mBACNpC,KAAKoC,iBAAmBC,SAASC,eAE9BtC,KAAKoC,gBAChB,CACA,mBAAOG,CAAatF,EAAOuF,GAGvBvF,EAAMwF,mBAAmBD,EAC7B,CACA,uBAAOE,CAAiBC,EAAcC,EAAaC,EAAYC,EAAWN,GACtE,MAAMvF,EAAQ+C,KAAKmC,eACnB,IAGI,OAFAlF,EAAM8F,SAASJ,EAAcC,GAC7B3F,EAAM+F,OAAOH,EAAYC,GAClB7F,EAAMgG,gBACjB,CACA,MAAOhH,GAEH,OAAO,IACX,CACA,QACI+D,KAAKuC,aAAatF,EAAOuF,EAC7B,CACJ,CACA,2BAAOU,CAAqBC,GACxB,GAAsB,IAAlBA,EAAO1K,OAEP,OAAO0K,EAEXA,EAAO7H,KAAK,KAAqBhB,SACjC,MAAMa,EAAS,GACf,IAAIiI,EAAY,EACZC,EAAOF,EAAO,GAClB,IAAK,IAAI/J,EAAI,EAAGC,EAAM8J,EAAO1K,OAAQW,EAAIC,EAAKD,IAAK,CAC/C,MAAM6D,EAAQkG,EAAO/J,GACjBiK,EAAKC,KAAOD,EAAKE,MAAQ,IAAkDtG,EAAMqG,KACjFD,EAAKE,MAAQ9I,KAAKkE,IAAI0E,EAAKE,MAAOtG,EAAMqG,KAAOrG,EAAMsG,MAAQF,EAAKC,OAGlEnI,EAAOiI,KAAeC,EACtBA,EAAOpG,EAEf,CAEA,OADA9B,EAAOiI,KAAeC,EACflI,CACX,CACA,6CAAOqI,CAAuCC,EAAaC,EAAqBC,GAC5E,IAAKF,GAAsC,IAAvBA,EAAYhL,OAC5B,OAAO,KAIX,MAAM0C,EAAS,GACf,IAAK,IAAI/B,EAAI,EAAGC,EAAMoK,EAAYhL,OAAQW,EAAIC,EAAKD,IAAK,CACpD,MAAMwK,EAAaH,EAAYrK,GAC/B+B,EAAO/B,GAAK,IAAI,KAAqBqB,KAAKkE,IAAI,GAAIiF,EAAWN,KAAOI,GAAuBC,GAAkBC,EAAWL,MAAQI,EACpI,CACA,OAAO3D,KAAKkD,qBAAqB/H,EACrC,CACA,2BAAO0I,CAAqBC,EAASC,EAAiBnB,EAAaoB,EAAelB,EAAWmB,GAEzF,MACMtF,EAAMmF,EAAQI,SAASzL,OAAS,EACtC,GAFY,EAEFkG,EACN,OAAO,KAIX,IAFAoF,EAAkBtJ,KAAKmE,IAAID,EAAKlE,KAAKkE,IALzB,EAKkCoF,QAC9CC,EAAgBvJ,KAAKmE,IAAID,EAAKlE,KAAKkE,IANvB,EAMgCqF,MACHpB,IAAgBE,GAA6B,IAAhBF,IAAsBkB,EAAQI,SAASH,GAAiBI,WAAY,CAGtI,MAAMV,EAAcK,EAAQI,SAASH,GAAiBd,iBAEtD,OADAgB,EAAQG,mBACDpE,KAAKwD,uCAAuCC,EAAaQ,EAAQP,oBAAqBO,EAAQN,gBACzG,CAGII,IAAoBC,GAChBA,EAAgB,GAAmB,IAAdlB,IACrBkB,IACAlB,EAAY,YAGpB,IAAIH,EAAemB,EAAQI,SAASH,GAAiBI,WACjDtB,EAAaiB,EAAQI,SAASF,GAAeG,WAYjD,GAXKxB,GAAiBE,KAEbF,GAAgC,IAAhBC,GAAqBmB,EAAkB,IACxDpB,EAAemB,EAAQI,SAASH,EAAkB,GAAGI,WACrDvB,EAAc,aAEbC,GAA4B,IAAdC,GAAmBkB,EAAgB,IAClDnB,EAAaiB,EAAQI,SAASF,EAAgB,GAAGG,WACjDrB,EAAY,cAGfH,IAAiBE,EAClB,OAAO,KAEXD,EAAcnI,KAAKmE,IAAI+D,EAAa0B,YAAY5L,OAAQgC,KAAKkE,IAAI,EAAGiE,IACpEE,EAAYrI,KAAKmE,IAAIiE,EAAWwB,YAAY5L,OAAQgC,KAAKkE,IAAI,EAAGmE,IAChE,MAAMW,EAAczD,KAAK0C,iBAAiBC,EAAcC,EAAaC,EAAYC,EAAWmB,EAAQzB,SAEpG,OADAyB,EAAQG,mBACDpE,KAAKwD,uCAAuCC,EAAaQ,EAAQP,oBAAqBO,EAAQN,gBACzG,E,+CCnGJ,MAAMW,IACEC,EAAA,MAIAA,EAAA,IAAoBC,EAAA,IAAqBA,EAAA,IAgBjD,IAAIC,GAA+B,EAC5B,MAAMC,EACT,WAAA3E,CAAY4E,EAAQC,GAChB5E,KAAK4E,UAAYA,EACjB,MAAMC,EAAUF,EAAOE,QACjBC,EAAWD,EAAQlP,IAAI,IACvBoP,EAAkCF,EAAQlP,IAAI,IAEhDqK,KAAKgF,iBAD+B,QAApCD,EACwBF,EAAQlP,IAAI,KAIZ,OAE5BqK,KAAKiF,wBAA0BJ,EAAQlP,IAAI,IAC3CqK,KAAKkF,WAAaJ,EAASI,WAC3BlF,KAAKmF,YAAcL,EAASK,YAC5BnF,KAAKoF,cAAgBN,EAASM,cAC9BpF,KAAKqF,0BAA6BP,EAASQ,cACnCT,EAAQlP,IAAI,IACpBqK,KAAKuF,+BAAiCT,EAASS,+BAC/CvF,KAAKwF,WAAaX,EAAQlP,IAAI,IAC9BqK,KAAKyF,uBAAyBZ,EAAQlP,IAAI,KAC1CqK,KAAK0F,cAAgBb,EAAQlP,IAAI,GACrC,CACA,MAAAmD,CAAOE,GACH,OAAQgH,KAAK4E,YAAc5L,EAAM4L,WAC1B5E,KAAKgF,mBAAqBhM,EAAMgM,kBAChChF,KAAKiF,0BAA4BjM,EAAMiM,yBACvCjF,KAAKkF,aAAelM,EAAMkM,YAC1BlF,KAAKmF,cAAgBnM,EAAMmM,aAC3BnF,KAAKoF,gBAAkBpM,EAAMoM,eAC7BpF,KAAKqF,4BAA8BrM,EAAMqM,2BACzCrF,KAAKuF,iCAAmCvM,EAAMuM,gCAC9CvF,KAAKwF,aAAexM,EAAMwM,YAC1BxF,KAAKyF,yBAA2BzM,EAAMyM,wBACtCzF,KAAK0F,gBAAkB1M,EAAM0M,aACxC,EAEG,MAAMC,SACA3F,KAAK4F,WAAa,WAAa,CACxC,WAAA7F,CAAY8E,GACR7E,KAAK6F,SAAWhB,EAChB7E,KAAK8F,iBAAkB,EACvB9F,KAAK+F,kBAAoB,IAC7B,CAEA,UAAAC,GACI,OAAIhG,KAAK+F,mBAAqB/F,KAAK+F,kBAAkBjC,QAC1C9D,KAAK+F,kBAAkBjC,QAAQA,QAEnC,IACX,CACA,UAAAmC,CAAWnC,GACP,IAAI9D,KAAK+F,kBAIL,MAAM,IAAInN,MAAM,0DAHhBoH,KAAK+F,kBAAkBjC,SAAU,OAAkBA,EAK3D,CACA,gBAAAoC,GACIlG,KAAK8F,iBAAkB,CAC3B,CACA,eAAAK,GACInG,KAAK8F,iBAAkB,CAC3B,CACA,oBAAAM,GACIpG,KAAK8F,iBAAkB,CAC3B,CACA,gBAAAO,CAAiBC,GACbtG,KAAK8F,iBAAkB,EACvB9F,KAAK6F,SAAWS,CACpB,CACA,kBAAAC,GACI,UAAI,QAAevG,KAAK6F,SAASjB,YAAiD,cAAnC5E,KAAK6F,SAASb,mBACzDhF,KAAK8F,iBAAkB,EAChB,GAGf,CACA,UAAAU,CAAWC,EAAYC,EAAUlB,EAAYmB,EAAcC,GACvD,IAA6B,IAAzB5G,KAAK8F,gBAEL,OAAO,EAEX9F,KAAK8F,iBAAkB,EACvB,MAAMe,EAAWF,EAAaG,yBAAyBL,GACjD5B,EAAU7E,KAAK6F,SACfkB,EAA0B,IAAe/K,OAAO6K,EAASG,kBAAmBP,EAAYI,EAASI,UAAWJ,EAASK,WAE3H,IAAIC,EAAmB,KACvB,IAAI,QAAetC,EAAQD,YAAiD,cAAnC5E,KAAK6F,SAASb,iBAAkC,CACrF,MAAMoC,EAAaT,EAAaS,WAChC,IAAK,MAAMC,KAAaD,EAAY,CAChC,GAAIC,EAAUC,cAAgBb,GAAcY,EAAUE,gBAAkBd,EAEpE,SAEJ,MAAMe,EAAeH,EAAUE,kBAAoBd,EAAaY,EAAUG,YAAcX,EAASI,UAC3FQ,EAAaJ,EAAUC,gBAAkBb,EAAaY,EAAUI,UAAYZ,EAASK,UACvFM,EAAcC,KACV,QAAe5C,EAAQD,YACvBmC,EAAwB9L,KAAK,IAAI,IAAeuM,EAAaC,EAAW,uBAAwB,IAE7D,cAAnCzH,KAAK6F,SAASb,mBACTmC,IACDA,EAAmB,IAEvBA,EAAiBlM,KAAK,IAAI,KAAUuM,EAAc,EAAGC,EAAY,KAG7E,CACJ,CACA,MAAMC,EAAkB,IAAI,KAAgB7C,EAAQQ,0BAA2BR,EAAQU,+BAAgCsB,EAASc,QAASd,EAASe,yBAA0Bf,EAASgB,aAAchB,EAASiB,YAAajB,EAASI,UAAY,EAAGJ,EAASkB,OAAQhB,EAAyBF,EAASmB,QAASnB,EAASoB,mBAAoBpD,EAAQK,WAAYL,EAAQM,YAAaN,EAAQO,cAAeP,EAAQY,uBAAwBZ,EAAQG,iBAAkBH,EAAQI,wBAAyBJ,EAAQa,gBAAkB,KAAoBwC,IAAKf,GACxhB,GAAInH,KAAK+F,mBAAqB/F,KAAK+F,kBAAkBoC,MAAMrP,OAAO4O,GAE9D,OAAO,EAEXd,EAAGwB,aAAa,oBAChBxB,EAAGwB,aAAaC,OAAO3B,IACvBE,EAAGwB,aAAa,cAChBxB,EAAGwB,aAAaC,OAAO7C,IACvBoB,EAAGwB,aAAa,gBAChBxB,EAAGwB,aAAazC,EAASC,YACzBgB,EAAGwB,aAAa,MAChB,MAAME,GAAS,QAAeZ,EAAiBd,GAC/CA,EAAGwB,aAAa,UAChB,IAAIG,EAAmB,KAQvB,OAPI9D,GAAgCH,GAA8BuC,EAASgB,cAAgBhD,EAAQQ,2BAAgE,IAAnCiD,EAAOE,0BACnID,EAAmB,IAAIE,EAAqBzI,KAAK+F,kBAAoB/F,KAAK+F,kBAAkBjC,QAAU,KAAM4D,EAAiBY,EAAOI,mBAEnIH,IACDA,EAAmBI,EAAmB3I,KAAK+F,kBAAoB/F,KAAK+F,kBAAkBjC,QAAU,KAAM4D,EAAiBY,EAAOI,iBAAkBJ,EAAOR,YAAaQ,EAAOE,0BAE/KxI,KAAK+F,kBAAoBwC,GAClB,CACX,CACA,UAAAK,CAAWnC,EAAYC,EAAUlB,GACzBxF,KAAK+F,mBAAqB/F,KAAK+F,kBAAkBjC,UACjD9D,KAAK+F,kBAAkBjC,QAAQ+E,OAAOnC,GACtC1G,KAAK+F,kBAAkBjC,QAAQgF,UAAUtD,GAEjD,CAEA,QAAAuD,CAAS9E,GACL,OAAKjE,KAAK+F,kBAGH/F,KAAK+F,kBAAkBgD,SAAS9E,GAF5B,CAGf,CACA,cAAA+E,GACI,OAAKhJ,KAAK+F,mBAGH/F,KAAK+F,kBAAkBiD,gBAClC,CACA,uBAAAC,GACI,QAAKjJ,KAAK+F,mBAGF/F,KAAK+F,6BAA6B0C,CAC9C,CACA,4BAAAhE,GACI,OAAKzE,KAAK+F,mBAGN/F,KAAK+F,6BAA6B0C,EAC3BzI,KAAK+F,kBAAkBtB,+BAHvBA,CAMf,CACA,iCAAAyE,GACQlJ,KAAK+F,mBAAqB/F,KAAK+F,6BAA6B0C,IAC5DzI,KAAK+F,kBAAoB/F,KAAK+F,kBAAkBoD,qBAExD,CACA,wBAAAC,CAAyB3C,EAAYe,EAAaC,EAAWxD,GACzD,IAAKjE,KAAK+F,kBACN,OAAO,KAEXyB,EAAc/M,KAAKmE,IAAIoB,KAAK+F,kBAAkBoC,MAAMkB,YAAY5Q,OAAS,EAAGgC,KAAKkE,IAAI,EAAG6I,IACxFC,EAAYhN,KAAKmE,IAAIoB,KAAK+F,kBAAkBoC,MAAMkB,YAAY5Q,OAAS,EAAGgC,KAAKkE,IAAI,EAAG8I,IACtF,MAAMhC,EAAyBzF,KAAK+F,kBAAkBoC,MAAM1C,uBAC5D,IAAgC,IAA5BA,GAAiC+B,EAAc/B,EAAyB,GAAKgC,EAAYhC,EAAyB,EAElH,OAAO,IAAI,MAAc,EAAM,CAAC,IAAI,KAAqBzF,KAAK+I,SAAS9E,GAAU,MAErD,IAA5BwB,GAAiC+B,EAAc/B,EAAyB,IACxE+B,EAAc/B,EAAyB,IAEX,IAA5BA,GAAiCgC,EAAYhC,EAAyB,IACtEgC,EAAYhC,EAAyB,GAEzC,MAAM6D,EAAmBtJ,KAAK+F,kBAAkBqD,yBAAyB3C,EAAYe,EAAaC,EAAWxD,GAC7G,OAAIqF,GAAoBA,EAAiB7Q,OAAS,EACvC,IAAI,MAAc,EAAO6Q,GAE7B,IACX,CACA,qBAAAC,CAAsBC,EAAUC,GAC5B,OAAKzJ,KAAK+F,kBAGH/F,KAAK+F,kBAAkBwD,sBAAsBC,EAAUC,GAFnD,CAGf,EAKJ,MAAMhB,EACF,WAAA1I,CAAY+D,EAAS4D,EAAiBgB,GAClC1I,KAAK0J,cAAgB,EACrB1J,KAAK8D,QAAUA,EACf9D,KAAKmI,MAAQT,EACb,MAAMiC,EAAiBlP,KAAKC,MAAMgN,EAAgB2B,YAAY5Q,OAAS,KACvE,GAAIkR,EAAiB,EAAG,CACpB3J,KAAK4J,2BAA6B,IAAIC,aAAaF,GACnD,IAAK,IAAIvQ,EAAI,EAAGA,EAAIuQ,EAAgBvQ,IAChC4G,KAAK4J,2BAA2BxQ,IAAM,CAE9C,MAEI4G,KAAK4J,2BAA6B,KAEtC5J,KAAK8J,kBAAoBpB,EACzB1I,KAAK+J,WAAarC,EAAgBxC,UACtC,CACA,QAAA6D,CAAS9E,GACL,IAAKjE,KAAK8D,SAAW9D,KAAKmI,MAAMkB,YAAY5Q,OAAS,IAA0C,CAC3F,MAAMuR,EAAmBhK,KAAK8J,kBAAkBG,oBAAoBjK,KAAK8J,kBAAkBrR,QAC3F,OAAOgC,KAAKyP,MAAMlK,KAAK+J,WAAaC,EACxC,CAKA,OAJ2B,IAAvBhK,KAAK0J,eACL1J,KAAK0J,aAAe1J,KAAKmK,kBAAkBnK,KAAK8D,SAASsG,YACzDnG,GAASG,oBAENpE,KAAK0J,YAChB,CACA,cAAAV,GACI,OAAQhJ,KAAKmI,MAAMkB,YAAY5Q,OAAS,MAAoE,IAAvBuH,KAAK0J,YAC9F,CACA,4BAAAjF,GACI,IAAKzE,KAAK8D,QACN,OAAOW,EAEX,GAAIzE,KAAKmI,MAAMkB,YAAY5Q,OAAS,IAA0C,CAC1E,MAAM4R,EAAgBrK,KAAK+I,SAAS,MAC9BuB,EAActK,KAAK8D,QAAQA,QAAQK,WAAWiG,YAChD3P,KAAK8P,IAAIF,EAAgBC,IAAgB,IAEzCE,QAAQC,KAAK,0FACbhG,GAA+B,EAEvC,CACA,OAAOA,CACX,CACA,kBAAA0E,GACI,OAAOR,EAAmB3I,KAAK8D,QAAS9D,KAAKmI,MAAOnI,KAAK8J,mBAAmB,EAAO,EACvF,CACA,wBAAAV,CAAyB3C,EAAYe,EAAaC,EAAWxD,GACzD,MAAMyG,EAAgB1K,KAAK2K,sBAAsBlE,EAAYe,EAAavD,GACpE2G,EAAc5K,KAAK2K,sBAAsBlE,EAAYgB,EAAWxD,GACtE,MAAO,CAAC,IAAI,KAAqByG,EAAeE,EAAcF,GAClE,CACA,qBAAAC,CAAsBlE,EAAYoE,EAAQ5G,GACtC,GAAI4G,GAAU,IAA0C,CACpD,MAAMb,EAAmBhK,KAAK8J,kBAAkBG,oBAAoBY,GACpE,OAAO7K,KAAK+J,WAAaC,CAC7B,CACA,MAAMc,EAAmBrQ,KAAKC,OAAOmQ,EAAS,GAAK,KAA4C,EACzFE,EAAqC,KAAxBD,EAAmB,GAAgD,EACtF,IAAIE,GAAwB,EAQ5B,GAPIhL,KAAK4J,6BACLoB,EAAuBhL,KAAK4J,2BAA2BkB,IACzB,IAA1BE,IACAA,EAAuBhL,KAAKiL,uBAAuBxE,EAAYsE,EAAW9G,GAC1EjE,KAAK4J,2BAA2BkB,GAAoBE,KAG9B,IAA1BA,EAA6B,CAE7B,MAAMhB,EAAmBhK,KAAK8J,kBAAkBG,oBAAoBY,GACpE,OAAO7K,KAAK+J,WAAaC,CAC7B,CACA,MAAMkB,EAA4BlL,KAAK8J,kBAAkBG,oBAAoBc,GACvEf,EAAmBhK,KAAK8J,kBAAkBG,oBAAoBY,GACpE,OAAOG,EAAuBhL,KAAK+J,YAAcC,EAAmBkB,EACxE,CACA,iBAAAf,CAAkBgB,GACd,OAAOA,EAAUrH,QAAQK,UAC7B,CACA,sBAAA8G,CAAuBxE,EAAYoE,EAAQ5G,GACvC,IAAKjE,KAAK8D,QACN,OAAQ,EAEZ,MAAMsH,EAAcpL,KAAK8J,kBAAkBuB,eAAeR,GACpDS,EAAIpJ,EAAU2B,qBAAqB7D,KAAKmK,kBAAkBnK,KAAK8D,SAAUsH,EAAYG,UAAWH,EAAYI,UAAWJ,EAAYG,UAAWH,EAAYI,UAAWvH,GAC3K,OAAKqH,GAAkB,IAAbA,EAAE7S,OAGL6S,EAAE,GAAGhI,MAFA,CAGhB,CACA,qBAAAiG,CAAsBC,EAAUC,GAC5B,OAAOF,EAAsBvJ,KAAK8J,kBAAmBN,EAAUC,EACnE,EAKJ,MAAMgC,EACF,WAAA1L,CAAY+D,EAAS4D,EAAiBgB,EAAkBZ,EAAaU,GAQjE,GAPAxI,KAAK8D,QAAUA,EACf9D,KAAKmI,MAAQT,EACb1H,KAAK8J,kBAAoBpB,EACzB1I,KAAK0L,kBAAoB,QAAQC,KAAKjE,EAAgB2B,aACtDrJ,KAAK4L,yBAA2BpD,EAChCxI,KAAK0J,cAAgB,EACrB1J,KAAK6L,kBAAoB,MACpB/D,GAAiD,IAAlC9H,KAAK8J,kBAAkBrR,OAAsC,CAC7EuH,KAAK6L,kBAAoB,IAAIhC,aAAapP,KAAKkE,IAAI,EAAGqB,KAAK8J,kBAAkBrR,OAAS,IACtF,IAAK,IAAIoS,EAAS,EAAGxR,EAAM2G,KAAK8J,kBAAkBrR,OAAQoS,GAAUxR,EAAKwR,IACrE7K,KAAK6L,kBAAkBhB,IAAW,CAE1C,CACJ,CAEA,iBAAAV,CAAkBgB,GACd,OAAOA,EAAUrH,QAAQK,UAC7B,CAIA,QAAA4E,CAAS9E,GACL,OAAKjE,KAAK8D,UAGiB,IAAvB9D,KAAK0J,eACL1J,KAAK0J,aAAe1J,KAAKmK,kBAAkBnK,KAAK8D,SAASsG,YACzDnG,GAASG,oBAENpE,KAAK0J,cAND,CAOf,CACA,cAAAV,GACI,OAA2B,IAAvBhJ,KAAK0J,YAIb,CAIA,wBAAAN,CAAyB3C,EAAYe,EAAaC,EAAWxD,GACzD,IAAKjE,KAAK8D,QACN,OAAO,KAEX,GAA+B,OAA3B9D,KAAK6L,kBAA4B,CAEjC,MAAMjJ,EAAc5C,KAAK8L,iBAAiB9L,KAAK8D,QAAS2C,EAAYe,EAAavD,GACjF,IAAqB,IAAjBrB,EACA,OAAO,KAEX,MAAME,EAAY9C,KAAK8L,iBAAiB9L,KAAK8D,QAAS2C,EAAYgB,EAAWxD,GAC7E,OAAmB,IAAfnB,EACO,KAEJ,CAAC,IAAI,KAAqBF,EAAaE,EAAYF,GAC9D,CACA,OAAO5C,KAAK+L,2BAA2B/L,KAAK8D,QAAS2C,EAAYe,EAAaC,EAAWxD,EAC7F,CACA,0BAAA8H,CAA2BjI,EAAS2C,EAAYe,EAAaC,EAAWxD,GACpE,GAAIuD,IAAgBC,EAAW,CAC3B,MAAMuE,EAAchM,KAAK8L,iBAAiBhI,EAAS2C,EAAYe,EAAavD,GAC5E,OAAqB,IAAjB+H,EACO,KAGA,CAAC,IAAI,KAAqBA,EAAa,GAEtD,CAEI,OAAOhM,KAAKiM,8BAA8BnI,EAAS0D,EAAaC,EAAWxD,EAEnF,CACA,gBAAA6H,CAAiBhI,EAAS2C,EAAYoE,EAAQ5G,GAC1C,GAAsC,IAAlCjE,KAAK8J,kBAAkBrR,OAAc,CAErC,GAAsC,IAAlCuH,KAAK4L,yBAEL,OAAO,EAEX,GAAsC,IAAlC5L,KAAK4L,yBAEL,OAAO,EAEX,GAAsC,IAAlC5L,KAAK4L,yBAEL,OAAO5L,KAAK+I,SAAS9E,GAGzB,MAAMiI,EAAgBlM,KAAKmK,kBAAkBrG,GAC7C,OAAIoI,EAAc/H,YACdF,EAAQG,mBACD8H,EAAc/H,WAAWiG,aAGzB,CAEf,CACA,GAA+B,OAA3BpK,KAAK6L,kBAA4B,CAEjC,MAAMM,EAAoBnM,KAAK6L,kBAAkBhB,GACjD,IAA2B,IAAvBsB,EACA,OAAOA,EAEX,MAAMhR,EAAS6E,KAAKiL,uBAAuBnH,EAAS2C,EAAYoE,EAAQ5G,GAExE,OADAjE,KAAK6L,kBAAkBhB,GAAU1P,EAC1BA,CACX,CACA,OAAO6E,KAAKiL,uBAAuBnH,EAAS2C,EAAYoE,EAAQ5G,EACpE,CACA,sBAAAgH,CAAuBnH,EAAS2C,EAAYoE,EAAQ5G,GAChD,GAAsC,IAAlCjE,KAAK8J,kBAAkBrR,OAAc,CAErC,MAAM6S,EAAIpJ,EAAU2B,qBAAqB7D,KAAKmK,kBAAkBrG,GAAU,EAAG,EAAG,EAAG,EAAGG,GACtF,OAAKqH,GAAkB,IAAbA,EAAE7S,OAGL6S,EAAE,GAAGhI,MAFA,CAGhB,CACA,GAAIuH,IAAW7K,KAAK8J,kBAAkBrR,QAAUuH,KAAK0L,mBAAuD,IAAlC1L,KAAK4L,yBAE3E,OAAO5L,KAAK+I,SAAS9E,GAEzB,MAAMmH,EAAcpL,KAAK8J,kBAAkBuB,eAAeR,GACpDS,EAAIpJ,EAAU2B,qBAAqB7D,KAAKmK,kBAAkBrG,GAAUsH,EAAYG,UAAWH,EAAYI,UAAWJ,EAAYG,UAAWH,EAAYI,UAAWvH,GACtK,IAAKqH,GAAkB,IAAbA,EAAE7S,OACR,OAAQ,EAEZ,MAAM0C,EAASmQ,EAAE,GAAGhI,KACpB,GAAItD,KAAKmI,MAAMN,aAAc,CACzB,MAAMmC,EAAmBhK,KAAK8J,kBAAkBG,oBAAoBY,GAC9DuB,EAAiB3R,KAAKyP,MAAMlK,KAAKmI,MAAMjD,WAAa8E,GAC1D,GAAIvP,KAAK8P,IAAI6B,EAAiBjR,IAAW,EACrC,OAAOiR,CAEf,CACA,OAAOjR,CACX,CACA,6BAAA8Q,CAA8BnI,EAAS0D,EAAaC,EAAWxD,GAC3D,GAAoB,IAAhBuD,GAAqBC,IAAczH,KAAK8J,kBAAkBrR,OAE1D,MAAO,CAAC,IAAI,KAAqB,EAAGuH,KAAK+I,SAAS9E,KAEtD,MAAMoI,EAAmBrM,KAAK8J,kBAAkBuB,eAAe7D,GACzD8E,EAAiBtM,KAAK8J,kBAAkBuB,eAAe5D,GAC7D,OAAOvF,EAAU2B,qBAAqB7D,KAAKmK,kBAAkBrG,GAAUuI,EAAiBd,UAAWc,EAAiBb,UAAWc,EAAef,UAAWe,EAAed,UAAWvH,EACvL,CAIA,qBAAAsF,CAAsBC,EAAUC,GAC5B,OAAOF,EAAsBvJ,KAAK8J,kBAAmBN,EAAUC,EACnE,EAEJ,MAAM8C,UAA+Bd,EACjC,0BAAAM,CAA2BjI,EAAS2C,EAAYe,EAAaC,EAAWxD,GACpE,MAAMqE,EAASkE,MAAMT,2BAA2BjI,EAAS2C,EAAYe,EAAaC,EAAWxD,GAC7F,IAAKqE,GAA4B,IAAlBA,EAAO7P,QAAgB+O,IAAgBC,GAA8B,IAAhBD,GAAqBC,IAAczH,KAAK8J,kBAAkBrR,OAC1H,OAAO6P,EAIX,IAAKtI,KAAKmI,MAAML,YAAa,CAGzB,MAAM2E,EAAiBzM,KAAK8L,iBAAiBhI,EAAS2C,EAAYgB,EAAWxD,GAC7E,IAAwB,IAApBwI,EAAuB,CACvB,MAAMC,EAAYpE,EAAOA,EAAO7P,OAAS,GACrCiU,EAAUpJ,KAAOmJ,IAEjBC,EAAUnJ,MAAQkJ,EAAiBC,EAAUpJ,KAErD,CACJ,CACA,OAAOgF,CACX,EAEJ,MAAMK,EACEnE,EAAA,GAKR,SAAkCV,EAAS4D,EAAiBgB,EAAkBZ,EAAaU,GACvF,OAAO,IAAI+D,EAAuBzI,EAAS4D,EAAiBgB,EAAkBZ,EAAaU,EAC/F,EACA,SAAkC1E,EAAS4D,EAAiBgB,EAAkBZ,EAAaU,GACvF,OAAO,IAAIiD,EAAiB3H,EAAS4D,EAAiBgB,EAAkBZ,EAAaU,EACzF,EACO,SAASe,EAAsBb,EAAkBc,EAAUC,GAC9D,MAAMkD,EAA4BnD,EAASnF,YAAY5L,OACvD,IAAImU,GAAa,EACjB,KAAOpD,GACHA,EAAWA,EAASqD,gBACpBD,IAEJ,OAAOlE,EAAiBoE,UAAU,IAAI,KAAYF,EAAWnD,GAASkD,EAC1E,C,yDC5hBA,MAAM,QACJI,EAAO,eACPC,EAAc,SACdC,EAAQ,eACRC,EAAc,yBACdC,GACE1X,OACJ,IAAI,OACF2X,EAAM,KACNC,EAAI,OACJC,GACE7X,QACA,MACFqM,EAAK,UACLyL,GACqB,oBAAZC,SAA2BA,QACjCJ,IACHA,EAAS,SAAgBlP,GACvB,OAAOA,CACT,GAEGmP,IACHA,EAAO,SAAcnP,GACnB,OAAOA,CACT,GAEG4D,IACHA,EAAQ,SAAe2L,EAAKC,EAAWC,GACrC,OAAOF,EAAI3L,MAAM4L,EAAWC,EAC9B,GAEGJ,IACHA,EAAY,SAAmBK,EAAMD,GACnC,OAAO,IAAIC,KAAQD,EACrB,GAEF,MAAME,EAAeC,EAAQxR,MAAMyR,UAAUC,SACvCC,EAAWH,EAAQxR,MAAMyR,UAAUtU,KACnCyU,EAAYJ,EAAQxR,MAAMyR,UAAU9S,MACpCkT,EAAoBL,EAAQzF,OAAO0F,UAAUK,aAC7CC,EAAiBP,EAAQzF,OAAO0F,UAAUO,UAC1CC,EAAcT,EAAQzF,OAAO0F,UAAUS,OACvCC,EAAgBX,EAAQzF,OAAO0F,UAAUW,SACzCC,EAAgBb,EAAQzF,OAAO0F,UAAUnQ,SACzCgR,EAAad,EAAQzF,OAAO0F,UAAUc,MACtCC,EAAuBhB,EAAQrY,OAAOsY,UAAUgB,gBAChDC,EAAalB,EAAQmB,OAAOlB,UAAUpC,MACtCuD,GAuBeC,EAvBe5U,UAwB3B,WACL,IAAK,IAAI6U,EAAQC,UAAU5W,OAAQkV,EAAO,IAAIrR,MAAM8S,GAAQE,EAAQ,EAAGA,EAAQF,EAAOE,IACpF3B,EAAK2B,GAASD,UAAUC,GAE1B,OAAO/B,EAAU4B,EAAMxB,EACzB,GANF,IAAqBwB,EAfrB,SAASrB,EAAQqB,GACf,OAAO,SAAUI,GACf,IAAK,IAAIC,EAAOH,UAAU5W,OAAQkV,EAAO,IAAIrR,MAAMkT,EAAO,EAAIA,EAAO,EAAI,GAAIC,EAAO,EAAGA,EAAOD,EAAMC,IAClG9B,EAAK8B,EAAO,GAAKJ,UAAUI,GAE7B,OAAO3N,EAAMqN,EAAMI,EAAS5B,EAC9B,CACF,CAyBA,SAAS+B,EAASC,EAAKpX,GACrB,IAAIqX,EAAoBP,UAAU5W,OAAS,QAAsBkD,IAAjB0T,UAAU,GAAmBA,UAAU,GAAKlB,EACxFnB,GAIFA,EAAe2C,EAAK,MAEtB,IAAIE,EAAItX,EAAME,OACd,KAAOoX,KAAK,CACV,IAAIxU,EAAU9C,EAAMsX,GACpB,GAAuB,iBAAZxU,EAAsB,CAC/B,MAAMyU,EAAYF,EAAkBvU,GAChCyU,IAAczU,IAEX4R,EAAS1U,KACZA,EAAMsX,GAAKC,GAEbzU,EAAUyU,EAEd,CACAH,EAAItU,IAAW,CACjB,CACA,OAAOsU,CACT,CAQA,SAASI,EAAWxX,GAClB,IAAK,IAAIgB,EAAQ,EAAGA,EAAQhB,EAAME,OAAQc,IAChBuV,EAAqBvW,EAAOgB,KAElDhB,EAAMgB,GAAS,MAGnB,OAAOhB,CACT,CAQA,SAASyX,EAAMC,GACb,MAAMC,EAAY5C,EAAO,MACzB,IAAK,MAAO6C,EAAUpV,KAAUgS,EAAQkD,GACdnB,EAAqBmB,EAAQE,KAE/C7T,MAAMC,QAAQxB,GAChBmV,EAAUC,GAAYJ,EAAWhV,GACxBA,GAA0B,iBAAVA,GAAsBA,EAAMgF,cAAgBtK,OACrEya,EAAUC,GAAYH,EAAMjV,GAE5BmV,EAAUC,GAAYpV,GAI5B,OAAOmV,CACT,CASA,SAASE,EAAaH,EAAQI,GAC5B,KAAkB,OAAXJ,GAAiB,CACtB,MAAMK,EAAOnD,EAAyB8C,EAAQI,GAC9C,GAAIC,EAAM,CACR,GAAIA,EAAK3a,IACP,OAAOmY,EAAQwC,EAAK3a,KAEtB,GAA0B,mBAAf2a,EAAKvV,MACd,OAAO+S,EAAQwC,EAAKvV,MAExB,CACAkV,EAAS/C,EAAe+C,EAC1B,CAIA,OAHA,WACE,OAAO,IACT,CAEF,CAEA,MAAMM,EAASnD,EAAO,CAAC,IAAK,OAAQ,UAAW,UAAW,OAAQ,UAAW,QAAS,QAAS,IAAK,MAAO,MAAO,MAAO,QAAS,aAAc,OAAQ,KAAM,SAAU,SAAU,UAAW,SAAU,OAAQ,OAAQ,MAAO,WAAY,UAAW,OAAQ,WAAY,KAAM,YAAa,MAAO,UAAW,MAAO,SAAU,MAAO,MAAO,KAAM,KAAM,UAAW,KAAM,WAAY,aAAc,SAAU,OAAQ,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAAQ,SAAU,SAAU,KAAM,OAAQ,IAAK,MAAO,QAAS,MAAO,MAAO,QAAS,SAAU,KAAM,OAAQ,MAAO,OAAQ,UAAW,OAAQ,WAAY,QAAS,MAAO,OAAQ,KAAM,WAAY,SAAU,SAAU,IAAK,UAAW,MAAO,WAAY,IAAK,KAAM,KAAM,OAAQ,IAAK,OAAQ,UAAW,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,SAAU,SAAU,QAAS,MAAO,UAAW,MAAO,QAAS,QAAS,KAAM,WAAY,WAAY,QAAS,KAAM,QAAS,OAAQ,KAAM,QAAS,KAAM,IAAK,KAAM,MAAO,QAAS,QAGn+BoD,EAAQpD,EAAO,CAAC,MAAO,IAAK,WAAY,cAAe,eAAgB,eAAgB,gBAAiB,mBAAoB,SAAU,WAAY,OAAQ,OAAQ,UAAW,SAAU,OAAQ,IAAK,QAAS,WAAY,QAAS,QAAS,OAAQ,iBAAkB,SAAU,OAAQ,WAAY,QAAS,OAAQ,UAAW,UAAW,WAAY,iBAAkB,OAAQ,OAAQ,QAAS,SAAU,SAAU,OAAQ,WAAY,QAAS,OAAQ,QAAS,OAAQ,UAC3cqD,EAAarD,EAAO,CAAC,UAAW,gBAAiB,sBAAuB,cAAe,mBAAoB,oBAAqB,oBAAqB,iBAAkB,eAAgB,UAAW,UAAW,UAAW,UAAW,UAAW,iBAAkB,UAAW,UAAW,cAAe,eAAgB,WAAY,eAAgB,qBAAsB,cAAe,SAAU,iBAMhYsD,EAAgBtD,EAAO,CAAC,UAAW,gBAAiB,SAAU,UAAW,YAAa,mBAAoB,iBAAkB,gBAAiB,gBAAiB,gBAAiB,QAAS,YAAa,OAAQ,eAAgB,YAAa,UAAW,gBAAiB,SAAU,MAAO,aAAc,UAAW,QAChTuD,EAAWvD,EAAO,CAAC,OAAQ,WAAY,SAAU,UAAW,QAAS,SAAU,KAAM,aAAc,gBAAiB,KAAM,KAAM,QAAS,UAAW,WAAY,QAAS,OAAQ,KAAM,SAAU,QAAS,SAAU,OAAQ,OAAQ,UAAW,SAAU,MAAO,QAAS,MAAO,SAAU,aAAc,gBAIxSwD,EAAmBxD,EAAO,CAAC,UAAW,cAAe,aAAc,WAAY,YAAa,UAAW,UAAW,SAAU,SAAU,QAAS,YAAa,aAAc,iBAAkB,cAAe,SAC3MyD,EAAOzD,EAAO,CAAC,UAEf0D,EAAO1D,EAAO,CAAC,SAAU,SAAU,QAAS,MAAO,iBAAkB,eAAgB,uBAAwB,WAAY,aAAc,UAAW,SAAU,UAAW,cAAe,cAAe,UAAW,OAAQ,QAAS,QAAS,QAAS,OAAQ,UAAW,WAAY,eAAgB,SAAU,cAAe,WAAY,WAAY,UAAW,MAAO,WAAY,0BAA2B,wBAAyB,WAAY,YAAa,UAAW,eAAgB,OAAQ,MAAO,UAAW,SAAU,SAAU,OAAQ,OAAQ,WAAY,KAAM,YAAa,YAAa,QAAS,OAAQ,QAAS,OAAQ,OAAQ,UAAW,OAAQ,MAAO,MAAO,YAAa,QAAS,SAAU,MAAO,YAAa,WAAY,QAAS,OAAQ,QAAS,UAAW,aAAc,SAAU,OAAQ,UAAW,UAAW,cAAe,cAAe,UAAW,gBAAiB,sBAAuB,SAAU,UAAW,UAAW,aAAc,WAAY,MAAO,WAAY,MAAO,WAAY,OAAQ,OAAQ,UAAW,aAAc,QAAS,WAAY,QAAS,OAAQ,QAAS,OAAQ,UAAW,QAAS,MAAO,SAAU,OAAQ,QAAS,UAAW,WAAY,QAAS,YAAa,OAAQ,SAAU,SAAU,QAAS,QAAS,OAAQ,QAAS,SAC5tC2D,EAAM3D,EAAO,CAAC,gBAAiB,aAAc,WAAY,qBAAsB,YAAa,SAAU,gBAAiB,gBAAiB,UAAW,gBAAiB,iBAAkB,QAAS,OAAQ,KAAM,QAAS,OAAQ,gBAAiB,YAAa,YAAa,QAAS,sBAAuB,8BAA+B,gBAAiB,kBAAmB,KAAM,KAAM,IAAK,KAAM,KAAM,kBAAmB,YAAa,UAAW,UAAW,MAAO,WAAY,YAAa,MAAO,WAAY,OAAQ,eAAgB,YAAa,SAAU,cAAe,cAAe,gBAAiB,cAAe,YAAa,mBAAoB,eAAgB,aAAc,eAAgB,cAAe,KAAM,KAAM,KAAM,KAAM,aAAc,WAAY,gBAAiB,oBAAqB,SAAU,OAAQ,KAAM,kBAAmB,KAAM,MAAO,YAAa,IAAK,KAAM,KAAM,KAAM,KAAM,UAAW,YAAa,aAAc,WAAY,OAAQ,eAAgB,iBAAkB,eAAgB,mBAAoB,iBAAkB,QAAS,aAAc,aAAc,eAAgB,eAAgB,cAAe,cAAe,mBAAoB,YAAa,MAAO,OAAQ,QAAS,SAAU,OAAQ,MAAO,OAAQ,aAAc,SAAU,WAAY,UAAW,QAAS,SAAU,cAAe,SAAU,WAAY,cAAe,OAAQ,aAAc,sBAAuB,mBAAoB,eAAgB,SAAU,gBAAiB,sBAAuB,iBAAkB,IAAK,KAAM,KAAM,SAAU,OAAQ,OAAQ,cAAe,YAAa,UAAW,SAAU,SAAU,QAAS,OAAQ,kBAAmB,QAAS,mBAAoB,mBAAoB,eAAgB,cAAe,eAAgB,cAAe,aAAc,eAAgB,mBAAoB,oBAAqB,iBAAkB,kBAAmB,oBAAqB,iBAAkB,SAAU,eAAgB,QAAS,eAAgB,iBAAkB,WAAY,cAAe,UAAW,UAAW,YAAa,mBAAoB,cAAe,kBAAmB,iBAAkB,aAAc,OAAQ,KAAM,KAAM,UAAW,SAAU,UAAW,aAAc,UAAW,aAAc,gBAAiB,gBAAiB,QAAS,eAAgB,OAAQ,eAAgB,mBAAoB,mBAAoB,IAAK,KAAM,KAAM,QAAS,IAAK,KAAM,KAAM,IAAK,eAC5zE4D,EAAS5D,EAAO,CAAC,SAAU,cAAe,QAAS,WAAY,QAAS,eAAgB,cAAe,aAAc,aAAc,QAAS,MAAO,UAAW,eAAgB,WAAY,QAAS,QAAS,SAAU,OAAQ,KAAM,UAAW,SAAU,gBAAiB,SAAU,SAAU,iBAAkB,YAAa,WAAY,cAAe,UAAW,UAAW,gBAAiB,WAAY,WAAY,OAAQ,WAAY,WAAY,aAAc,UAAW,SAAU,SAAU,cAAe,gBAAiB,uBAAwB,YAAa,YAAa,aAAc,WAAY,iBAAkB,iBAAkB,YAAa,UAAW,QAAS,UACrpB6D,EAAM7D,EAAO,CAAC,aAAc,SAAU,cAAe,YAAa,gBAGlE8D,EAAgB7D,EAAK,6BACrB8D,EAAW9D,EAAK,yBAChB+D,EAAc/D,EAAK,iBACnBgE,EAAYhE,EAAK,8BACjBiE,EAAYjE,EAAK,kBACjBkE,EAAiBlE,EAAK,6FAEtBmE,EAAoBnE,EAAK,yBACzBoE,EAAkBpE,EAAK,+DAEvBqE,EAAerE,EAAK,WACpBsE,EAAiBtE,EAAK,4BAE5B,IAAIuE,EAA2Bnc,OAAO2X,OAAO,CAC3CyE,UAAW,KACXX,cAAeA,EACfC,SAAUA,EACVC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,eAAgBA,EAChBC,kBAAmBA,EACnBC,gBAAiBA,EACjBC,aAAcA,EACdC,eAAgBA,IAIlB,MAgBMG,EAAY,WAChB,MAAyB,oBAAXjc,OAAyB,KAAOA,MAChD,EAoxCA,IAAIkc,GA3uCJ,SAASC,IACP,IAAInc,EAASwZ,UAAU5W,OAAS,QAAsBkD,IAAjB0T,UAAU,GAAmBA,UAAU,GAAKyC,IACjF,MAAMG,EAAYC,GAAQF,EAAgBE,GAa1C,GAPAD,EAAUE,QAAU,QAMpBF,EAAUG,QAAU,IACfvc,IAAWA,EAAOwM,UA/Db,IA+DyBxM,EAAOwM,SAASgQ,SAIjD,OADAJ,EAAUK,aAAc,EACjBL,EAET,IAAI,SACF5P,GACExM,EACJ,MAAM0c,EAAmBlQ,EACnBmQ,EAAgBD,EAAiBC,eACjC,iBACJC,EAAgB,oBAChBC,EAAmB,KACnBC,EAAI,QACJC,EAAO,WACPC,EAAU,aACVC,EAAejd,EAAOid,cAAgBjd,EAAOkd,gBAAe,gBAC5DC,EAAe,UACfC,EAAS,aACTC,GACErd,EACEsd,EAAmBP,EAAQ7E,UAC3BqF,EAAYhD,EAAa+C,EAAkB,aAC3CE,EAASjD,EAAa+C,EAAkB,UACxCG,EAAiBlD,EAAa+C,EAAkB,eAChDI,EAAgBnD,EAAa+C,EAAkB,cAC/CK,EAAgBpD,EAAa+C,EAAkB,cAQrD,GAAmC,mBAAxBT,EAAoC,CAC7C,MAAMe,EAAWpR,EAASqR,cAAc,YACpCD,EAAS9L,SAAW8L,EAAS9L,QAAQgM,gBACvCtR,EAAWoR,EAAS9L,QAAQgM,cAEhC,CACA,IAAIC,GACAC,GAAY,GAChB,MAAM,eACJC,GAAc,mBACdC,GAAkB,uBAClBC,GAAsB,qBACtBC,IACE5R,GACE,WACJ6R,IACE3B,EACJ,IAAI4B,GAAQ,CAAC,EAKblC,EAAUK,YAAiC,mBAAZvF,GAAmD,mBAAlByG,GAAgCM,SAAwDnY,IAAtCmY,GAAeM,mBACjI,MAAM,cACJlD,GAAa,SACbC,GAAQ,YACRC,GAAW,UACXC,GAAS,UACTC,GAAS,kBACTE,GAAiB,gBACjBC,GAAe,eACfE,IACEC,EACJ,IACEL,eAAgB8C,IACdzC,EAQA0C,GAAe,KACnB,MAAMC,GAAuB7E,EAAS,CAAC,EAAG,IAAIa,KAAWC,KAAUC,KAAeE,KAAaE,IAG/F,IAAI2D,GAAe,KACnB,MAAMC,GAAuB/E,EAAS,CAAC,EAAG,IAAIoB,KAASC,KAAQC,KAAWC,IAQ1E,IAAIyD,GAA0Bjf,OAAO4X,KAAKC,EAAO,KAAM,CACrDqH,aAAc,CACZC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZ/Z,MAAO,MAETga,mBAAoB,CAClBH,UAAU,EACVC,cAAc,EACdC,YAAY,EACZ/Z,MAAO,MAETia,+BAAgC,CAC9BJ,UAAU,EACVC,cAAc,EACdC,YAAY,EACZ/Z,OAAO,MAKPka,GAAc,KAGdC,GAAc,KAGdC,IAAkB,EAGlBC,IAAkB,EAGlBC,IAA0B,EAI1BC,IAA2B,EAK3BC,IAAqB,EAKrBC,IAAe,EAGfC,IAAiB,EAGjBC,IAAa,EAIbC,IAAa,EAMbC,IAAa,EAIbC,IAAsB,EAItBC,IAAsB,EAKtBC,IAAe,EAefC,IAAuB,EAIvBC,IAAe,EAIfC,IAAW,EAGXC,GAAe,CAAC,EAGhBC,GAAkB,KACtB,MAAMC,GAA0B3G,EAAS,CAAC,EAAG,CAAC,iBAAkB,QAAS,WAAY,OAAQ,gBAAiB,OAAQ,SAAU,OAAQ,KAAM,KAAM,KAAM,KAAM,QAAS,UAAW,WAAY,WAAY,YAAa,SAAU,QAAS,MAAO,WAAY,QAAS,QAAS,QAAS,QAG1R,IAAI4G,GAAgB,KACpB,MAAMC,GAAwB7G,EAAS,CAAC,EAAG,CAAC,QAAS,QAAS,MAAO,SAAU,QAAS,UAGxF,IAAI8G,GAAsB,KAC1B,MAAMC,GAA8B/G,EAAS,CAAC,EAAG,CAAC,MAAO,QAAS,MAAO,KAAM,QAAS,OAAQ,UAAW,cAAe,OAAQ,UAAW,QAAS,QAAS,QAAS,UAClKgH,GAAmB,qCACnBC,GAAgB,6BAChBC,GAAiB,+BAEvB,IAAIC,GAAYD,GACZE,IAAiB,EAGjBC,GAAqB,KACzB,MAAMC,GAA6BtH,EAAS,CAAC,EAAG,CAACgH,GAAkBC,GAAeC,IAAiBvI,GAGnG,IAAI4I,GAAoB,KACxB,MAAMC,GAA+B,CAAC,wBAAyB,aAE/D,IAAItH,GAAoB,KAGpBuH,GAAS,KAKb,MAAMC,GAAc/U,EAASqR,cAAc,QACrC2D,GAAoB,SAA2BC,GACnD,OAAOA,aAAqBrI,QAAUqI,aAAqBC,QAC7D,EAQMC,GAAe,WACnB,IAAIC,EAAMpI,UAAU5W,OAAS,QAAsBkD,IAAjB0T,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC/E,IAAI8H,IAAUA,KAAWM,EAAzB,CAyIA,GApIKA,GAAsB,iBAARA,IACjBA,EAAM,CAAC,GAITA,EAAMzH,EAAMyH,GACZR,IAEmE,IAAjEC,GAA6BtZ,QAAQ6Z,EAAIR,mBAnCX,YAmCmEQ,EAAIR,kBAGvGrH,GAA0C,0BAAtBqH,GAAgD5I,EAAiBF,EAGrFmG,GAAexF,EAAqB2I,EAAK,gBAAkB/H,EAAS,CAAC,EAAG+H,EAAInD,aAAc1E,IAAqB2E,GAC/GC,GAAe1F,EAAqB2I,EAAK,gBAAkB/H,EAAS,CAAC,EAAG+H,EAAIjD,aAAc5E,IAAqB6E,GAC/GsC,GAAqBjI,EAAqB2I,EAAK,sBAAwB/H,EAAS,CAAC,EAAG+H,EAAIV,mBAAoB1I,GAAkB2I,GAC9HR,GAAsB1H,EAAqB2I,EAAK,qBAAuB/H,EAASM,EAAMyG,IAEpFgB,EAAIC,kBAEJ9H,IAEE6G,GACJH,GAAgBxH,EAAqB2I,EAAK,qBAAuB/H,EAASM,EAAMuG,IAE9EkB,EAAIE,kBAEJ/H,IAEE2G,GACJH,GAAkBtH,EAAqB2I,EAAK,mBAAqB/H,EAAS,CAAC,EAAG+H,EAAIrB,gBAAiBxG,IAAqByG,GACxHpB,GAAcnG,EAAqB2I,EAAK,eAAiB/H,EAAS,CAAC,EAAG+H,EAAIxC,YAAarF,IAAqB,CAAC,EAC7GsF,GAAcpG,EAAqB2I,EAAK,eAAiB/H,EAAS,CAAC,EAAG+H,EAAIvC,YAAatF,IAAqB,CAAC,EAC7GuG,KAAerH,EAAqB2I,EAAK,iBAAkBA,EAAItB,aAC/DhB,IAA0C,IAAxBsC,EAAItC,gBACtBC,IAA0C,IAAxBqC,EAAIrC,gBACtBC,GAA0BoC,EAAIpC,0BAA2B,EACzDC,IAA4D,IAAjCmC,EAAInC,yBAC/BC,GAAqBkC,EAAIlC,qBAAsB,EAC/CC,IAAoC,IAArBiC,EAAIjC,aACnBC,GAAiBgC,EAAIhC,iBAAkB,EACvCG,GAAa6B,EAAI7B,aAAc,EAC/BC,GAAsB4B,EAAI5B,sBAAuB,EACjDC,GAAsB2B,EAAI3B,sBAAuB,EACjDH,GAAa8B,EAAI9B,aAAc,EAC/BI,IAAoC,IAArB0B,EAAI1B,aACnBC,GAAuByB,EAAIzB,uBAAwB,EACnDC,IAAoC,IAArBwB,EAAIxB,aACnBC,GAAWuB,EAAIvB,WAAY,EAC3B7B,GAAmBoD,EAAIG,oBAAsBrG,EAC7CsF,GAAYY,EAAIZ,WAAaD,GAC7BlC,GAA0B+C,EAAI/C,yBAA2B,CAAC,EACtD+C,EAAI/C,yBAA2B2C,GAAkBI,EAAI/C,wBAAwBC,gBAC/ED,GAAwBC,aAAe8C,EAAI/C,wBAAwBC,cAEjE8C,EAAI/C,yBAA2B2C,GAAkBI,EAAI/C,wBAAwBK,sBAC/EL,GAAwBK,mBAAqB0C,EAAI/C,wBAAwBK,oBAEvE0C,EAAI/C,yBAAiG,kBAA/D+C,EAAI/C,wBAAwBM,iCACpEN,GAAwBM,+BAAiCyC,EAAI/C,wBAAwBM,gCAEnFO,KACFH,IAAkB,GAEhBS,KACFD,IAAa,GAIXO,KACF7B,GAAe5E,EAAS,CAAC,EAAGmB,GAC5B2D,GAAe,IACW,IAAtB2B,GAAarF,OACfpB,EAAS4E,GAAc/D,GACvBb,EAAS8E,GAAc1D,KAEA,IAArBqF,GAAapF,MACfrB,EAAS4E,GAAc9D,GACvBd,EAAS8E,GAAczD,GACvBrB,EAAS8E,GAAcvD,KAEO,IAA5BkF,GAAa1F,aACff,EAAS4E,GAAc7D,GACvBf,EAAS8E,GAAczD,GACvBrB,EAAS8E,GAAcvD,KAEG,IAAxBkF,GAAanF,SACftB,EAAS4E,GAAc3D,GACvBjB,EAAS8E,GAAcxD,GACvBtB,EAAS8E,GAAcvD,KAKvBwG,EAAII,WACFvD,KAAiBC,KACnBD,GAAetE,EAAMsE,KAEvB5E,EAAS4E,GAAcmD,EAAII,SAAUjI,KAEnC6H,EAAIK,WACFtD,KAAiBC,KACnBD,GAAexE,EAAMwE,KAEvB9E,EAAS8E,GAAciD,EAAIK,SAAUlI,KAEnC6H,EAAIC,mBACNhI,EAAS8G,GAAqBiB,EAAIC,kBAAmB9H,IAEnD6H,EAAIrB,kBACFA,KAAoBC,KACtBD,GAAkBpG,EAAMoG,KAE1B1G,EAAS0G,GAAiBqB,EAAIrB,gBAAiBxG,KAI7CqG,KACF3B,GAAa,UAAW,GAItBmB,IACF/F,EAAS4E,GAAc,CAAC,OAAQ,OAAQ,SAItCA,GAAayD,QACfrI,EAAS4E,GAAc,CAAC,iBACjBW,GAAY+C,OAEjBP,EAAIQ,qBAAsB,CAC5B,GAAmD,mBAAxCR,EAAIQ,qBAAqBC,WAClC,MAAMhJ,EAAgB,+EAExB,GAAwD,mBAA7CuI,EAAIQ,qBAAqBE,gBAClC,MAAMjJ,EAAgB,oFAIxB0E,GAAqB6D,EAAIQ,qBAGzBpE,GAAYD,GAAmBsE,WAAW,GAC5C,WAE6Bvc,IAAvBiY,KACFA,GA1b0B,SAAmCV,EAAckF,GACjF,GAA4B,iBAAjBlF,GAAkE,mBAA9BA,EAAamF,aAC1D,OAAO,KAMT,IAAIC,EAAS,KACb,MAAMC,EAAY,wBACdH,GAAqBA,EAAkBI,aAAaD,KACtDD,EAASF,EAAkBK,aAAaF,IAE1C,MAAMG,EAAa,aAAeJ,EAAS,IAAMA,EAAS,IAC1D,IACE,OAAOpF,EAAamF,aAAaK,EAAY,CAC3CR,WAAWpH,GACFA,EAETqH,gBAAgBQ,GACPA,GAGb,CAAE,MAAO5W,GAKP,OADAyI,QAAQC,KAAK,uBAAyBiO,EAAa,0BAC5C,IACT,CACF,CA4Z6BE,CAA0B1F,EAAcV,IAIpC,OAAvBoB,IAAoD,iBAAdC,KACxCA,GAAYD,GAAmBsE,WAAW,KAM1C9K,GACFA,EAAOqK,GAETN,GAASM,CArKT,CAsKF,EACMoB,GAAiCnJ,EAAS,CAAC,EAAG,CAAC,KAAM,KAAM,KAAM,KAAM,UACvEoJ,GAA0BpJ,EAAS,CAAC,EAAG,CAAC,mBAMxCqJ,GAA+BrJ,EAAS,CAAC,EAAG,CAAC,QAAS,QAAS,OAAQ,IAAK,WAK5EsJ,GAAetJ,EAAS,CAAC,EAAG,IAAIc,KAAUC,KAAeC,IACzDuI,GAAkBvJ,EAAS,CAAC,EAAG,IAAIiB,KAAaC,IA8FhDsI,GAAe,SAAsBC,GACzCjL,EAAU+D,EAAUG,QAAS,CAC3B/W,QAAS8d,IAEX,IAEE3F,EAAc2F,GAAMC,YAAYD,EAClC,CAAE,MAAOpX,GACPsR,EAAO8F,EACT,CACF,EAQME,GAAmB,SAA0BC,EAAMH,GACvD,IACEjL,EAAU+D,EAAUG,QAAS,CAC3BmH,UAAWJ,EAAKK,iBAAiBF,GACjCnc,KAAMgc,GAEV,CAAE,MAAOpX,GACPmM,EAAU+D,EAAUG,QAAS,CAC3BmH,UAAW,KACXpc,KAAMgc,GAEV,CAIA,GAHAA,EAAKM,gBAAgBH,GAGR,OAATA,IAAkB9E,GAAa8E,GACjC,GAAI1D,IAAcC,GAChB,IACEqD,GAAaC,EACf,CAAE,MAAOpX,GAAK,MAEd,IACEoX,EAAKO,aAAaJ,EAAM,GAC1B,CAAE,MAAOvX,GAAK,CAGpB,EAQM4X,GAAgB,SAAuBC,GAE3C,IAAIC,EAAM,KACNC,EAAoB,KACxB,GAAInE,GACFiE,EAAQ,oBAAsBA,MACzB,CAEL,MAAMG,EAAUxL,EAAYqL,EAAO,eACnCE,EAAoBC,GAAWA,EAAQ,EACzC,CAC0B,0BAAtB9C,IAAiDJ,KAAcD,KAEjEgD,EAAQ,iEAAmEA,EAAQ,kBAErF,MAAMI,EAAepG,GAAqBA,GAAmBsE,WAAW0B,GAASA,EAKjF,GAAI/C,KAAcD,GAChB,IACEiD,GAAM,IAAI5G,GAAYgH,gBAAgBD,EAAc/C,GACtD,CAAE,MAAOlV,GAAK,CAIhB,IAAK8X,IAAQA,EAAIK,gBAAiB,CAChCL,EAAM/F,GAAeqG,eAAetD,GAAW,WAAY,MAC3D,IACEgD,EAAIK,gBAAgBE,UAAYtD,GAAiBjD,GAAYmG,CAC/D,CAAE,MAAOjY,GAET,CACF,CACA,MAAMsY,EAAOR,EAAIQ,MAAQR,EAAIK,gBAM7B,OALIN,GAASE,GACXO,EAAKC,aAAajY,EAASkY,eAAeT,GAAoBO,EAAKG,WAAW,IAAM,MAIlF3D,KAAcD,GACT3C,GAAqBwG,KAAKZ,EAAKpE,GAAiB,OAAS,QAAQ,GAEnEA,GAAiBoE,EAAIK,gBAAkBG,CAChD,EAQMK,GAAsB,SAA6BxI,GACvD,OAAO6B,GAAmB0G,KAAKvI,EAAKyB,eAAiBzB,EAAMA,EAEzDW,EAAW8H,aAAe9H,EAAW+H,aAAe/H,EAAWgI,UAAYhI,EAAWiI,4BAA8BjI,EAAWkI,mBAAoB,KACvJ,EAQMC,GAAe,SAAsBC,GACzC,OAAOA,aAAejI,IAA4C,iBAAjBiI,EAAIC,UAAoD,iBAApBD,EAAI5W,aAAuD,mBAApB4W,EAAI7B,eAAgC6B,EAAIE,sBAAsBrI,IAAgD,mBAAxBmI,EAAIxB,iBAA8D,mBAArBwB,EAAIvB,cAA2D,iBAArBuB,EAAIG,cAAyD,mBAArBH,EAAIX,cAA4D,mBAAtBW,EAAII,cACjY,EAQMC,GAAU,SAAiBrL,GAC/B,MAAuB,mBAAT0C,GAAuB1C,aAAkB0C,CACzD,EAUM4I,GAAe,SAAsBC,EAAYC,EAAaphB,GAC7D8Z,GAAMqH,IAGX3N,EAAasG,GAAMqH,GAAaE,IAC9BA,EAAKjB,KAAKxI,EAAWwJ,EAAaphB,EAAM8c,KAE5C,EAYMwE,GAAoB,SAA2BF,GACnD,IAAI9T,EAAU,KAMd,GAHA4T,GAAa,yBAA0BE,EAAa,MAGhDT,GAAaS,GAEf,OADAvC,GAAauC,IACN,EAIT,MAAMG,EAAUhM,GAAkB6L,EAAYP,UAS9C,GANAK,GAAa,sBAAuBE,EAAa,CAC/CG,UACAC,YAAavH,KAIXmH,EAAYJ,kBAAoBC,GAAQG,EAAYK,oBAAsB9M,EAAW,UAAWyM,EAAYrB,YAAcpL,EAAW,UAAWyM,EAAYpX,aAE9J,OADA6U,GAAauC,IACN,EAIT,GAlwBsB,IAkwBlBA,EAAYpJ,SAEd,OADA6G,GAAauC,IACN,EAIT,GAAIjG,IAvwBG,IAuwBaiG,EAAYpJ,UAAkCrD,EAAW,UAAWyM,EAAYphB,MAElG,OADA6e,GAAauC,IACN,EAIT,IAAKnH,GAAasH,IAAY3G,GAAY2G,GAAU,CAElD,IAAK3G,GAAY2G,IAAYG,GAAsBH,GAAU,CAC3D,GAAIlH,GAAwBC,wBAAwB1F,QAAUD,EAAW0F,GAAwBC,aAAciH,GAC7G,OAAO,EAET,GAAIlH,GAAwBC,wBAAwB4C,UAAY7C,GAAwBC,aAAaiH,GACnG,OAAO,CAEX,CAGA,GAAI3F,KAAiBG,GAAgBwF,GAAU,CAC7C,MAAMI,EAAaxI,EAAciI,IAAgBA,EAAYO,WACvDxB,EAAajH,EAAckI,IAAgBA,EAAYjB,WAC7D,GAAIA,GAAcwB,EAEhB,IAAK,IAAI5iB,EADUohB,EAAW/hB,OACJ,EAAGW,GAAK,IAAKA,EAAG,CACxC,MAAM6iB,EAAa7I,EAAUoH,EAAWphB,IAAI,GAC5C6iB,EAAWC,gBAAkBT,EAAYS,gBAAkB,GAAK,EAChEF,EAAW1B,aAAa2B,EAAY3I,EAAemI,GACrD,CAEJ,CAEA,OADAvC,GAAauC,IACN,CACT,CAGA,OAAIA,aAAuB7I,IAzTA,SAA8BvX,GACzD,IAAI8gB,EAAS3I,EAAcnY,GAItB8gB,GAAWA,EAAOP,UACrBO,EAAS,CACPf,aAAcvE,GACd+E,QAAS,aAGb,MAAMA,EAAUzN,EAAkB9S,EAAQugB,SACpCQ,EAAgBjO,EAAkBgO,EAAOP,SAC/C,QAAK7E,GAAmB1b,EAAQ+f,gBAG5B/f,EAAQ+f,eAAiBzE,GAIvBwF,EAAOf,eAAiBxE,GACP,QAAZgF,EAMLO,EAAOf,eAAiB1E,GACP,QAAZkF,IAAwC,mBAAlBQ,GAAsCvD,GAA+BuD,IAK7FC,QAAQrD,GAAa4C,IAE1BvgB,EAAQ+f,eAAiB1E,GAIvByF,EAAOf,eAAiBxE,GACP,SAAZgF,EAKLO,EAAOf,eAAiBzE,GACP,SAAZiF,GAAsB9C,GAAwBsD,GAKhDC,QAAQpD,GAAgB2C,IAE7BvgB,EAAQ+f,eAAiBxE,KAIvBuF,EAAOf,eAAiBzE,KAAkBmC,GAAwBsD,OAGlED,EAAOf,eAAiB1E,KAAqBmC,GAA+BuD,MAMxEnD,GAAgB2C,KAAa7C,GAA6B6C,KAAa5C,GAAa4C,MAIpE,0BAAtB3E,KAAiDF,GAAmB1b,EAAQ+f,eASlF,CA0OyCkB,CAAqBb,IAC1DvC,GAAauC,IACN,GAIQ,aAAZG,GAAsC,YAAZA,GAAqC,aAAZA,IAA2B5M,EAAW,8BAA+ByM,EAAYrB,YAMrI7E,IA7zBA,IA6zBsBkG,EAAYpJ,WAEpC1K,EAAU8T,EAAYpX,YACtBwJ,EAAa,CAACqD,GAAeC,GAAUC,IAAcmL,IACnD5U,EAAU8G,EAAc9G,EAAS4U,EAAM,OAErCd,EAAYpX,cAAgBsD,IAC9BuG,EAAU+D,EAAUG,QAAS,CAC3B/W,QAASogB,EAAYrI,cAEvBqI,EAAYpX,YAAcsD,IAK9B4T,GAAa,wBAAyBE,EAAa,OAC5C,IArBLvC,GAAauC,IACN,EAqBX,EAWMe,GAAoB,SAA2BC,EAAOC,EAAQ3hB,GAElE,GAAIgb,KAA4B,OAAX2G,GAA8B,SAAXA,KAAuB3hB,KAASsH,GAAYtH,KAASqc,IAC3F,OAAO,EAOT,GAAIhC,KAAoBF,GAAYwH,IAAW1N,EAAWqC,GAAWqL,SAAe,GAAIvH,IAAmBnG,EAAWsC,GAAWoL,SAAe,IAAKlI,GAAakI,IAAWxH,GAAYwH,IACvL,KAIEX,GAAsBU,KAAW/H,GAAwBC,wBAAwB1F,QAAUD,EAAW0F,GAAwBC,aAAc8H,IAAU/H,GAAwBC,wBAAwB4C,UAAY7C,GAAwBC,aAAa8H,MAAY/H,GAAwBK,8BAA8B9F,QAAUD,EAAW0F,GAAwBK,mBAAoB2H,IAAWhI,GAAwBK,8BAA8BwC,UAAY7C,GAAwBK,mBAAmB2H,KAGve,OAAXA,GAAmBhI,GAAwBM,iCAAmCN,GAAwBC,wBAAwB1F,QAAUD,EAAW0F,GAAwBC,aAAc5Z,IAAU2Z,GAAwBC,wBAAwB4C,UAAY7C,GAAwBC,aAAa5Z,KACpS,OAAO,OAGJ,GAAIyb,GAAoBkG,SAAe,GAAI1N,EAAWqF,GAAkB5F,EAAc1T,EAAO0W,GAAiB,WAAY,GAAgB,QAAXiL,GAA+B,eAAXA,GAAsC,SAAXA,GAAgC,WAAVD,GAAwD,IAAlC9N,EAAc5T,EAAO,WAAkBub,GAAcmG,GAAc,GAAIpH,KAA4BrG,EAAWwC,GAAmB/C,EAAc1T,EAAO0W,GAAiB,WAAY,GAAI1W,EACtZ,OAAO,EAET,OAAO,CACT,EAUMghB,GAAwB,SAA+BH,GAC3D,MAAmB,mBAAZA,GAAgCrN,EAAYqN,EAASjK,GAC9D,EAYMgL,GAAsB,SAA6BlB,GAEvDF,GAAa,2BAA4BE,EAAa,MACtD,MAAM,WACJN,GACEM,EAGJ,IAAKN,EACH,OAEF,MAAMyB,EAAY,CAChBC,SAAU,GACVC,UAAW,GACXC,UAAU,EACVC,kBAAmBxI,IAErB,IAAI3E,EAAIsL,EAAW1iB,OAGnB,KAAOoX,KAAK,CACV,MAAMoN,EAAO9B,EAAWtL,IAClB,KACJyJ,EAAI,aACJ8B,EACArgB,MAAO+hB,GACLG,EACEP,EAAS9M,GAAkB0J,GACjC,IAAIve,EAAiB,UAATue,EAAmBwD,EAAYlO,EAAWkO,GAWtD,GARAF,EAAUC,SAAWH,EACrBE,EAAUE,UAAY/hB,EACtB6hB,EAAUG,UAAW,EACrBH,EAAUM,mBAAgBvhB,EAC1B4f,GAAa,wBAAyBE,EAAamB,GACnD7hB,EAAQ6hB,EAAUE,UAGdF,EAAUM,cACZ,SAOF,GAHA7D,GAAiBC,EAAMmC,IAGlBmB,EAAUG,SACb,SAIF,IAAKzH,IAA4BtG,EAAW,OAAQjU,GAAQ,CAC1Dse,GAAiBC,EAAMmC,GACvB,QACF,CAGIlG,IACF1H,EAAa,CAACqD,GAAeC,GAAUC,IAAcmL,IACnDxhB,EAAQ0T,EAAc1T,EAAOwhB,EAAM,OAKvC,MAAME,EAAQ7M,GAAkB6L,EAAYP,UAC5C,GAAKsB,GAAkBC,EAAOC,EAAQ3hB,GAgBtC,IATIib,IAAoC,OAAX0G,GAA8B,SAAXA,IAE9CrD,GAAiBC,EAAMmC,GAGvB1gB,EA1tB8B,gBA0tBQA,GAIpCya,IAAgBxG,EAAW,gCAAiCjU,GAC9Dse,GAAiBC,EAAMmC,OADzB,CAMA,GAAI7H,IAA8C,iBAAjBV,GAAsE,mBAAlCA,EAAaiK,iBAChF,GAAI/B,QACF,OAAQlI,EAAaiK,iBAAiBV,EAAOC,IAC3C,IAAK,cAED3hB,EAAQ6Y,GAAmBsE,WAAWnd,GACtC,MAEJ,IAAK,mBAEDA,EAAQ6Y,GAAmBuE,gBAAgBpd,GAQrD,IACMqgB,EACFK,EAAY2B,eAAehC,EAAc9B,EAAMve,GAG/C0gB,EAAY/B,aAAaJ,EAAMve,GAE7BigB,GAAaS,GACfvC,GAAauC,GAEbxN,EAASgE,EAAUG,QAEvB,CAAE,MAAOrQ,GAAK,CAjCd,CAkCF,CAGAwZ,GAAa,0BAA2BE,EAAa,KACvD,EAOM4B,GAAqB,SAASA,EAAmBC,GACrD,IAAIC,EAAa,KACjB,MAAMC,EAAiB9C,GAAoB4C,GAI3C,IADA/B,GAAa,0BAA2B+B,EAAU,MAC3CC,EAAaC,EAAeC,YAEjClC,GAAa,yBAA0BgC,EAAY,MAG/C5B,GAAkB4B,KAKlBA,EAAW5V,mBAAmB8K,GAChC4K,EAAmBE,EAAW5V,SAIhCgV,GAAoBY,IAItBhC,GAAa,yBAA0B+B,EAAU,KACnD,EA0PA,OAhPArL,EAAUyL,SAAW,SAAU9D,GAC7B,IAAInC,EAAMpI,UAAU5W,OAAS,QAAsBkD,IAAjB0T,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC3EgL,EAAO,KACPsD,EAAe,KACflC,EAAc,KACdmC,EAAa,KAUjB,GANA9G,IAAkB8C,EACd9C,KACF8C,EAAQ,eAIW,iBAAVA,IAAuB0B,GAAQ1B,GAAQ,CAChD,GAA8B,mBAAnBA,EAAMtL,SAMf,MAAMY,EAAgB,8BAJtB,GAAqB,iBADrB0K,EAAQA,EAAMtL,YAEZ,MAAMY,EAAgB,kCAK5B,CAGA,IAAK+C,EAAUK,YACb,OAAOsH,EAeT,GAXKlE,IACH8B,GAAaC,GAIfxF,EAAUG,QAAU,GAGC,iBAAVwH,IACT1D,IAAW,GAETA,IAEF,GAAI0D,EAAMsB,SAAU,CAClB,MAAMU,EAAUhM,GAAkBgK,EAAMsB,UACxC,IAAK5G,GAAasH,IAAY3G,GAAY2G,GACxC,MAAM1M,EAAgB,0DAE1B,OACK,GAAI0K,aAAiBjH,EAG1B0H,EAAOV,GAAc,iBACrBgE,EAAetD,EAAK1G,cAAcO,WAAW0F,GAAO,GA1mC/C,IA2mCD+D,EAAatL,UAA4D,SAA1BsL,EAAazC,UAG3B,SAA1ByC,EAAazC,SADtBb,EAAOsD,EAKPtD,EAAKwD,YAAYF,OAEd,CAEL,IAAK/H,KAAeL,KAAuBE,KAEjB,IAAxBmE,EAAMhc,QAAQ,KACd,OAAOgW,IAAsBkC,GAAsBlC,GAAmBsE,WAAW0B,GAASA,EAO5F,GAHAS,EAAOV,GAAcC,IAGhBS,EACH,OAAOzE,GAAa,KAAOE,GAAsBjC,GAAY,EAEjE,CAGIwG,GAAQ1E,IACVuD,GAAamB,EAAKlW,YAIpB,MAAM2Z,EAAepD,GAAoBxE,GAAW0D,EAAQS,GAG5D,KAAOoB,EAAcqC,EAAaL,YAE5B9B,GAAkBF,KAKlBA,EAAY9T,mBAAmB8K,GACjC4K,GAAmB5B,EAAY9T,SAIjCgV,GAAoBlB,IAItB,GAAIvF,GACF,OAAO0D,EAIT,GAAIhE,GAAY,CACd,GAAIC,GAEF,IADA+H,EAAa5J,GAAuByG,KAAKJ,EAAK1G,eACvC0G,EAAKlW,YAEVyZ,EAAWC,YAAYxD,EAAKlW,iBAG9ByZ,EAAavD,EAYf,OAVI7F,GAAauJ,YAAcvJ,GAAawJ,kBAQ1CJ,EAAa1J,GAAWuG,KAAKlI,EAAkBqL,GAAY,IAEtDA,CACT,CACA,IAAIK,EAAiBxI,GAAiB4E,EAAK6D,UAAY7D,EAAKD,UAa5D,OAVI3E,IAAkBnB,GAAa,aAAe+F,EAAK1G,eAAiB0G,EAAK1G,cAAcwK,SAAW9D,EAAK1G,cAAcwK,QAAQ7E,MAAQtK,EAAW0C,EAAc2I,EAAK1G,cAAcwK,QAAQ7E,QAC3L2E,EAAiB,aAAe5D,EAAK1G,cAAcwK,QAAQ7E,KAAO,MAAQ2E,GAIxE1I,IACF1H,EAAa,CAACqD,GAAeC,GAAUC,IAAcmL,IACnD0B,EAAiBxP,EAAcwP,EAAgB1B,EAAM,OAGlD3I,IAAsBkC,GAAsBlC,GAAmBsE,WAAW+F,GAAkBA,CACrG,EAQAhM,EAAUmM,UAAY,WAEpB5G,GADUnI,UAAU5W,OAAS,QAAsBkD,IAAjB0T,UAAU,GAAmBA,UAAU,GAAK,CAAC,GAE/EqG,IAAa,CACf,EAOAzD,EAAUoM,YAAc,WACtBlH,GAAS,KACTzB,IAAa,CACf,EAYAzD,EAAUqM,iBAAmB,SAAUC,EAAKtB,EAAMliB,GAE3Coc,IACHK,GAAa,CAAC,GAEhB,MAAMiF,EAAQ7M,GAAkB2O,GAC1B7B,EAAS9M,GAAkBqN,GACjC,OAAOT,GAAkBC,EAAOC,EAAQ3hB,EAC1C,EASAkX,EAAUuM,QAAU,SAAUhD,EAAYiD,GACZ,mBAAjBA,IAGXtK,GAAMqH,GAAcrH,GAAMqH,IAAe,GACzCtN,EAAUiG,GAAMqH,GAAaiD,GAC/B,EAUAxM,EAAUyM,WAAa,SAAUlD,GAC/B,GAAIrH,GAAMqH,GACR,OAAOvN,EAASkG,GAAMqH,GAE1B,EAQAvJ,EAAU0M,YAAc,SAAUnD,GAC5BrH,GAAMqH,KACRrH,GAAMqH,GAAc,GAExB,EAMAvJ,EAAU2M,eAAiB,WACzBzK,GAAQ,CAAC,CACX,EACOlC,CACT,CACaD,GAQUD,GAAOI,QACHJ,GAAOO,YAD3B,MAEMoL,GAAW3L,GAAO2L,SAIlBc,IAHYzM,GAAOqM,UACLrM,GAAOsM,YACFtM,GAAOuM,iBAChBvM,GAAOyM,SACjBE,GAAa3M,GAAO2M,WACN3M,GAAO4M,YACJ5M,GAAO6M,c,0DC1hD9B,MAAMC,UAAiB,IAC1B,WAAA9e,CAAYkE,GACRuI,QACAxM,KAAK8e,SAAW7a,EAChBjE,KAAK8e,SAASC,gBAAgB/e,KAClC,CACA,OAAAgf,GACIhf,KAAK8e,SAASG,mBAAmBjf,MACjCwM,MAAMwS,SACV,EAEG,MAAME,EACT,YAAOC,CAAM9hB,EAAQ+hB,GACjB/hB,EAAOqc,aAAa,YAAarR,OAAO+W,GAC5C,CACA,WAAOC,CAAKhiB,GACR,MAAMiO,EAAIjO,EAAOob,aAAa,aAC9B,OAAU,OAANnN,EACO,EAEJgU,SAAShU,EAAG,GACvB,CACA,cAAOiU,CAAQC,EAAOC,GAClB,MAAMtkB,EAAS,GACf,IAAIiI,EAAY,EAChB,KAAOoc,GAASA,IAAUA,EAAM7L,cAAc0G,MACtCmF,IAAUC,GAGVD,EAAMnN,WAAamN,EAAME,eACzBvkB,EAAOiI,KAAepD,KAAKqf,KAAKG,IAEpCA,EAAQA,EAAMG,cAElB,MAAMrU,EAAI,IAAIsU,WAAWxc,GACzB,IAAK,IAAIhK,EAAI,EAAGA,EAAIgK,EAAWhK,IAC3BkS,EAAElS,GAAK+B,EAAOiI,EAAYhK,EAAI,GAElC,OAAOkS,CACX,E,sEClCG,MAAMuU,EAAkB,CAC3BC,UAAW,CACPC,UAAY,MACJ1d,SAAS2d,uBAAyB3d,SAAS2d,sBAAsB,YAC/DC,WAAaA,UAAUH,WAAaG,UAAUH,UAAUC,WAClEG,SAAW,SACDD,WAAaA,UAAUH,WAAaG,UAAUH,UAAUI,WAEtEC,SACQ,MAAqB,OACd,EAEPF,UAAUE,UAAY,KACf,EAEJ,EAIXC,MAAO,sBAAgCH,UAAUI,eAAiB,EAClEC,cAAe,IAAWC,eAAiB,sBAAgCN,UAAUI,eAAiB,G,6DCxBnG,MAAMG,EACT,WAAAzgB,GACIC,KAAKygB,OAAS,IAAI,KAClBzgB,KAAK0gB,qBAAuB,KAC5B1gB,KAAK2gB,gBAAkB,IAC3B,CACA,OAAA3B,GACIhf,KAAK4gB,gBAAe,GACpB5gB,KAAKygB,OAAOzB,SAChB,CACA,cAAA4B,CAAeC,EAAoBC,GAC/B,IAAK9gB,KAAK+gB,eAEN,OAGJ/gB,KAAKygB,OAAOO,QACZhhB,KAAK0gB,qBAAuB,KAC5B,MAAMO,EAAiBjhB,KAAK2gB,gBAC5B3gB,KAAK2gB,gBAAkB,KACnBE,GAAsBI,GACtBA,EAAeH,EAEvB,CACA,YAAAC,GACI,QAAS/gB,KAAK0gB,oBAClB,CACA,eAAAQ,CAAgBC,EAAgBC,EAAWC,EAAgBC,EAAqBL,GACxEjhB,KAAK+gB,gBACL/gB,KAAK4gB,gBAAe,GAExB5gB,KAAK0gB,qBAAuBY,EAC5BthB,KAAK2gB,gBAAkBM,EACvB,IAAIM,EAAcJ,EAClB,IACIA,EAAeK,kBAAkBJ,GACjCphB,KAAKygB,OAAO3jB,KAAI,OAAa,KACzB,IACIqkB,EAAeM,sBAAsBL,EACzC,CACA,MAAOM,GAQP,IAER,CACA,MAAOA,GASHH,EAAc,KAAcJ,EAChC,CACAnhB,KAAKygB,OAAO3jB,IAAI,KAA0BykB,EAAa,KAAcI,aAAe1lB,IAC5EA,EAAE2lB,UAAYP,GAKlBplB,EAAE4lB,iBACF7hB,KAAK0gB,qBAAqBzkB,IAJtB+D,KAAK4gB,gBAAe,MAM5B5gB,KAAKygB,OAAO3jB,IAAI,KAA0BykB,EAAa,KAAcO,WAAa7lB,GAAM+D,KAAK4gB,gBAAe,IAChH,E,4QCpEG,SAASmB,EAAW1lB,GACvB,QAASA,GAA2B,mBAAbA,EAAI2lB,IAC/B,CACO,SAASC,EAAwBC,GACpC,MAAMC,EAAS,IAAI,KACbC,EAAWF,EAASC,EAAOE,OAC3BC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KAClC,MAAMC,EAAeP,EAAOE,MAAMM,wBAAwB,KACtDD,EAAa1D,UACbyD,EAAO,IAAI,QAEfF,QAAQC,QAAQJ,GAAUJ,KAAKjnB,IAC3B2nB,EAAa1D,UACbmD,EAAOnD,UACPwD,EAAQznB,IACT2mB,IACCgB,EAAa1D,UACbmD,EAAOnD,UACPyD,EAAOf,OAGf,OAAO,IAAI,MACP,MAAAkB,GACIT,EAAOS,SACPT,EAAOnD,SACX,CACA,IAAAgD,CAAKQ,EAASC,GACV,OAAOH,EAAQN,KAAKQ,EAASC,EACjC,CACA,MAAMA,GACF,OAAOziB,KAAKgiB,UAAKrmB,EAAW8mB,EAChC,CACA,QAAQI,GACJ,OAAOP,EAAQQ,QAAQD,EAC3B,EAER,CACO,SAASE,EAAiBT,EAASD,EAAOW,GAC7C,OAAO,IAAIT,QAAQ,CAACC,EAASC,KACzB,MAAMQ,EAAMZ,EAAMM,wBAAwB,KACtCM,EAAIjE,UACJwD,EAAQQ,KAEZV,EAAQN,KAAKQ,EAASC,GAAQK,QAAQ,IAAMG,EAAIjE,YAExD,CA2BO,MAAMkE,EACT,WAAAnjB,GACIC,KAAKmjB,YAAa,EAClBnjB,KAAKojB,cAAgB,KACrBpjB,KAAKqjB,cAAgB,KACrBrjB,KAAKsjB,qBAAuB,IAChC,CACA,KAAAC,CAAMC,GACF,GAAIxjB,KAAKmjB,WACL,OAAOZ,QAAQE,OAAO,IAAI7pB,MAAM,0BAEpC,GAAIoH,KAAKojB,cAAe,CAEpB,GADApjB,KAAKsjB,qBAAuBE,GACvBxjB,KAAKqjB,cAAe,CACrB,MAAMI,EAAa,KAEf,GADAzjB,KAAKqjB,cAAgB,KACjBrjB,KAAKmjB,WACL,OAEJ,MAAMhoB,EAAS6E,KAAKujB,MAAMvjB,KAAKsjB,sBAE/B,OADAtjB,KAAKsjB,qBAAuB,KACrBnoB,GAEX6E,KAAKqjB,cAAgB,IAAId,QAAQC,IAC7BxiB,KAAKojB,cAAcpB,KAAKyB,EAAYA,GAAYzB,KAAKQ,IAE7D,CACA,OAAO,IAAID,QAAQ,CAACC,EAASC,KACzBziB,KAAKqjB,cAAcrB,KAAKQ,EAASC,IAEzC,CAEA,OADAziB,KAAKojB,cAAgBI,IACd,IAAIjB,QAAQ,CAACC,EAASC,KACzBziB,KAAKojB,cAAcpB,KAAM7mB,IACrB6E,KAAKojB,cAAgB,KACrBZ,EAAQrnB,IACRumB,IACA1hB,KAAKojB,cAAgB,KACrBX,EAAOf,MAGnB,CACA,OAAA1C,GACIhf,KAAKmjB,YAAa,CACtB,EAoDG,MAAMO,EACT,WAAA3jB,CAAY4jB,GACR3jB,KAAK2jB,aAAeA,EACpB3jB,KAAK4jB,SAAW,KAChB5jB,KAAK6jB,kBAAoB,KACzB7jB,KAAK8jB,UAAY,KACjB9jB,KAAK+jB,SAAW,KAChB/jB,KAAKgkB,KAAO,IAChB,CACA,OAAAC,CAAQD,EAAME,EAAQlkB,KAAK2jB,cACvB3jB,KAAKgkB,KAAOA,EACZhkB,KAAKmkB,gBACAnkB,KAAK6jB,oBACN7jB,KAAK6jB,kBAAoB,IAAItB,QAAQ,CAACC,EAASC,KAC3CziB,KAAK8jB,UAAYtB,EACjBxiB,KAAK+jB,SAAWtB,IACjBT,KAAK,KAGJ,GAFAhiB,KAAK6jB,kBAAoB,KACzB7jB,KAAK8jB,UAAY,KACb9jB,KAAKgkB,KAAM,CACX,MAAMA,EAAOhkB,KAAKgkB,KAElB,OADAhkB,KAAKgkB,KAAO,KACLA,GACX,KAIR,MAAMI,EAAK,KACPpkB,KAAK4jB,SAAW,KAChB5jB,KAAK8jB,YAAY,OAGrB,OADA9jB,KAAK4jB,SAAWM,IAAU,IAnER,CAACE,IACvB,IAAIC,GAAY,EAOhB,OANAC,eAAe,KACPD,IACAA,GAAY,EACZD,OAGD,CACHG,YAAa,IAAMF,EACnBrF,QAAS,KAAQqF,GAAY,KAyDcG,CAAkBJ,GAjF7C,EAACK,EAASL,KAC9B,IAAIC,GAAY,EAChB,MAAMK,EAASC,WAAW,KACtBN,GAAY,EACZD,KACDK,GACH,MAAO,CACHF,YAAa,IAAMF,EACnBrF,QAAS,KACL4F,aAAaF,GACbL,GAAY,KAuEmDQ,CAAgBX,EAAOE,GACnFpkB,KAAK6jB,iBAChB,CACA,WAAAU,GACI,QAASvkB,KAAK4jB,UAAUW,aAC5B,CACA,MAAA3B,GACI5iB,KAAKmkB,gBACDnkB,KAAK6jB,oBACL7jB,KAAK+jB,WAAW,IAAI,MACpB/jB,KAAK6jB,kBAAoB,KAEjC,CACA,aAAAM,GACInkB,KAAK4jB,UAAU5E,UACfhf,KAAK4jB,SAAW,IACpB,CACA,OAAA5E,GACIhf,KAAK4iB,QACT,EAWG,MAAMkC,EACT,WAAA/kB,CAAY4jB,GACR3jB,KAAK+kB,QAAU,IAAIrB,EAAQC,GAC3B3jB,KAAKglB,UAAY,IAAI9B,CACzB,CACA,OAAAe,CAAQT,EAAgBU,GACpB,OAAOlkB,KAAK+kB,QAAQd,QAAQ,IAAMjkB,KAAKglB,UAAUzB,MAAMC,GAAiBU,EAC5E,CACA,MAAAtB,GACI5iB,KAAK+kB,QAAQnC,QACjB,CACA,OAAA5D,GACIhf,KAAK+kB,QAAQ/F,UACbhf,KAAKglB,UAAUhG,SACnB,EAEG,SAASyF,EAAQQ,EAAQ5C,GAC5B,OAAKA,EAGE,IAAIE,QAAQ,CAACC,EAASC,KACzB,MAAMiC,EAASC,WAAW,KACtBO,EAAWlG,UACXwD,KACDyC,GACGC,EAAa7C,EAAMM,wBAAwB,KAC7CiC,aAAaF,GACbQ,EAAWlG,UACXyD,EAAO,IAAI,UAVRR,EAAwBI,GAASoC,EAAQQ,EAAQ5C,GAahE,CAkBO,SAAS8C,EAAkBC,EAASX,EAAU,EAAGY,GACpD,MAAMC,EAAQX,WAAW,KACrBS,IACIC,GACAH,EAAWlG,WAEhByF,GACGS,GAAa,OAAa,KAC5BN,aAAaU,GACbD,GAAOE,cAAcL,KAGzB,OADAG,GAAOvoB,IAAIooB,GACJA,CACX,CACO,SAAS7jB,EAAMmkB,EAAkBC,EAAaC,KAAOA,EAAG1C,EAAe,MAC1E,IAAIzpB,EAAQ,EACZ,MAAMF,EAAMmsB,EAAiB/sB,OACvBktB,EAAO,KACT,GAAIpsB,GAASF,EACT,OAAOkpB,QAAQC,QAAQQ,GAE3B,MAAM4C,EAAUJ,EAAiBjsB,KAEjC,OADgBgpB,QAAQC,QAAQoD,KACjB5D,KAAK7mB,GACZsqB,EAAWtqB,GACJonB,QAAQC,QAAQrnB,GAEpBwqB,MAGf,OAAOA,GACX,CACO,MAAME,EACT,WAAA9lB,CAAY+lB,EAAQrB,GAChBzkB,KAAK+lB,aAAc,EACnB/lB,KAAKgmB,QAAU,EACO,mBAAXF,GAA4C,iBAAZrB,GACvCzkB,KAAKimB,YAAYH,EAAQrB,EAEjC,CACA,OAAAzF,GACIhf,KAAK4iB,SACL5iB,KAAK+lB,aAAc,CACvB,CACA,MAAAnD,IACyB,IAAjB5iB,KAAKgmB,SACLpB,aAAa5kB,KAAKgmB,QAClBhmB,KAAKgmB,QAAU,EAEvB,CACA,YAAAE,CAAaJ,EAAQrB,GACjB,GAAIzkB,KAAK+lB,YACL,MAAM,IAAI,KAAmB,qDAEjC/lB,KAAK4iB,SACL5iB,KAAKgmB,OAASrB,WAAW,KACrB3kB,KAAKgmB,QAAU,EACfF,KACDrB,EACP,CACA,WAAAwB,CAAYH,EAAQrB,GAChB,GAAIzkB,KAAK+lB,YACL,MAAM,IAAI,KAAmB,qDAEZ,IAAjB/lB,KAAKgmB,SAIThmB,KAAKgmB,OAASrB,WAAW,KACrB3kB,KAAKgmB,QAAU,EACfF,KACDrB,GACP,EAEG,MAAM0B,EACT,WAAApmB,GACIC,KAAKklB,gBAAavpB,EAClBqE,KAAKmjB,YAAa,CACtB,CACA,MAAAP,GACI5iB,KAAKklB,YAAYlG,UACjBhf,KAAKklB,gBAAavpB,CACtB,CACA,YAAAuqB,CAAaJ,EAAQM,EAAUniB,EAAUoiB,YACrC,GAAIrmB,KAAKmjB,WACL,MAAM,IAAI,KAAmB,sDAEjCnjB,KAAK4iB,SACL,MAAM8B,EAASzgB,EAAQqiB,YAAY,KAC/BR,KACDM,GACHpmB,KAAKklB,YAAa,OAAa,KAC3BjhB,EAAQsiB,cAAc7B,GACtB1kB,KAAKklB,gBAAavpB,GAE1B,CACA,OAAAqjB,GACIhf,KAAK4iB,SACL5iB,KAAKmjB,YAAa,CACtB,EAEG,MAAMqD,EACT,WAAAzmB,CAAY+lB,EAAQ5B,GAChBlkB,KAAKymB,cAAgB,EACrBzmB,KAAK8lB,OAASA,EACd9lB,KAAKykB,QAAUP,EACflkB,KAAK0mB,eAAiB1mB,KAAK2mB,UAAUC,KAAK5mB,KAC9C,CAIA,OAAAgf,GACIhf,KAAK4iB,SACL5iB,KAAK8lB,OAAS,IAClB,CAIA,MAAAlD,GACQ5iB,KAAK6mB,gBACLjC,aAAa5kB,KAAKymB,cAClBzmB,KAAKymB,cAAgB,EAE7B,CAIA,QAAAK,CAAS5C,EAAQlkB,KAAKykB,SAClBzkB,KAAK4iB,SACL5iB,KAAKymB,aAAe9B,WAAW3kB,KAAK0mB,eAAgBxC,EACxD,CACA,SAAIA,GACA,OAAOlkB,KAAKykB,OAChB,CACA,SAAIP,CAAMnpB,GACNiF,KAAKykB,QAAU1pB,CACnB,CAIA,WAAA8rB,GACI,OAA8B,IAAvB7mB,KAAKymB,YAChB,CACA,SAAAE,GACI3mB,KAAKymB,cAAgB,EACjBzmB,KAAK8lB,QACL9lB,KAAK+mB,OAEb,CACA,KAAAA,GACI/mB,KAAK8lB,UACT,EAuBG,IAAIkB,EACAC,EAGHA,EAD0C,mBAAnCZ,WAAWa,qBAA+E,mBAAlCb,WAAWc,mBAC3D,CAACC,EAAetB,MAC3B,QAAY,KACR,GAAIuB,EACA,OAEJ,MAAMC,EAAMC,KAAKC,MAAQ,GACnBC,EAAW,CACbC,YAAY,EACZC,cAAa,IACFltB,KAAKkE,IAAI,EAAG2oB,EAAMC,KAAKC,QAGtC1B,EAAOrwB,OAAO2X,OAAOqa,MAEzB,IAAIJ,GAAW,EACf,MAAO,CACH,OAAArI,GACQqI,IAGJA,GAAW,EACf,IAKO,CAAChyB,EAAcywB,EAAQrB,KAClC,MAAMC,EAASrvB,EAAa6xB,oBAAoBpB,EAA2B,iBAAZrB,EAAuB,CAAEA,gBAAY9oB,GACpG,IAAI0rB,GAAW,EACf,MAAO,CACH,OAAArI,GACQqI,IAGJA,GAAW,EACXhyB,EAAa8xB,mBAAmBzC,GACpC,IAIZsC,EAAqBlB,GAAWmB,EAAaZ,WAAYP,GAEtD,MAAM8B,EACT,WAAA7nB,CAAY1K,EAAcwyB,GACtB7nB,KAAK8nB,SAAU,EACf9nB,KAAK+nB,UAAY,KACb,IACI/nB,KAAKgoB,OAASH,GAClB,CACA,MAAOnG,GACH1hB,KAAKioB,OAASvG,CAClB,CACA,QACI1hB,KAAK8nB,SAAU,CACnB,GAEJ9nB,KAAKkoB,QAAUjB,EAAa5xB,EAAc,IAAM2K,KAAK+nB,YACzD,CACA,OAAA/I,GACIhf,KAAKkoB,QAAQlJ,SACjB,CACA,SAAIjkB,GAKA,GAJKiF,KAAK8nB,UACN9nB,KAAKkoB,QAAQlJ,UACbhf,KAAK+nB,aAEL/nB,KAAKioB,OACL,MAAMjoB,KAAKioB,OAEf,OAAOjoB,KAAKgoB,MAChB,CACA,iBAAIG,GACA,OAAOnoB,KAAK8nB,OAChB,EAQG,MAAMM,UAAwBR,EACjC,WAAA7nB,CAAY8nB,GACRrb,MAAM6Z,WAAYwB,EACtB,EAKG,MAAMQ,EACT,cAAIC,GACA,OAAiC,IAA1BtoB,KAAKuoB,SAASA,OACzB,CACA,aAAIC,GACA,QAASxoB,KAAKuoB,OAClB,CACA,WAAAxoB,GACIC,KAAKyoB,EAAI,IAAIlG,QAAQ,CAACmG,EAAGzsB,KACrB+D,KAAK2oB,iBAAmBD,EACxB1oB,KAAK4oB,cAAgB3sB,GAE7B,CACA,QAAA4sB,CAAS9tB,GACL,OAAO,IAAIwnB,QAAQC,IACfxiB,KAAK2oB,iBAAiB5tB,GACtBiF,KAAKuoB,QAAU,CAAEA,QAAS,EAAkCxtB,SAC5DynB,KAER,CACA,KAAAsG,CAAMpH,GACF,OAAO,IAAIa,QAAQC,IACfxiB,KAAK4oB,cAAclH,GACnB1hB,KAAKuoB,QAAU,CAAEA,QAAS,EAAkCxtB,MAAO2mB,GACnEc,KAER,CACA,MAAAI,GACI,OAAO5iB,KAAK8oB,MAAM,IAAI,KAC1B,EAIG,IAAIC,GACX,SAAWA,GAqBPA,EAASC,QAbTC,eAAuBC,GACnB,IAAIC,EACJ,MAAMhuB,QAAeonB,QAAQ6G,IAAIF,EAASjoB,IAAIqhB,GAAWA,EAAQN,KAAKjnB,GAASA,EAAO+tB,IAC7EK,IACDA,EAAaL,OAIrB,QAA0B,IAAfK,EACP,MAAMA,EAEV,OAAOhuB,CACX,EAuBA4tB,EAASM,cAXT,SAAuBC,GAEnB,OAAO,IAAI/G,QAAQ0G,MAAOzG,EAASC,KAC/B,UACU6G,EAAO9G,EAASC,EAC1B,CACA,MAAOqG,GACHrG,EAAOqG,EACX,GAER,CAEH,CA5CD,CA4CGC,IAAaA,EAAW,CAAC,IAIrB,MAAMQ,EACT,gBAAOC,CAAUhuB,GACb,OAAO,IAAI+tB,EAAqBE,IAC5BA,EAAOC,SAASluB,IAExB,CACA,kBAAOmuB,CAAYrH,GACf,OAAO,IAAIiH,EAAoBN,MAAOW,IAClCA,EAAQF,eAAepH,IAE/B,CACA,mBAAOuH,CAAaX,GAChB,OAAO,IAAIK,EAAoBN,MAAOW,UAC5BrH,QAAQ6G,IAAIF,EAASjoB,IAAIgoB,MAAOR,GAAMmB,EAAQE,cAAcrB,MAE1E,CACA,YAAOsB,CAAMC,GACT,OAAO,IAAIT,EAAoBN,MAAOW,UAC5BrH,QAAQ6G,IAAIY,EAAU/oB,IAAIgoB,MAAOgB,IACnC,UAAW,MAAMvuB,KAAQuuB,EACrBL,EAAQE,QAAQpuB,OAIhC,QACSsE,KAAKkqB,MAAQX,EAAoBC,UAAU,GAAK,CACzD,WAAAzpB,CAAY8nB,EAAUsC,GAClBnqB,KAAKoqB,OAAS,EACdpqB,KAAKqqB,SAAW,GAChBrqB,KAAKioB,OAAS,KACdjoB,KAAKsqB,UAAYH,EACjBnqB,KAAKuqB,gBAAkB,IAAI,KAC3BjG,eAAe2E,UACX,MAAMQ,EAAS,CACXK,QAAUpuB,GAASsE,KAAK8pB,QAAQpuB,GAChCguB,SAAWluB,GAAUwE,KAAK0pB,SAASluB,GACnCinB,OAASqG,GAAU9oB,KAAKyiB,OAAOqG,IAEnC,UACUvG,QAAQC,QAAQqF,EAAS4B,IAC/BzpB,KAAKwiB,SACT,CACA,MAAOd,GACH1hB,KAAKyiB,OAAOf,EAChB,CACA,QACI+H,EAAOK,aAAUnuB,EACjB8tB,EAAOC,cAAW/tB,EAClB8tB,EAAOhH,YAAS9mB,CACpB,GAER,CACA,CAAC6uB,OAAOC,iBACJ,IAAIrxB,EAAI,EACR,MAAO,CACHsxB,KAAMzB,UACF,OAAG,CACC,GAAoB,IAAhBjpB,KAAKoqB,OACL,MAAMpqB,KAAKioB,OAEf,GAAI7uB,EAAI4G,KAAKqqB,SAAS5xB,OAClB,MAAO,CAAEkyB,MAAM,EAAO5vB,MAAOiF,KAAKqqB,SAASjxB,MAE/C,GAAoB,IAAhB4G,KAAKoqB,OACL,MAAO,CAAEO,MAAM,EAAM5vB,WAAOY,SAE1B,KAAMivB,UAAU5qB,KAAKuqB,gBAAgBM,MAC/C,GAEJC,OAAQ7B,UACJjpB,KAAKsqB,cACE,CAAEK,MAAM,EAAM5vB,WAAOY,IAGxC,CACA,UAAOsF,CAAIgpB,EAAU/oB,GACjB,OAAO,IAAIqoB,EAAoBN,MAAOW,IAClC,UAAW,MAAMluB,KAAQuuB,EACrBL,EAAQE,QAAQ5oB,EAAMxF,KAGlC,CACA,GAAAuF,CAAIC,GACA,OAAOqoB,EAAoBtoB,IAAIjB,KAAMkB,EACzC,CACA,aAAOlF,CAAOiuB,EAAUc,GACpB,OAAO,IAAIxB,EAAoBN,MAAOW,IAClC,UAAW,MAAMluB,KAAQuuB,EACjBc,EAASrvB,IACTkuB,EAAQE,QAAQpuB,IAIhC,CACA,MAAAM,CAAO+uB,GACH,OAAOxB,EAAoBvtB,OAAOgE,KAAM+qB,EAC5C,CACA,eAAOhvB,CAASkuB,GACZ,OAAOV,EAAoBvtB,OAAOiuB,EAAUvuB,KAAUA,EAC1D,CACA,QAAAK,GACI,OAAOwtB,EAAoBxtB,SAASiE,KACxC,CACA,sBAAa4qB,CAAUX,GACnB,MAAM9uB,EAAS,GACf,UAAW,MAAMO,KAAQuuB,EACrB9uB,EAAOF,KAAKS,GAEhB,OAAOP,CACX,CACA,SAAAyvB,GACI,OAAOrB,EAAoBqB,UAAU5qB,KACzC,CAMA,OAAA8pB,CAAQ/uB,GACgB,IAAhBiF,KAAKoqB,SAKTpqB,KAAKqqB,SAASpvB,KAAKF,GACnBiF,KAAKuqB,gBAAgBS,OACzB,CAMA,QAAAtB,CAASuB,GACe,IAAhBjrB,KAAKoqB,SAKTpqB,KAAKqqB,SAAWrqB,KAAKqqB,SAAS3sB,OAAOutB,GACrCjrB,KAAKuqB,gBAAgBS,OACzB,CAOA,OAAAxI,GACwB,IAAhBxiB,KAAKoqB,SAGTpqB,KAAKoqB,OAAS,EACdpqB,KAAKuqB,gBAAgBS,OACzB,CAOA,MAAAvI,CAAOqG,GACiB,IAAhB9oB,KAAKoqB,SAGTpqB,KAAKoqB,OAAS,EACdpqB,KAAKioB,OAASa,EACd9oB,KAAKuqB,gBAAgBS,OACzB,EAEG,MAAME,UAAsC3B,EAC/C,WAAAxpB,CAAYorB,EAAStD,GACjBrb,MAAMqb,GACN7nB,KAAKmrB,QAAUA,CACnB,CACA,MAAAvI,GACI5iB,KAAKmrB,QAAQvI,QACjB,EAEG,SAASwI,EAA8BlJ,GAC1C,MAAMC,EAAS,IAAI,KACbkJ,EAAgBnJ,EAASC,EAAOE,OACtC,OAAO,IAAI6I,EAA8B/I,EAAQ8G,MAAOW,IACpD,MAAMlH,EAAeP,EAAOE,MAAMM,wBAAwB,KACtDD,EAAa1D,UACbmD,EAAOnD,UACP4K,EAAQnH,OAAO,IAAI,QAEvB,IACI,UAAW,MAAM/mB,KAAQ2vB,EAAe,CACpC,GAAIlJ,EAAOE,MAAMiJ,wBAEb,OAEJ1B,EAAQE,QAAQpuB,EACpB,CACAgnB,EAAa1D,UACbmD,EAAOnD,SACX,CACA,MAAO0C,GACHgB,EAAa1D,UACbmD,EAAOnD,UACP4K,EAAQnH,OAAOf,EACnB,GAER,C,2IC9zB+B,QAAc,mBAAoB,KAAa,KAAa,mBAAoB,mCAAxG,MAEM6J,GAAkB,QAAc,mBAAoB,CAAEt1B,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMq1B,MAAOp1B,QAAS,WAAa,KAAa,kBAAmB,gGACpKq1B,GAAkB,QAAc,mBAAoB,CAAEx1B,KAAM,KAAMS,MAAOR,MAAO,OAAQC,OAAQ,KAAMO,MAAON,QAAS,KAAMM,OAAS,KAAa,kBAAmB,gGAErKg1B,GAAkB,QAAc,mBAAoB,CAAEz1B,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,kBAAmB,4DACxJu1B,GAA4B,QAAc,6BAA8B,CAAE11B,KAAM,KAAMM,QAAQ,WAAWC,YAAY,IAAMN,MAAO,KAAMK,QAAQ,WAAWC,YAAY,IAAML,QAAQ,QAAY,KAAgB,IAAMC,SAAS,QAAY,KAAgB,KAAQ,KAAa,4BAA6B,uCAC9Sw1B,GAAiC,QAAc,kCAAmC,CAAE31B,KAAM,KAAMM,QAAQ,WAAWC,YAAY,IAAMN,MAAO,KAAMK,QAAQ,WAAWC,YAAY,IAAML,QAAQ,QAAY,KAAgB,IAAMC,SAAS,QAAY,KAAgB,KAAQ,KAAa,iCAAkC,qDAC7Ty1B,GAAkC,QAAc,mCAAoC,CAAE51B,KAAM,KAAMM,QAAQ,WAAWC,YAAY,IAAMN,MAAO,KAAMK,QAAQ,WAAWC,YAAY,IAAML,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,kCAAmC,uDAE5R01B,GAAwB,QAAc,yBAA0B,CAAE71B,KAAM,KAAMM,QAAQ,WAAYL,MAAO,KAAMK,QAAQ,WAAYJ,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,wBAAyB,mF,yGChBlO,SAAS21B,EAAU1vB,GACtB,IAAKA,GAAsB,iBAARA,EACf,OAAOA,EAEX,GAAIA,aAAe4S,OACf,OAAO5S,EAEX,MAAMlB,EAASmB,MAAMC,QAAQF,GAAO,GAAK,CAAC,EAI1C,OAHA5G,OAAOsX,QAAQ1Q,GAAK2R,QAAQ,EAAErU,EAAKoB,MAC/BI,EAAOxB,GAAOoB,GAA0B,iBAAVA,EAAqBgxB,EAAUhxB,GAASA,IAEnEI,CACX,CACO,SAAS6wB,EAAW3vB,GACvB,IAAKA,GAAsB,iBAARA,EACf,OAAOA,EAEX,MAAM4vB,EAAQ,CAAC5vB,GACf,KAAO4vB,EAAMxzB,OAAS,GAAG,CACrB,MAAM4D,EAAM4vB,EAAMC,QAClBz2B,OAAO2X,OAAO/Q,GACd,IAAK,MAAM1C,KAAO0C,EACd,GAAI8vB,EAAgB1R,KAAKpe,EAAK1C,GAAM,CAChC,MAAM0W,EAAOhU,EAAI1C,GACG,iBAAT0W,GAAsB5a,OAAOwX,SAASoD,KAAU,QAAaA,IACpE4b,EAAMhxB,KAAKoV,EAEnB,CAER,CACA,OAAOhU,CACX,CACA,MAAM8vB,EAAkB12B,OAAOsY,UAAUgB,eAClC,SAASqd,EAAe/vB,EAAKgwB,GAChC,OAAOC,EAAgBjwB,EAAKgwB,EAAS,IAAIzvB,IAC7C,CACA,SAAS0vB,EAAgBjwB,EAAKgwB,EAAS1vB,GACnC,IAAI,OAAkBN,GAClB,OAAOA,EAEX,MAAMkwB,EAAUF,EAAQhwB,GACxB,QAAuB,IAAZkwB,EACP,OAAOA,EAEX,GAAIjwB,MAAMC,QAAQF,GAAM,CACpB,MAAMmwB,EAAK,GACX,IAAK,MAAMvwB,KAAKI,EACZmwB,EAAGvxB,KAAKqxB,EAAgBrwB,EAAGowB,EAAS1vB,IAExC,OAAO6vB,CACX,CACA,IAAI,QAASnwB,GAAM,CACf,GAAIM,EAAKE,IAAIR,GACT,MAAM,IAAIzD,MAAM,yCAEpB+D,EAAKG,IAAIT,GACT,MAAMowB,EAAK,CAAC,EACZ,IAAK,MAAMC,KAAMrwB,EACT8vB,EAAgB1R,KAAKpe,EAAKqwB,KAC1BD,EAAGC,GAAMJ,EAAgBjwB,EAAIqwB,GAAKL,EAAS1vB,IAInD,OADAA,EAAKgwB,OAAOtwB,GACLowB,CACX,CACA,OAAOpwB,CACX,CAKO,SAASuwB,EAAMC,EAAa1K,EAAQ2K,GAAY,GACnD,OAAK,QAASD,KAGV,QAAS1K,IACT1sB,OAAOkM,KAAKwgB,GAAQnU,QAAQrU,IACpBA,KAAOkzB,EACHC,KACI,QAASD,EAAYlzB,MAAS,QAASwoB,EAAOxoB,IAC9CizB,EAAMC,EAAYlzB,GAAMwoB,EAAOxoB,GAAMmzB,GAGrCD,EAAYlzB,GAAOwoB,EAAOxoB,IAKlCkzB,EAAYlzB,GAAOwoB,EAAOxoB,KAI/BkzB,GAnBI1K,CAoBf,CACO,SAASrpB,EAAOC,EAAKC,GACxB,GAAID,IAAQC,EACR,OAAO,EAEX,GAAID,eAAqCC,EACrC,OAAO,EAEX,UAAWD,UAAeC,EACtB,OAAO,EAEX,GAAmB,iBAARD,EACP,OAAO,EAEX,GAAKuD,MAAMC,QAAQxD,KAAWuD,MAAMC,QAAQvD,GACxC,OAAO,EAEX,IAAII,EACAO,EACJ,GAAI2C,MAAMC,QAAQxD,GAAM,CACpB,GAAIA,EAAIN,SAAWO,EAAMP,OACrB,OAAO,EAEX,IAAKW,EAAI,EAAGA,EAAIL,EAAIN,OAAQW,IACxB,IAAKN,EAAOC,EAAIK,GAAIJ,EAAMI,IACtB,OAAO,CAGnB,KACK,CACD,MAAM2zB,EAAU,GAChB,IAAKpzB,KAAOZ,EACRg0B,EAAQ9xB,KAAKtB,GAEjBozB,EAAQzxB,OACR,MAAM0xB,EAAY,GAClB,IAAKrzB,KAAOX,EACRg0B,EAAU/xB,KAAKtB,GAGnB,GADAqzB,EAAU1xB,QACLxC,EAAOi0B,EAASC,GACjB,OAAO,EAEX,IAAK5zB,EAAI,EAAGA,EAAI2zB,EAAQt0B,OAAQW,IAC5B,IAAKN,EAAOC,EAAIg0B,EAAQ3zB,IAAKJ,EAAM+zB,EAAQ3zB,KACvC,OAAO,CAGnB,CACA,OAAO,CACX,CASO,SAAS6zB,EAAkB5wB,GAC9B,MAAM6wB,EAAU,GAChB,IAAK,MAAM7c,KAVR,SAA6BhU,GAChC,IAAI8wB,EAAM,GACV,KAAO13B,OAAOsY,YAAc1R,GACxB8wB,EAAMA,EAAIzvB,OAAOjI,OAAO23B,oBAAoB/wB,IAC5CA,EAAM5G,OAAOyX,eAAe7Q,GAEhC,OAAO8wB,CACX,CAGuBE,CAAoBhxB,GACV,mBAAdA,EAAIgU,IACX6c,EAAQjyB,KAAKoV,GAGrB,OAAO6c,CACX,CACO,SAASI,EAAkBC,EAAaC,GAC3C,MAAMC,EAAqBC,GAChB,WACH,MAAM/f,EAAOrR,MAAMyR,UAAUlV,MAAM4hB,KAAKpL,UAAW,GACnD,OAAOme,EAAOE,EAAQ/f,EAC1B,EAEExS,EAAS,CAAC,EAChB,IAAK,MAAMwyB,KAAcJ,EACrBpyB,EAAOwyB,GAAcF,EAAkBE,GAE3C,OAAOxyB,CACX,C,gFC9KO,MAAMyyB,EACT,WAAA7tB,CAAY8tB,EAAYlnB,GACpB3G,KAAK8tB,sCAAmCnyB,EACxCqE,KAAK+tB,YAAcF,EACnB7tB,KAAK2G,aAAeA,EACpB3G,KAAKguB,YAAchuB,KAAK+tB,YAAYE,iBACpCjuB,KAAKkuB,aAAeluB,KAAK+tB,YAAYI,kBACrCnuB,KAAKouB,aAAepuB,KAAK2G,aAAaynB,aACtCpuB,KAAKquB,gBAAkBruB,KAAK2G,aAAa0nB,gBACzC,MAAMC,EAAQtuB,KAAK+tB,YAAYQ,qBAC/BvuB,KAAKwuB,UAAYF,EAAMG,IACvBzuB,KAAK0uB,WAAaJ,EAAMhrB,KACxBtD,KAAK2uB,cAAgBL,EAAM/qB,MAC3BvD,KAAK4uB,eAAiBN,EAAMO,MAChC,CACA,6BAAAC,CAA8BC,GAC1B,OAAOA,EAAc/uB,KAAKwuB,SAC9B,CACA,8BAAAQ,CAA+BvoB,EAAYwoB,GACvC,OAAOjvB,KAAK+tB,YAAYiB,+BAA+BvoB,EAAYwoB,EACvE,CACA,gCAAAC,CAAiCzoB,EAAYwoB,GACzC,OAAOjvB,KAAK+tB,YAAYmB,iCAAiCzoB,EAAYwoB,EACzE,CACA,wBAAAE,GACI,OAAOnvB,KAAK2G,aAAawoB,0BAC7B,EAEG,MAAMC,UAAyBxB,EAClC,WAAA7tB,CAAY8tB,EAAYlnB,EAAc0oB,GAClC7iB,MAAMqhB,EAAYlnB,GAClB3G,KAAKsvB,4BAAyB3zB,EAC9BqE,KAAKuvB,WAAaF,CACtB,CACA,0BAAAG,CAA2BvyB,EAAOwyB,GAC9B,OAAOzvB,KAAKuvB,WAAWC,2BAA2BvyB,EAAOwyB,EAC7D,CACA,uBAAAC,CAAwBC,GACpB,OAAO3vB,KAAKuvB,WAAWG,wBAAwBC,EACnD,EAEG,MAAMC,EACT,WAAA7vB,CAAY8vB,EAAqBppB,EAAYtD,EAI7C2sB,GACI9vB,KAAK6vB,oBAAsBA,EAC3B7vB,KAAKyG,WAAaA,EAClBzG,KAAKmD,OAASA,EACdnD,KAAK8vB,oBAAsBA,CAC/B,EAEG,MAAMC,EACT,WAAO5yB,CAAKgG,GACR,MAAMhI,EAAS,IAAImB,MAAM6G,EAAO1K,QAChC,IAAK,IAAIW,EAAI,EAAGC,EAAM8J,EAAO1K,OAAQW,EAAIC,EAAKD,IAAK,CAC/C,MAAM6D,EAAQkG,EAAO/J,GACrB+B,EAAO/B,GAAK,IAAI22B,EAAgB9yB,EAAMqG,KAAMrG,EAAMsG,MACtD,CACA,OAAOpI,CACX,CACA,WAAA4E,CAAYuD,EAAMC,GACdvD,KAAKgwB,2BAAwBr0B,EAC7BqE,KAAKsD,KAAO7I,KAAKyP,MAAM5G,GACvBtD,KAAKuD,MAAQ9I,KAAKyP,MAAM3G,EAC5B,CACA,QAAA+K,GACI,MAAO,IAAItO,KAAKsD,QAAQtD,KAAKuD,QACjC,EAEG,MAAM0sB,EACT,WAAAlwB,CAAYuD,EAAMC,GACdvD,KAAKkwB,gCAA6Bv0B,EAClCqE,KAAKsD,KAAOA,EACZtD,KAAKuD,MAAQA,CACjB,CACA,QAAA+K,GACI,MAAO,IAAItO,KAAKsD,QAAQtD,KAAKuD,QACjC,CACA,cAAOjJ,CAAQpB,EAAGC,GACd,OAAOD,EAAEoK,KAAOnK,EAAEmK,IACtB,EAEG,MAAM6sB,EACT,WAAApwB,CAAY8vB,EAAqBvsB,GAC7BtD,KAAK6vB,oBAAsBA,EAC3B7vB,KAAKowB,aAAe9sB,EACpBtD,KAAKsD,KAAO7I,KAAKyP,MAAMlK,KAAKowB,aAChC,EAEG,MAAMC,EACT,WAAAtwB,CAAY8vB,EAAqB1sB,GAC7BnD,KAAK6vB,oBAAsBA,EAC3B7vB,KAAKmD,OAASA,CAClB,E,kLCtFG,MAAMmtB,EACT,WAAAvwB,CAAY7B,EAAGqyB,GACXvwB,KAAK9B,EAAIA,EACT8B,KAAKuwB,EAAIA,EACTvwB,KAAKwwB,2BAAwB70B,CACjC,CACA,mBAAA80B,CAAoBp7B,GAChB,OAAO,IAAIq7B,EAAkB1wB,KAAK9B,EAAI7I,EAAas7B,QAAS3wB,KAAKuwB,EAAIl7B,EAAau7B,QACtF,EASG,MAAMF,EACT,WAAA3wB,CAAY8wB,EAASC,GACjB9wB,KAAK6wB,QAAUA,EACf7wB,KAAK8wB,QAAUA,EACf9wB,KAAK+wB,6BAA0Bp1B,CACnC,CACA,iBAAAq1B,CAAkB37B,GACd,OAAO,IAAIi7B,EAAgBtwB,KAAK6wB,QAAUx7B,EAAas7B,QAAS3wB,KAAK8wB,QAAUz7B,EAAau7B,QAChG,EAKG,MAAMK,EACT,WAAAlxB,CAAY7B,EAAGqyB,EAAGhtB,EAAOsrB,GACrB7uB,KAAK9B,EAAIA,EACT8B,KAAKuwB,EAAIA,EACTvwB,KAAKuD,MAAQA,EACbvD,KAAK6uB,OAASA,EACd7uB,KAAKkxB,8BAA2Bv1B,CACpC,EAQG,MAAMw1B,EACT,WAAApxB,CAAY7B,EAAGqyB,GACXvwB,KAAK9B,EAAIA,EACT8B,KAAKuwB,EAAIA,EACTvwB,KAAKoxB,oCAAiCz1B,CAC1C,EAEG,SAAS01B,EAAyBC,GACrC,MAAMC,EAAY,KAA2BD,GAC7C,OAAO,IAAIL,EAAmBM,EAAUjuB,KAAMiuB,EAAU9C,IAAK8C,EAAUhuB,MAAOguB,EAAU1C,OAC5F,CACO,SAAS2C,EAAkCF,EAAmBG,EAAoBC,GAUrF,MAAMC,EAASF,EAAmBluB,MAAQ+tB,EAAkBlnB,YACtDwnB,EAASH,EAAmB5C,OAASyC,EAAkBO,aAEvDC,GAAaJ,EAAIxzB,EAAIuzB,EAAmBvzB,GAAKyzB,EAC7CI,GAAaL,EAAInB,EAAIkB,EAAmBlB,GAAKqB,EACnD,OAAO,IAAIT,EAA4BW,EAAWC,EACtD,CACO,MAAMC,UAAyB,IAClC,WAAAjyB,CAAY9D,EAAGg2B,EAAsBX,GACjC9kB,MAAM,KAAc8kB,GAAoBr1B,GACxC+D,KAAKkyB,4BAAyBv2B,EAC9BqE,KAAKiyB,qBAAuBA,EAC5BjyB,KAAK0xB,IAAM,IAAIpB,EAAgBtwB,KAAKmyB,KAAMnyB,KAAKoyB,MAC/CpyB,KAAKuxB,UAAYF,EAAyBC,GAC1CtxB,KAAKqyB,YAAcb,EAAkCF,EAAmBtxB,KAAKuxB,UAAWvxB,KAAK0xB,IACjG,EAEG,MAAMY,EACT,WAAAvyB,CAAYuxB,GACRtxB,KAAKuyB,mBAAqBjB,CAC9B,CACA,OAAAkB,CAAQv2B,GACJ,OAAO,IAAI+1B,EAAiB/1B,GAAG,EAAO+D,KAAKuyB,mBAC/C,CACA,aAAAE,CAAcp1B,EAAQ6kB,GAClB,OAAO,KAA0B7kB,EAAQ,cAAgBpB,IACrDimB,EAASliB,KAAKwyB,QAAQv2B,KAE9B,CACA,SAAAy2B,CAAUr1B,EAAQ6kB,GACd,OAAO,KAA0B7kB,EAAQ,UAAYpB,IACjDimB,EAASliB,KAAKwyB,QAAQv2B,KAE9B,CACA,WAAA02B,CAAYt1B,EAAQ6kB,GAChB,OAAO,KAA0B7kB,EAAQ,KAAcu1B,WAAa32B,IAChEimB,EAASliB,KAAKwyB,QAAQv2B,KAE9B,CACA,aAAA42B,CAAcx1B,EAAQ6kB,GAClB,OAAO,KAA0B7kB,EAAQ,KAAcy1B,aAAe72B,IAClEimB,EAASliB,KAAKwyB,QAAQv2B,GAAIA,EAAEmlB,YAEpC,CACA,YAAA2R,CAAa11B,EAAQ6kB,GACjB,OAAO,KAA0B7kB,EAAQ,KAAc21B,YAAc/2B,IACjEimB,EAASliB,KAAKwyB,QAAQv2B,KAE9B,CACA,WAAAg3B,CAAY51B,EAAQ6kB,GAChB,OAAO,KAA0B7kB,EAAQ,YAAcpB,GAAMimB,EAASliB,KAAKwyB,QAAQv2B,IACvF,EAEG,MAAMi3B,EACT,WAAAnzB,CAAYuxB,GACRtxB,KAAKuyB,mBAAqBjB,CAC9B,CACA,OAAAkB,CAAQv2B,GACJ,OAAO,IAAI+1B,EAAiB/1B,GAAG,EAAO+D,KAAKuyB,mBAC/C,CACA,WAAAY,CAAY91B,EAAQ6kB,GAChB,OAAO,KAA0B7kB,EAAQ,YAAcpB,IACnDimB,EAASliB,KAAKwyB,QAAQv2B,KAE9B,CACA,aAAA42B,CAAcx1B,EAAQ6kB,GAClB,OAAO,KAA0B7kB,EAAQ,KAAcy1B,aAAe72B,IAClEimB,EAASliB,KAAKwyB,QAAQv2B,GAAIA,EAAEmlB,YAEpC,CACA,cAAAgS,CAAe/1B,EAAQ6kB,GACnB,OAAO,KAA0B7kB,EAAQ,KAAcg2B,cAAgBp3B,IACnEimB,EAASliB,KAAKwyB,QAAQv2B,KAE9B,CACA,aAAAq3B,CAAcj2B,EAAQ6kB,GAClB,OAAO,KAA0B7kB,EAAQ,cAAgBpB,GAAMimB,EAASliB,KAAKwyB,QAAQv2B,IACzF,EAEG,MAAMs3B,UAAuC,KAChD,WAAAxzB,CAAYuxB,GACR9kB,QACAxM,KAAKuyB,mBAAqBjB,EAC1BtxB,KAAKwzB,0BAA4BxzB,KAAKyzB,UAAU,IAAI,KACpDzzB,KAAK0zB,iBAAmB,IAC5B,CACA,eAAAxS,CAAgBC,EAAgBC,EAAWC,EAAgBC,EAAqBL,GAG5EjhB,KAAK0zB,iBAAmB,KAAkCvS,EAAexN,cAAe,UAAY1X,IAClFA,EAAE03B,iBACNC,iBAIV5zB,KAAKwzB,0BAA0B5S,gBAAe,EAAM3kB,EAAE6kB,gBACvD,GACH9gB,KAAKwzB,0BAA0BtS,gBAAgBC,EAAgBC,EAAWC,EAAiBplB,IACvFqlB,EAAoB,IAAI0Q,EAAiB/1B,GAAG,EAAM+D,KAAKuyB,sBACvDt2B,IACA+D,KAAK0zB,iBAAiB1U,UACtBiC,EAAehlB,IAEvB,CACA,cAAA2kB,GACI5gB,KAAKwzB,0BAA0B5S,gBAAe,EAClD,EAOG,MAAMiT,SACA7zB,KAAK8zB,QAAU,CAAG,CAC3B,WAAA/zB,CAAYg0B,GACR/zB,KAAK+zB,QAAUA,EACf/zB,KAAKg0B,cAAgBH,EAAgBC,QACrC9zB,KAAKi0B,SAAW,EAChBj0B,KAAKk0B,OAAS,IAAIC,IAElBn0B,KAAKo0B,4BAA8B,IAAI,KAAiB,IAAMp0B,KAAKq0B,iBAAkB,IACzF,CACA,kBAAAC,CAAmBzvB,GACf,MAAM0vB,EAAOv0B,KAAKw0B,gBAAgB3vB,GAElC,OADA0vB,EAAKE,mBACE,CACHC,UAAWH,EAAKG,UAChB1V,QAAS,KACLuV,EAAKI,mBACL30B,KAAKo0B,4BAA4BtN,YAG7C,CACA,eAAA0N,CAAgBI,GACZ,MAAMj7B,EAAMqG,KAAK60B,iBAAiBD,GAClC,IAAIE,EAAe90B,KAAKk0B,OAAOv+B,IAAIgE,GACnC,IAAKm7B,EAAc,CACf,MAAMC,EAAU/0B,KAAKi0B,WACrBa,EAAe,IAAIE,EAAkBr7B,EAAK,YAAYqG,KAAKg0B,eAAee,IAAW,KAAkB/0B,KAAK+zB,QAAQkB,uBAC9Gj1B,KAAK+zB,QAAQkB,2BACbt5B,EAAWi5B,GACjB50B,KAAKk0B,OAAOvkB,IAAIhW,EAAKm7B,EACzB,CACA,OAAOA,CACX,CACA,gBAAAD,CAAiBD,GACb,OAAOM,KAAKC,UAAUP,EAC1B,CACA,cAAAP,GACI,IAAK,MAAME,KAAQv0B,KAAKk0B,OAAOjJ,SACtBsJ,EAAKa,kBACNp1B,KAAKk0B,OAAOvH,OAAO4H,EAAK56B,KACxB46B,EAAKvV,UAGjB,EAEJ,MAAMgW,EACF,WAAAj1B,CAAYpG,EAAK+6B,EAAWW,EAAmBT,GAC3C50B,KAAKrG,IAAMA,EACXqG,KAAK00B,UAAYA,EACjB10B,KAAK40B,WAAaA,EAClB50B,KAAKs1B,gBAAkB,EACvBt1B,KAAKu1B,yBAA2B,IAAI,KACpCv1B,KAAKw1B,cAAgB,KAAqBH,OAAmB15B,EAAWqE,KAAKu1B,0BAC7Ev1B,KAAKw1B,cAAcnxB,YAAcrE,KAAKy1B,WAAWz1B,KAAK00B,UAAW10B,KAAK40B,WAC1E,CACA,UAAAa,CAAWf,EAAWE,GAClB,IAAIc,EAAM,IAAIhB,MACd,IAAK,MAAMrkB,KAAQukB,EAAY,CAC3B,MAAM75B,EAAQ65B,EAAWvkB,GACzB,IAAIslB,EAEAA,EADiB,iBAAV56B,GACI,SAAcA,EAAM66B,IAGpB76B,EAGf26B,GAAO,OADaG,EAAcxlB,OACJslB,IAClC,CAEA,OADAD,GAAO,MACAA,CACX,CACA,OAAA1W,GACIhf,KAAKu1B,yBAAyBvW,UAC9Bhf,KAAKw1B,mBAAgB75B,CACzB,CACA,gBAAA84B,GACIz0B,KAAKs1B,iBACT,CACA,gBAAAX,GACI30B,KAAKs1B,iBACT,CACA,aAAAF,GACI,OAAOp1B,KAAKs1B,gBAAkB,CAClC,EAEJ,SAASO,EAAcH,GACnB,OAAOA,EAAIhnB,QAAQ,WAAY,EAAErN,KAAWA,EAAM+M,eAC7CM,QAAQ,WAAY,EAAEonB,KAAY,IAAIA,EAAO1nB,gBACtD,C,2CCrRO,MAAM2nB,EACT,WAAAh2B,CAAY+D,GACR9D,KAAK8D,QAAUA,EACf9D,KAAKg2B,UAAY,GACjBh2B,KAAKi2B,OAAS,GACdj2B,KAAKk2B,QAAU,GACfl2B,KAAKm2B,KAAO,GACZn2B,KAAKo2B,MAAQ,GACbp2B,KAAKq2B,QAAU,GACfr2B,KAAKs2B,OAAS,GACdt2B,KAAKu2B,aAAe,GACpBv2B,KAAKw2B,YAAc,GACnBx2B,KAAKy2B,YAAc,GACnBz2B,KAAK02B,UAAY,GACjB12B,KAAK22B,WAAa,GAClB32B,KAAK42B,qBAAuB,GAC5B52B,KAAK62B,uBAAyB,GAC9B72B,KAAK82B,gBAAkB,GACvB92B,KAAK+2B,YAAc,GACnB/2B,KAAKg3B,eAAiB,GACtBh3B,KAAKi3B,WAAa,GAClBj3B,KAAKk3B,SAAW,GAChBl3B,KAAKm3B,UAAY,GACjBn3B,KAAKo3B,YAAc,GACnBp3B,KAAKq3B,OAAS,GACdr3B,KAAKs3B,iBAAmB,GACxBt3B,KAAKu3B,YAAa,EAClBv3B,KAAKw3B,SAAW,OAChBx3B,KAAKy3B,WAAa,EACtB,CACA,WAAAC,CAAY1B,GACR,MAAM2B,EAAWC,EAAe5B,GAC5Bh2B,KAAKg2B,YAAc2B,IAGvB33B,KAAKg2B,UAAY2B,EACjB33B,KAAK8D,QAAQ+zB,MAAMF,SAAW33B,KAAKg2B,UACvC,CACA,QAAA8B,CAAS7B,GACL,MAAM1yB,EAAQq0B,EAAe3B,GACzBj2B,KAAKi2B,SAAW1yB,IAGpBvD,KAAKi2B,OAAS1yB,EACdvD,KAAK8D,QAAQ+zB,MAAMt0B,MAAQvD,KAAKi2B,OACpC,CACA,SAAAntB,CAAUotB,GACN,MAAMrH,EAAS+I,EAAe1B,GAC1Bl2B,KAAKk2B,UAAYrH,IAGrB7uB,KAAKk2B,QAAUrH,EACf7uB,KAAK8D,QAAQ+zB,MAAMhJ,OAAS7uB,KAAKk2B,QACrC,CACA,MAAArtB,CAAOstB,GACH,MAAM1H,EAAMmJ,EAAezB,GACvBn2B,KAAKm2B,OAAS1H,IAGlBzuB,KAAKm2B,KAAO1H,EACZzuB,KAAK8D,QAAQ+zB,MAAMpJ,IAAMzuB,KAAKm2B,KAClC,CACA,OAAA4B,CAAQ3B,GACJ,MAAM9yB,EAAOs0B,EAAexB,GACxBp2B,KAAKo2B,QAAU9yB,IAGnBtD,KAAKo2B,MAAQ9yB,EACbtD,KAAK8D,QAAQ+zB,MAAMv0B,KAAOtD,KAAKo2B,MACnC,CACA,SAAA4B,CAAU3B,GACN,MAAM4B,EAASL,EAAevB,GAC1Br2B,KAAKq2B,UAAY4B,IAGrBj4B,KAAKq2B,QAAU4B,EACfj4B,KAAK8D,QAAQ+zB,MAAMI,OAASj4B,KAAKq2B,QACrC,CACA,QAAA6B,CAAS5B,GACL,MAAM6B,EAAQP,EAAetB,GACzBt2B,KAAKs2B,SAAW6B,IAGpBn4B,KAAKs2B,OAAS6B,EACdn4B,KAAK8D,QAAQ+zB,MAAMM,MAAQn4B,KAAKs2B,OACpC,CACA,cAAA8B,CAAe7B,GACX,MAAM8B,EAAcT,EAAerB,GAC/Bv2B,KAAKu2B,eAAiB8B,IAG1Br4B,KAAKu2B,aAAe8B,EACpBr4B,KAAK8D,QAAQ+zB,MAAMQ,YAAcr4B,KAAKu2B,aAC1C,CACA,aAAA+B,CAAcC,GACNv4B,KAAKw2B,cAAgB+B,IAGzBv4B,KAAKw2B,YAAc+B,EACnBv4B,KAAK8D,QAAQ+zB,MAAMU,WAAav4B,KAAKw2B,YACzC,CACA,aAAAgC,CAAcC,GACNz4B,KAAKy2B,cAAgBgC,IAGzBz4B,KAAKy2B,YAAcgC,EACnBz4B,KAAK8D,QAAQ+zB,MAAMY,WAAaz4B,KAAKy2B,YACzC,CACA,WAAAiC,CAAYhC,GACR,MAAMiC,EAAWf,EAAelB,GAC5B12B,KAAK02B,YAAciC,IAGvB34B,KAAK02B,UAAYiC,EACjB34B,KAAK8D,QAAQ+zB,MAAMc,SAAW34B,KAAK02B,UACvC,CACA,YAAAkC,CAAaC,GACL74B,KAAK22B,aAAekC,IAGxB74B,KAAK22B,WAAakC,EAClB74B,KAAK8D,QAAQ+zB,MAAMgB,UAAY74B,KAAK22B,WACxC,CACA,sBAAAmC,CAAuBC,GACf/4B,KAAK42B,uBAAyBmC,IAGlC/4B,KAAK42B,qBAAuBmC,EAC5B/4B,KAAK8D,QAAQ+zB,MAAMkB,oBAAsB/4B,KAAK42B,qBAClD,CACA,wBAAAoC,CAAyBC,GACjBj5B,KAAK62B,yBAA2BoC,IAGpCj5B,KAAK62B,uBAAyBoC,EAC9Bj5B,KAAK8D,QAAQ+zB,MAAMoB,sBAAwBj5B,KAAK62B,uBACpD,CACA,iBAAAqC,CAAkBC,GACVn5B,KAAK82B,kBAAoBqC,IAG7Bn5B,KAAK82B,gBAAkBqC,EACvBn5B,KAAK8D,QAAQ+zB,MAAMsB,eAAiBn5B,KAAK82B,gBAC7C,CACA,aAAAsC,CAAcrC,GACV,MAAMvxB,EAAaoyB,EAAeb,GAC9B/2B,KAAK+2B,cAAgBvxB,IAGzBxF,KAAK+2B,YAAcvxB,EACnBxF,KAAK8D,QAAQ+zB,MAAMryB,WAAaxF,KAAK+2B,YACzC,CACA,gBAAAsC,CAAiBrC,GACb,MAAMsC,EAAgB1B,EAAeZ,GACjCh3B,KAAKg3B,iBAAmBsC,IAG5Bt5B,KAAKg3B,eAAiBsC,EACtBt5B,KAAK8D,QAAQ+zB,MAAMyB,cAAgBt5B,KAAKg3B,eAC5C,CACA,YAAAuC,CAAa7E,GACL10B,KAAKi3B,aAAevC,IAGxB10B,KAAKi3B,WAAavC,EAClB10B,KAAK8D,QAAQ4wB,UAAY10B,KAAKi3B,WAClC,CACA,eAAAuC,CAAgB9E,EAAW+E,GACvBz5B,KAAK8D,QAAQ41B,UAAUC,OAAOjF,EAAW+E,GACzCz5B,KAAKi3B,WAAaj3B,KAAK8D,QAAQ4wB,SACnC,CACA,UAAAkF,CAAWC,GACH75B,KAAKk3B,WAAa2C,IAGtB75B,KAAKk3B,SAAW2C,EAChB75B,KAAK8D,QAAQ+zB,MAAMgC,QAAU75B,KAAKk3B,SACtC,CACA,WAAA4C,CAAYnK,GACJ3vB,KAAKm3B,YAAcxH,IAGvB3vB,KAAKm3B,UAAYxH,EACjB3vB,KAAK8D,QAAQ+zB,MAAMlI,SAAW3vB,KAAKm3B,UACvC,CACA,aAAA4C,CAAcC,GACNh6B,KAAKo3B,cAAgB4C,IAGzBh6B,KAAKo3B,YAAc4C,EACnBh6B,KAAK8D,QAAQ+zB,MAAMmC,WAAah6B,KAAKo3B,YACzC,CACA,QAAA6C,CAASC,GACDl6B,KAAKq3B,SAAW6C,IAGpBl6B,KAAKq3B,OAAS6C,EACdl6B,KAAK8D,QAAQ+zB,MAAMqC,MAAQl6B,KAAKq3B,OACpC,CACA,kBAAA8C,CAAmBC,GACXp6B,KAAKs3B,mBAAqB8C,IAG9Bp6B,KAAKs3B,iBAAmB8C,EACxBp6B,KAAK8D,QAAQ+zB,MAAMuC,gBAAkBp6B,KAAKs3B,iBAC9C,CACA,eAAA+C,CAAgBC,GACRt6B,KAAKu3B,aAAe+C,IAGxBt6B,KAAKu3B,WAAa+C,EAClBt6B,KAAK8D,QAAQ+zB,MAAM0C,UAAYv6B,KAAKu3B,WAAa,6BAA+B,GACpF,CACA,YAAAiD,CAAaC,GACLz6B,KAAKy3B,aAAegD,IAGxBz6B,KAAKy3B,WAAagD,EAClBz6B,KAAK8D,QAAQ+zB,MAAM4C,UAAYA,EACnC,CACA,UAAAC,CAAWC,GACH36B,KAAKw3B,WAAamD,IAGtB36B,KAAKw3B,SAAWmD,EAChB36B,KAAK8D,QAAQ+zB,MAAM8C,QAAU36B,KAAKw3B,SACtC,CACA,YAAA9d,CAAaJ,EAAMve,GACfiF,KAAK8D,QAAQ4V,aAAaJ,EAAMve,EACpC,CACA,eAAA0e,CAAgBH,GACZtZ,KAAK8D,QAAQ2V,gBAAgBH,EACjC,CACA,WAAAuE,CAAY2B,GACRxf,KAAK8D,QAAQ+Z,YAAY2B,EAAM1b,QACnC,CACA,WAAAsV,CAAYoG,GACRxf,KAAK8D,QAAQsV,YAAYoG,EAAM1b,QACnC,EAEJ,SAAS8zB,EAAe78B,GACpB,MAAyB,iBAAVA,EAAqB,GAAGA,MAAYA,CACvD,CACO,SAAS6/B,EAAkB92B,GAC9B,OAAO,IAAIiyB,EAAYjyB,EAC3B,C,mFCtMA,MAAM+2B,EAAc,KAAuB,IAA2B,KAGhEC,EAAc,KAAuB,KAA4B,IAChE,MAAMC,EACT,WAAAh7B,CAAYoiB,GACRniB,KAAKg7B,6BAA8B,EACnC,MAAM/+B,EAAIkmB,EACVniB,KAAK8gB,aAAe7kB,EACpB+D,KAAK3C,OAASpB,EAAEoB,OAChB2C,KAAKi7B,QAAUh/B,EAAEg/B,QACjBj7B,KAAKk7B,SAAWj/B,EAAEi/B,SAClBl7B,KAAKm7B,OAASl/B,EAAEk/B,OAChBn7B,KAAKo7B,QAAUn/B,EAAEm/B,QACjBp7B,KAAKq7B,YAAcp/B,EAAEq/B,mBAAmB,YACxCt7B,KAAKu7B,QA1Db,SAAwBt/B,GACpB,GAAIA,EAAEu/B,SAAU,CAEZ,MAAMC,EAAOpzB,OAAOqzB,aAAaz/B,EAAEu/B,UAAUG,cAC7C,OAAO,KAAaC,WAAWH,EACnC,CACA,MAAMF,EAAUt/B,EAAEs/B,QAElB,GAAgB,IAAZA,EACA,OAAO,EAEN,GAAI,KACL,OAAQA,GACJ,KAAK,GAAI,OAAO,GAChB,KAAK,GACD,GAAI,KACA,OAAO,GAEX,MACJ,KAAK,GAAI,OAAO,GAEhB,KAAK,IAAK,OAAO,IACjB,KAAK,IAAK,OAAO,IACjB,KAAK,IAAK,OAAO,GACjB,KAAK,IACD,GAAI,KACA,OAAO,QAKlB,GAAI,KAAkB,CACvB,GAAI,MAAoC,KAAZA,EAExB,OAAO,GAEN,IAAK,MAAoC,KAAZA,EAC9B,OAAO,EAEf,CAEA,OAAO,KAAmBA,IAAY,CAC1C,CAgBuBM,CAAe5/B,GAC9B+D,KAAK87B,KAAO7/B,EAAE6/B,KAEd97B,KAAKi7B,QAAUj7B,KAAKi7B,SAA4B,IAAjBj7B,KAAKu7B,QACpCv7B,KAAKm7B,OAASn7B,KAAKm7B,QAA2B,IAAjBn7B,KAAKu7B,QAClCv7B,KAAKk7B,SAAWl7B,KAAKk7B,UAA6B,IAAjBl7B,KAAKu7B,QACtCv7B,KAAKo7B,QAAUp7B,KAAKo7B,SAA4B,KAAjBp7B,KAAKu7B,QACpCv7B,KAAK+7B,cAAgB/7B,KAAKg8B,qBAC1Bh8B,KAAKi8B,gBAAkBj8B,KAAKk8B,sBAEhC,CACA,cAAAra,GACQ7hB,KAAK8gB,cAAgB9gB,KAAK8gB,aAAae,gBACvC7hB,KAAK8gB,aAAae,gBAE1B,CACA,eAAAsa,GACQn8B,KAAK8gB,cAAgB9gB,KAAK8gB,aAAaqb,iBACvCn8B,KAAK8gB,aAAaqb,iBAE1B,CACA,cAAAxI,GACI,OAAO3zB,KAAKi8B,eAChB,CACA,MAAAnjC,CAAOE,GACH,OAAOgH,KAAK+7B,gBAAkB/iC,CAClC,CACA,kBAAAgjC,GACI,IAAIriC,EAAM,EACW,IAAjBqG,KAAKu7B,SAAqD,IAAjBv7B,KAAKu7B,SAAsD,IAAjBv7B,KAAKu7B,SAAoD,KAAjBv7B,KAAKu7B,UAChI5hC,EAAMqG,KAAKu7B,SAEf,IAAIpgC,EAAS,EAcb,OAbI6E,KAAKi7B,UACL9/B,GAAU0/B,GAEV76B,KAAKm7B,SACLhgC,GAnDM,KAqDN6E,KAAKk7B,WACL//B,GArDQ,MAuDR6E,KAAKo7B,UACLjgC,GAAU2/B,GAEd3/B,GAAUxB,EACHwB,CACX,CACA,oBAAA+gC,GACI,IAAIviC,EAAM,EAIV,OAHqB,IAAjBqG,KAAKu7B,SAAqD,IAAjBv7B,KAAKu7B,SAAsD,IAAjBv7B,KAAKu7B,SAAoD,KAAjBv7B,KAAKu7B,UAChI5hC,EAAMqG,KAAKu7B,SAER,IAAI,KAAav7B,KAAKi7B,QAASj7B,KAAKk7B,SAAUl7B,KAAKm7B,OAAQn7B,KAAKo7B,QAASzhC,EACpF,E,mFC5FAyiC,E,mGAfJ,MAAMC,EACF,WAAAt8B,CAAYu8B,EAAY,MACpBt8B,KAAKs8B,UAAYA,EACjBt8B,KAAKu8B,KAAO,CAChB,EAEJ,MAAMC,EACF,aAAIF,GAAc,OAAOt8B,KAAKwJ,QAAU,CACxC,WAAAzJ,CAAY4vB,EAAUnmB,EAAUizB,GAC5Bz8B,KAAK2vB,SAAWA,EAChB3vB,KAAKwJ,SAAWA,EAChBxJ,KAAKy8B,aAAeA,EACpBz8B,KAAKu8B,KAAO,CAChB,GAGJ,SAAWH,GAQPA,EAAcM,kBAPd,SAA2BC,EAAKnzB,EAAUC,GACtC,MAAMkmB,EAAWgN,EAAIC,uBAAuBpzB,EAAUC,GACtD,OAAIkmB,EACO,IAAI6M,EAAqB7M,EAAUnmB,EAAU,MAEjD,IAAI6yB,EAAqB7yB,EACpC,CAEH,CATD,CASG4yB,IAAkBA,EAAgB,CAAC,IAC/B,MAAMS,EACT,WAAA98B,CAAY+8B,EAA2BC,GACnC/8B,KAAK88B,0BAA4BA,EACjC98B,KAAK+8B,qBAAuBA,CAChC,EAEG,MAAMC,EACT,kBAAOC,CAAYtN,EAAU1yB,EAAQ,MACjC,OAAKA,GAAS0yB,EACH,IAAI,IAAYA,EAASlpB,WAAYkpB,EAAS9kB,OAAQ8kB,EAASlpB,WAAYkpB,EAAS9kB,QAExF5N,GAAS,IACpB,CACA,oBAAOigC,CAAc7hC,EAAS8hC,EAAaxN,GACvC,MAAO,CAAE4M,KAAM,EAAiClhC,UAAS8hC,cAAaxN,WAAU1yB,MAAO+C,KAAKi9B,YAAYtN,GAC5G,CACA,qBAAOyN,CAAe/hC,EAAS8hC,GAC3B,MAAO,CAAEZ,KAAM,EAAkClhC,UAAS8hC,cAAaxN,SAAU,KAAM1yB,MAAO,KAClG,CACA,mBAAOogC,CAAad,EAAMlhC,EAAS8hC,EAAaxN,EAAU1yB,EAAOqgC,GAC7D,MAAO,CAAEf,OAAMlhC,UAAS8hC,cAAaxN,WAAU1yB,QAAOqgC,SAC1D,CACA,qBAAOC,CAAehB,EAAMlhC,EAAS8hC,EAAaxN,EAAU2N,GACxD,MAAO,CAAEf,OAAMlhC,UAAS8hC,cAAaxN,WAAU1yB,MAAO+C,KAAKi9B,YAAYtN,GAAW2N,SACtF,CACA,wBAAOE,CAAkBniC,EAAS8hC,EAAaxN,EAAU1yB,EAAOqgC,GAC5D,MAAO,CAAEf,KAAM,EAAsClhC,UAAS8hC,cAAaxN,WAAU1yB,MAAO+C,KAAKi9B,YAAYtN,EAAU1yB,GAAQqgC,SACnI,CACA,yBAAOG,CAAmBpiC,EAAS8hC,EAAaxN,EAAU2N,GACtD,MAAO,CAAEf,KAAM,EAAuClhC,UAAS8hC,cAAaxN,WAAU1yB,MAAO+C,KAAKi9B,YAAYtN,GAAW2N,SAC7H,CACA,0BAAOI,CAAoBriC,EAAS8hC,EAAaG,GAC7C,MAAO,CAAEf,KAAM,EAAwClhC,UAAS8hC,cAAaxN,SAAU,KAAM1yB,MAAO,KAAMqgC,SAC9G,CACA,sBAAOK,CAAgBtiC,EAAS8hC,EAAaxN,GACzC,MAAO,CAAE4M,KAAM,GAAoClhC,UAAS8hC,cAAaxN,WAAU1yB,MAAO+C,KAAKi9B,YAAYtN,GAC/G,CACA,0BAAOiO,CAAoBviC,EAAS8hC,EAAaG,GAC7C,MAAO,CAAEf,KAAM,GAAyClhC,UAAS8hC,cAAaxN,SAAU,KAAM1yB,MAAO,KAAMqgC,SAC/G,CACA,0BAAOO,CAAoBV,EAAaxN,EAAUmO,EAAiBC,GAC/D,MAAO,CAAExB,KAAM,GAAyClhC,QAAS,KAAM8hC,cAAaxN,WAAU1yB,MAAO+C,KAAKi9B,YAAYtN,GAAWmO,kBAAiBC,kBACtJ,CACA,oBAAOC,CAAczB,GACjB,OAAa,IAATA,EACO,WAEE,IAATA,EACO,sBAEE,IAATA,EACO,sBAEE,IAATA,EACO,0BAEE,IAATA,EACO,mBAEE,IAATA,EACO,eAEE,IAATA,EACO,gBAEE,IAATA,EACO,oBAEE,IAATA,EACO,iBAEE,KAATA,EACO,iBAEE,KAATA,EACO,YAEE,KAATA,EACO,iBAEJ,SACX,CACA,eAAOjuB,CAASjR,GACZ,OAAO2C,KAAKg+B,cAAc3gC,EAAOk/B,MAAQ,KAAOl/B,EAAOsyB,SAAW,MAAQtyB,EAAOJ,MAAQ,MAAQi4B,KAAKC,UAAU93B,EAAOigC,OAC3H,EAEJ,MAAMW,EACF,iBAAOC,CAAWC,GACd,OAAwB,IAAhBA,EAAK1lC,QACM,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,yBAAOC,CAAmBD,GACtB,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,+BAAOE,CAAyBF,GAC5B,OAAQA,EAAK1lC,OAAS,GACH,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,iCAAOG,CAA2BH,GAC9B,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,uBAAOI,CAAiBJ,GACpB,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,8BAAOK,CAAwBL,GAC3B,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,6BAAOM,CAAuBN,GAC1B,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,EAChB,CACA,yCAAOO,CAAmCP,GACtC,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,EAChB,CACA,8BAAOQ,CAAwBR,GAC3B,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,IACO,IAAZA,EAAK,EAChB,CACA,yCAAOS,CAAmCT,GACtC,OAAQA,EAAK1lC,QAAU,GACJ,IAAZ0lC,EAAK,EAChB,EAEG,MAAMU,EACT,WAAA9+B,CAAYkE,EAAS66B,EAAYC,GAC7B/+B,KAAKg/B,UAAY/6B,EAAQ+6B,UACzB,MAAMn6B,EAAUZ,EAAQg7B,cAAcp6B,QACtC7E,KAAKk/B,WAAar6B,EAAQlP,IAAI,KAC9BqK,KAAKm/B,YAAcL,EAAWK,YAC9Bn/B,KAAKwF,WAAaX,EAAQlP,IAAI,IAC9BqK,KAAKo/B,eAAiBv6B,EAAQlP,IAAI,KAClCqK,KAAKq/B,+BAAiCx6B,EAAQlP,IAAI,IAAgC0pC,+BAClFr/B,KAAK++B,eAAiBA,EACtB/+B,KAAK8e,SAAW7a,EAChBjE,KAAKs/B,YAAcR,CACvB,CACA,cAAAS,CAAeC,GACX,OAAOX,EAAeU,eAAev/B,KAAK8e,SAAU0gB,EACxD,CACA,qBAAOD,CAAet7B,EAASu7B,GAE3B,MAAMC,EAAqBx7B,EAAQ4pB,WAAW6R,8BAA8BF,GAC5E,GAAIC,EAAoB,CACpB,MAAME,EAAiBF,EAAmBG,eAAiBH,EAAmB5Q,OAAS,EACjFgR,EAAY57B,EAAQ+6B,UAAUc,eACpC,IACInQ,EADAoQ,EAAiB,KAEjBC,EAAgB,KAqBpB,OApBIP,EAAmBQ,kBAAoBJ,IAEvCG,EAAgB,IAAI,IAASP,EAAmBQ,gBAAkB,EAAG,IAErER,EAAmBQ,gBAAkB,IAErCF,EAAiB,IAAI,IAASN,EAAmBQ,gBAAiBh8B,EAAQ+6B,UAAUkB,iBAAiBT,EAAmBQ,mBAGxHtQ,EADkB,OAAlBqQ,EACWD,EAEa,OAAnBA,EACMC,EAENR,EAAsBG,EAChBI,EAGAC,EAER,CACHG,WAAYV,EAAmB7J,GAC/BqK,gBAAiBR,EAAmBQ,gBACpCF,eAAgBA,EAChBC,cAAeA,EACfrQ,SAAUA,EAElB,CACA,OAAO,IACX,CACA,uBAAAyQ,CAAwBZ,GACpB,GAAIx/B,KAAK8e,SAAS+O,WAAWwS,aAAab,GAAsB,CAE5D,MAAM/4B,EAAazG,KAAK8e,SAASkgB,UAAUc,eACrCQ,EAAgBtgC,KAAK8e,SAASkgB,UAAUkB,iBAAiBz5B,GAC/D,MAAO,CACHxJ,MAAO,IAAI,IAAYwJ,EAAY65B,EAAe75B,EAAY65B,GAC9DD,cAAc,EAEtB,CACA,MAAM55B,EAAazG,KAAK8e,SAAS+O,WAAW0S,8BAA8Bf,GACpEc,EAAgBtgC,KAAK8e,SAASkgB,UAAUkB,iBAAiBz5B,GAC/D,MAAO,CACHxJ,MAAO,IAAI,IAAYwJ,EAAY,EAAGA,EAAY65B,GAClDD,cAAc,EAEtB,CACA,6BAAAE,CAA8Bf,GAC1B,OAAOx/B,KAAK8e,SAAS+O,WAAW0S,8BAA8Bf,EAClE,CACA,YAAAa,CAAab,GACT,OAAOx/B,KAAK8e,SAAS+O,WAAWwS,aAAab,EACjD,CACA,cAAAgB,CAAehB,GACX,OAAOx/B,KAAK8e,SAAS+O,WAAW2S,eAAehB,EACnD,CACA,iBAAAiB,CAAkBjB,GACd,OAAOx/B,KAAK8e,SAAS+O,WAAW4S,kBAAkBjB,EACtD,CACA,8BAAAxQ,CAA+BvoB,GAC3B,OAAOzG,KAAK8e,SAAS+O,WAAWmB,+BAA+BvoB,EACnE,CACA,aAAAi6B,CAAcrlC,EAAS4hB,GACnB,OAAO4hB,EAAe8B,eAAetlC,EAAS4hB,EAAMjd,KAAKs/B,YAAYH,YACzE,CACA,qBAAOwB,CAAetlC,EAAS4hB,EAAMwC,GACjC,KAAOpkB,GAAWA,IAAYA,EAAQsY,cAAc0G,MAAM,CACtD,GAAIhf,EAAQmd,cAAgBnd,EAAQmd,aAAayE,GAC7C,OAAO5hB,EAAQod,aAAawE,GAEhC,GAAI5hB,IAAYokB,EACZ,OAAO,KAEXpkB,EAAUA,EAAQ2gB,UACtB,CACA,OAAO,IACX,CACA,YAAA4kB,CAAan6B,GACT,OAAOzG,KAAKs/B,YAAYsB,aAAan6B,EACzC,CACA,uBAAAipB,CAAwBjpB,EAAYoE,GAChC,OAAO7K,KAAKs/B,YAAY5P,wBAAwBjpB,EAAYoE,EAChE,CACA,sBAAA+xB,CAAuBpzB,EAAUC,GAC7B,OAAOzJ,KAAKs/B,YAAY1C,uBAAuBpzB,EAAUC,EAC7D,CACA,mBAAAo3B,GACI,OAAO7gC,KAAK8e,SAAS+O,WAAWgT,qBACpC,CACA,oBAAAC,GACI,OAAO9gC,KAAK8e,SAAS+O,WAAWiT,sBACpC,EAEJ,MAAMC,EACF,WAAAhhC,CAAY48B,EAAKpL,EAAWG,EAAKW,GAC7BryB,KAAKuxB,UAAYA,EACjBvxB,KAAK0xB,IAAMA,EACX1xB,KAAKqyB,YAAcA,EACnBryB,KAAKw/B,oBAAsB/kC,KAAKkE,IAAI,EAAGg+B,EAAIkE,sBAAwB7gC,KAAKqyB,YAAY9B,GACpFvwB,KAAKghC,6BAA+BrE,EAAImE,uBAAyB9gC,KAAKqyB,YAAYn0B,EAAIy+B,EAAIuC,WAAW+B,YACrGjhC,KAAKkhC,eAAkBlhC,KAAKqyB,YAAYn0B,EAAIy+B,EAAIuC,WAAW+B,aAAejhC,KAAKqyB,YAAYn0B,GAAKy+B,EAAIuC,WAAWiC,gBAC/GnhC,KAAKohC,iBAAmBphC,KAAKkhC,eAC7BlhC,KAAKm9B,YAAc1iC,KAAKkE,IAAI,EAAG0iC,EAAmBC,gBAAgBthC,KAAKghC,6BAA8BrE,EAAI0C,gCAC7G,EAEJ,MAAMkC,UAAuBR,EACzB,UAAI1jC,GACA,OAAI2C,KAAKwhC,kBACExhC,KAAKyhC,cAAc1mC,MAAMuhC,UAE7Bt8B,KAAK0hC,YAChB,CACA,cAAIC,GAKA,OAJI3hC,KAAK4hC,0BAA4B5hC,KAAK3C,SACtC2C,KAAK4hC,wBAA0B5hC,KAAK3C,OACpC2C,KAAK6hC,sBAAwB,IAAiBtiB,QAAQvf,KAAK3C,OAAQ2C,KAAK8hC,KAAK3C,cAE1En/B,KAAK6hC,qBAChB,CACA,WAAA9hC,CAAY48B,EAAKpL,EAAWG,EAAKW,EAAa0P,GAC1Cv1B,MAAMmwB,EAAKpL,EAAWG,EAAKW,GAC3BryB,KAAKyhC,cAAgB,IAAI,IAAK,IAAMJ,EAAmBW,UAAUhiC,KAAK8hC,KAAM9hC,OAC5EA,KAAK4hC,wBAA0B,KAC/B5hC,KAAK6hC,sBAAwB,IAAIjiB,WAAW,GAC5C5f,KAAK8hC,KAAOnF,EACZ38B,KAAK0hC,aAAeK,EAEpB,MAAME,EAAiB5lB,QAAQrc,KAAK0hC,cACpC1hC,KAAKwhC,mBAAqBS,CAC9B,CACA,QAAA3zB,GACI,MAAO,OAAOtO,KAAK0xB,IAAIxzB,KAAK8B,KAAK0xB,IAAInB,iBAAiBvwB,KAAKuxB,UAAUrzB,KAAK8B,KAAKuxB,UAAUhB,mBAAmBvwB,KAAKqyB,YAAYn0B,KAAK8B,KAAKqyB,YAAY9B,4BAA4BvwB,KAAKw/B,sDAAsDx/B,KAAKghC,2CAA2ChhC,KAAK3C,OAAS2C,KAAK3C,OAAO6gB,UAAY,MACpU,CACA,uCAAIgkB,GACA,OAASliC,KAAKwhC,mBACgC,OAAvCxhC,KAAKyhC,cAAc1mC,MAAMuhC,WACzBt8B,KAAK3C,SAAW2C,KAAKyhC,cAAc1mC,MAAMuhC,SACpD,CACA,qBAAA6F,GACIniC,KAAKwhC,mBAAoB,CAC7B,CACA,eAAAF,CAAgB3R,EAAW,MACvB,OAAIA,GAAYA,EAAS9kB,OAAS7K,KAAK8hC,KAAK9C,UAAUkB,iBAAiBvQ,EAASlpB,YAErE,IAAc27B,wBAAwBpiC,KAAK8hC,KAAK9C,UAAUqD,eAAe1S,EAASlpB,YAAakpB,EAAS9kB,OAAQ7K,KAAK8hC,KAAK9C,UAAUsD,MAAMC,aAAav6B,SAAW,EAEtKhI,KAAKm9B,WAChB,CACA,cAAAqF,CAAe7S,EAAW,MACtB,OAAOqN,EAAYE,cAAcl9B,KAAK3C,OAAQ2C,KAAKshC,gBAAgB3R,GAAWA,EAClF,CACA,eAAA8S,GACI,OAAOzF,EAAYI,eAAep9B,KAAK3C,OAAQ2C,KAAKshC,kBACxD,CACA,aAAAoB,CAAcnG,EAAM5M,EAAU1yB,EAAOqgC,GACjC,OAAON,EAAYK,aAAad,EAAMv8B,KAAK3C,OAAQ2C,KAAKshC,gBAAgB3R,GAAWA,EAAU1yB,EAAOqgC,EACxG,CACA,eAAAqF,CAAgBpG,EAAM5M,EAAU2N,GAC5B,OAAON,EAAYO,eAAehB,EAAMv8B,KAAK3C,OAAQ2C,KAAKshC,gBAAgB3R,GAAWA,EAAU2N,EACnG,CACA,kBAAAsF,CAAmBjT,EAAU1yB,EAAOqgC,GAChC,OAAON,EAAYQ,kBAAkBx9B,KAAK3C,OAAQ2C,KAAKshC,gBAAgB3R,GAAWA,EAAU1yB,EAAOqgC,EACvG,CACA,mBAAAuF,CAAoBlT,EAAU2N,GAC1B,OAAON,EAAYS,mBAAmBz9B,KAAK3C,OAAQ2C,KAAKshC,gBAAgB3R,GAAWA,EAAU2N,EACjG,CACA,oBAAAwF,CAAqBxF,GACjB,OAAON,EAAYU,oBAAoB19B,KAAK3C,OAAQ2C,KAAKshC,kBAAmBhE,EAChF,CACA,gBAAAyF,CAAiBpT,GACb,OAAOqN,EAAYW,gBAAgB39B,KAAK3C,OAAQ2C,KAAKshC,gBAAgB3R,GAAWA,EACpF,CACA,oBAAAqT,CAAqB1F,GACjB,OAAON,EAAYY,oBAAoB59B,KAAK3C,OAAQ2C,KAAKshC,kBAAmBhE,EAChF,EAEJ,MAAM2F,EAA4B,CAAE5C,cAAc,GAClD,SAAS6C,EAA8BC,GACnC,MAAO,CACH9C,cAAc,EACd8C,yBAA0BA,EAElC,CACO,MAAM9B,EACT,WAAAthC,CAAYkE,EAAS66B,GACjB9+B,KAAK8e,SAAW7a,EAChBjE,KAAKs/B,YAAcR,CACvB,CACA,mBAAAsE,CAAoBnnC,GAChB,MAAMypB,EAAIzpB,EAAEoB,OACN8gC,EAAO,IAAiB5e,QAAQmG,EAAG1lB,KAAKs/B,YAAYH,aAE1D,SAAIlB,EAAYO,wBAAwBL,IAASF,EAAYS,mCAAmCP,IAI5FF,EAAYU,wBAAwBR,IAASF,EAAYW,mCAAmCT,GAIpG,CACA,iBAAAkF,CAAkBtE,EAAgBxN,EAAWG,EAAKW,EAAah1B,GAC3D,MAAMs/B,EAAM,IAAIkC,EAAe7+B,KAAK8e,SAAU9e,KAAKs/B,YAAaP,GAC1DuE,EAAU,IAAI/B,EAAe5E,EAAKpL,EAAWG,EAAKW,EAAah1B,GACrE,IACI,MAAMiO,EAAI+1B,EAAmBkC,mBAAmB5G,EAAK2G,GACrD,GAAe,IAAXh4B,EAAEixB,MAEEI,EAAIyC,gBAAiC,OAAf9zB,EAAEqkB,SAAmB,CAC3C,MAAMA,EAAW0R,EAAmBmC,uBAAuBl4B,EAAEqkB,SAAUgN,EAAIqC,WACrE/hC,EAAQ,IAAYwmC,cAAc9T,EAAUA,GAAU+T,UAAUp4B,EAAErO,OACxE,OAAOqmC,EAAQV,mBAAmBjT,EAAU1yB,EAAOqO,EAAEgyB,OACzD,CAGJ,OAAOhyB,CACX,CACA,MAAOoW,GAEH,OAAO4hB,EAAQd,gBACnB,CACJ,CACA,yBAAOe,CAAmB5G,EAAK2G,GAE3B,GAAuB,OAAnBA,EAAQjmC,OAER,OAAOimC,EAAQd,iBAGnB,MAAMmB,EAAkBL,EACxB,IAAInoC,EAAS,KAeb,OAdK8iC,EAAYQ,uBAAuB6E,EAAQ3B,aAAgB1D,EAAYS,mCAAmC4E,EAAQ3B,aAAgB1D,EAAYW,mCAAmC0E,EAAQ3B,cAE1LxmC,EAASA,GAAUmoC,EAAQd,kBAE/BrnC,EAASA,GAAUkmC,EAAmBuC,sBAAsBjH,EAAKgH,GACjExoC,EAASA,GAAUkmC,EAAmBwC,sBAAsBlH,EAAKgH,GACjExoC,EAASA,GAAUkmC,EAAmByC,gBAAgBnH,EAAKgH,GAC3DxoC,EAASA,GAAUkmC,EAAmB0C,wBAAwBpH,EAAKgH,GACnExoC,EAASA,GAAUkmC,EAAmB2C,iBAAiBrH,EAAKgH,GAC5DxoC,EAASA,GAAUkmC,EAAmB4C,eAAetH,EAAKgH,GAC1DxoC,EAASA,GAAUkmC,EAAmB6C,mBAAmBvH,EAAKgH,GAC9DxoC,EAASA,GAAUkmC,EAAmB8C,iBAAiBxH,EAAKgH,GAC5DxoC,EAASA,GAAUkmC,EAAmB+C,kBAAkBzH,EAAKgH,GAC7DxoC,EAASA,GAAUkmC,EAAmBgD,kBAAkB1H,EAAKgH,GACrDxoC,GAAUmoC,EAAQd,gBAC9B,CACA,4BAAOoB,CAAsBjH,EAAK2G,GAE9B,GAAIrF,EAAYO,wBAAwB8E,EAAQ3B,aAAe1D,EAAYS,mCAAmC4E,EAAQ3B,YAAa,CAC/H,MAAM2C,EAAW3H,EAAI+D,cAAc4C,EAAQjmC,OAAQ,YACnD,OAAIinC,EACOhB,EAAQR,qBAAqBwB,GAG7BhB,EAAQd,gBAEvB,CACA,OAAO,IACX,CACA,4BAAOqB,CAAsBlH,EAAK2G,GAE9B,GAAIrF,EAAYU,wBAAwB2E,EAAQ3B,aAAe1D,EAAYW,mCAAmC0E,EAAQ3B,YAAa,CAC/H,MAAM2C,EAAW3H,EAAI+D,cAAc4C,EAAQjmC,OAAQ,YACnD,OAAIinC,EACOhB,EAAQN,qBAAqBsB,GAG7BhB,EAAQd,gBAEvB,CACA,OAAO,IACX,CACA,yBAAO0B,CAAmBvH,EAAK2G,GAC3B,GAAIA,EAAQjmC,OAAQ,CAEhB,MAAMy/B,EAA4BH,EAAIoC,eAAejC,0BACrD,IAAK,MAAMyH,KAAKzH,EACZ,GAAIwG,EAAQjmC,SAAWknC,EAAEzgC,QACrB,OAAOw/B,EAAQV,mBAAmB2B,EAAE5U,SAAU,KAAM,CAAE6U,uBAAuB,EAAO/H,aAAc,MAG9G,CACA,GAAI6G,EAAQlC,gBAAiB,CAKzB,MAAMtE,EAA4BH,EAAIoC,eAAejC,0BAC/CkE,EAA+BsC,EAAQtC,6BACvCxB,EAAsB8D,EAAQ9D,oBACpC,IAAK,MAAM+E,KAAKzH,EAA2B,CACvC,GAAIkE,EAA+BuD,EAAEtD,YAEjC,SAEJ,GAAID,EAA+BuD,EAAEtD,YAAcsD,EAAEhhC,MAEjD,SAEJ,MAAMkhC,EAAuB9H,EAAI3N,+BAA+BuV,EAAE5U,SAASlpB,YAC3E,GAAIg+B,GAAwBjF,GACrBA,GAAuBiF,EAAuBF,EAAE1V,OACnD,OAAOyU,EAAQV,mBAAmB2B,EAAE5U,SAAU,KAAM,CAAE6U,uBAAuB,EAAO/H,aAAc,MAE1G,CACJ,CACA,OAAO,IACX,CACA,uBAAOuH,CAAiBrH,EAAK2G,GACzB,MAAMoB,EAAe/H,EAAI4C,eAAe+D,EAAQ9D,qBAChD,GAAIkF,EAAc,CACd,MAAMC,EAAmBrB,EAAQlC,gBAAkB,EAA4C,EAC/F,OAAOkC,EAAQX,gBAAgBgC,EAAiBD,EAAa/U,SAAU+U,EAC3E,CACA,OAAO,IACX,CACA,uBAAOP,CAAiBxH,EAAK2G,GAEzB,OAAIrF,EAAYC,WAAWoF,EAAQ3B,YAC3BhF,EAAIoC,eAAehC,qBACZuG,EAAQV,mBAAmBjG,EAAIoC,eAAehC,qBAAsB,KAAM,CAAEyH,uBAAuB,EAAO/H,aAAc,OAE5H6G,EAAQb,kBAEZ,IACX,CACA,qBAAOwB,CAAetH,EAAK2G,GACvB,GAAIA,EAAQpC,eAAgB,CACxB,MAAM/T,EAAMwP,EAAIyD,wBAAwBkD,EAAQ9D,qBAC1C9N,EAAMvE,EAAIlwB,MAAM2nC,mBACtB,IAAIn7B,EAAShP,KAAK8P,IAAI+4B,EAAQjR,YAAYn0B,GAC1C,MAAMo/B,EAAS,CACX+C,aAAclT,EAAIkT,aAClBc,gBAAiBxE,EAAIuC,WAAWiC,gBAChC0D,iBAAkBlI,EAAIuC,WAAW2F,iBACjCC,iBAAkBnI,EAAIuC,WAAW4F,iBACjCC,QAASt7B,GAGb,GADAA,GAAUkzB,EAAIuC,WAAWiC,gBACrB13B,GAAUkzB,EAAIuC,WAAW2F,iBAAkB,CAE3C,MAAMG,EAAkBrI,EAAIqC,UAAUiG,qBAAqBC,mCAAmC/X,EAAIlwB,MAAM2nC,oBAClGO,EAAQxI,EAAIqC,UAAUoG,WAAWC,eAAeL,EAAgBv+B,YAEtE,OADA62B,EAAOgI,gBAAkBH,EAAM1qC,KAAKC,MAAM+O,EAASkzB,EAAIn3B,aAChD89B,EAAQZ,cAAc,EAA6ChR,EAAKvE,EAAIlwB,MAAOqgC,EAC9F,CAEA,OADA7zB,GAAUkzB,EAAIuC,WAAW2F,iBACrBp7B,GAAUkzB,EAAIuC,WAAW4F,iBAElBxB,EAAQZ,cAAc,EAA6ChR,EAAKvE,EAAIlwB,MAAOqgC,IAE9F7zB,GAAUkzB,EAAIuC,WAAW4F,iBAElBxB,EAAQZ,cAAc,EAAiDhR,EAAKvE,EAAIlwB,MAAOqgC,GAClG,CACA,OAAO,IACX,CACA,wBAAO8G,CAAkBzH,EAAK2G,GAC1B,IAAKrF,EAAYG,mBAAmBkF,EAAQ3B,YACxC,OAAO,KAEX,GAAIhF,EAAI6D,eAAe8C,EAAQ9D,qBAC3B,OAAO8D,EAAQT,oBAAoB,IAAI,IAAS,EAAG,GAAII,GAG3D,GAAItG,EAAI0D,aAAaiD,EAAQ9D,sBAAwB7C,EAAI8D,kBAAkB6C,EAAQ9D,qBAAsB,CAErG,MAAMK,EAAYlD,EAAIqC,UAAUc,eAC1BQ,EAAgB3D,EAAIqC,UAAUkB,iBAAiBL,GACrD,OAAOyD,EAAQT,oBAAoB,IAAI,IAAShD,EAAWS,GAAgB2C,EAC/E,CAGA,GAAIhF,EAAYI,yBAAyBiF,EAAQ3B,YAAa,CAC1D,MAAMl7B,EAAak2B,EAAI4D,8BAA8B+C,EAAQ9D,qBAC7D,GAAgD,IAA5C7C,EAAIqC,UAAUuG,cAAc9+B,GAAmB,CAC/C,MAAM++B,EAAY7I,EAAIiE,aAAan6B,GAC7B62B,EAAS4F,EAA8BI,EAAQtC,6BAA+BwE,GACpF,OAAOlC,EAAQT,oBAAoB,IAAI,IAASp8B,EAAY,GAAI62B,EACpE,CACA,MAAMkI,EAAY7I,EAAIiE,aAAan6B,GACnC,GAAI68B,EAAQtC,8BAAgCwE,EAAW,CAEnD,MAAMlI,EAAS4F,EAA8BI,EAAQtC,6BAA+BwE,GAC9E9T,EAAM,IAAI,IAASjrB,EAAYk2B,EAAIqC,UAAUkB,iBAAiBz5B,IACpE,OAAO68B,EAAQT,oBAAoBnR,EAAK4L,EAC5C,CACJ,CAEA,MAAMmE,EAAgB6B,EAAQ7B,cAAc1mC,MAC5C,OAA2B,IAAvB0mC,EAAclF,KACP8E,EAAmBoE,qCAAqC9I,EAAK2G,EAAS7B,EAAcj4B,SAAUi4B,EAAc9R,SAAU8R,EAAchF,cAG3I6G,EAAQpB,qCAERoB,EAAQnB,wBACDniC,KAAKujC,mBAAmB5G,EAAK2G,IAGjCA,EAAQd,gBACnB,CACA,sBAAOsB,CAAgBnH,EAAK2G,GACxB,GAAIrF,EAAYM,iBAAiB+E,EAAQ3B,YAAa,CAClD,MAAM+D,EAAqB/I,EAAI4D,8BAA8B+C,EAAQ9D,qBAC/Dt4B,EAAYy1B,EAAIqC,UAAUkB,iBAAiBwF,GACjD,OAAOpC,EAAQP,iBAAiB,IAAI,IAAS2C,EAAoBx+B,GACrE,CACA,OAAO,IACX,CACA,8BAAO68B,CAAwBpH,EAAK2G,GAChC,GAAIrF,EAAYK,2BAA2BgF,EAAQ3B,aAC3C2B,EAAQjmC,QAAsC,IAA5BimC,EAAQjmC,OAAOgV,SAAgB,CACjD,MAAMqiB,EAAY4O,EAAQjmC,OAAOq3B,UACjC,GAAIA,GAAa,yBAAyB/oB,KAAK+oB,GAAY,CACvD,MAAMgR,EAAqB/I,EAAI4D,8BAA8B+C,EAAQ9D,qBAC/Dt4B,EAAYy1B,EAAIqC,UAAUkB,iBAAiBwF,GACjD,OAAOpC,EAAQP,iBAAiB,IAAI,IAAS2C,EAAoBx+B,GACrE,CACJ,CAEJ,OAAO,IACX,CACA,wBAAOm9B,CAAkB1H,EAAK2G,GAG1B,GAAIrF,EAAYK,2BAA2BgF,EAAQ3B,YAAa,CAC5D,MAAM+D,EAAqB/I,EAAI4D,8BAA8B+C,EAAQ9D,qBAC/Dt4B,EAAYy1B,EAAIqC,UAAUkB,iBAAiBwF,GACjD,OAAOpC,EAAQP,iBAAiB,IAAI,IAAS2C,EAAoBx+B,GACrE,CACA,OAAO,IACX,CACA,cAAAy+B,CAAetT,GACX,MAAMxtB,EAAU7E,KAAK8e,SAASmgB,cAAcp6B,QACtCq6B,EAAar6B,EAAQlP,IAAI,KACzBqrC,EAA+BhhC,KAAK8e,SAAS+O,WAAWiT,uBAAyBzO,EAAYn0B,EAAIghC,EAAW+B,YAClH,OAAOI,EAAmBC,gBAAgBN,EAA8Bn8B,EAAQlP,IAAI,IAAgC0pC,+BACxH,CACA,sBAAOiC,CAAgBN,EAA8B3B,GACjD,OAAI2B,EAA+B,EACxB,EAEGvmC,KAAKyP,MAAM82B,EAA+B3B,GACxC,CACpB,CACA,2CAAOoG,CAAqC9I,EAAK2G,EAAS95B,EAAUkoB,EAAK+K,GACrE,MAAMh2B,EAAairB,EAAIjrB,WACjBoE,EAAS6mB,EAAI7mB,OACb26B,EAAY7I,EAAIiE,aAAan6B,GACnC,GAAI68B,EAAQtC,6BAA+BwE,EAAW,CAClD,MAAMlI,EAAS4F,EAA8BI,EAAQtC,6BAA+BwE,GACpF,OAAOlC,EAAQT,oBAAoBnR,EAAK4L,EAC5C,CACA,MAAMlP,EAAeuO,EAAIjN,wBAAwBjpB,EAAYoE,GAC7D,IAAKujB,EACD,OAAOkV,EAAQd,eAAe9Q,GAElC,MAAMkU,EAAyBxX,EAAa9qB,KAC5C,GAAI7I,KAAK8P,IAAI+4B,EAAQtC,6BAA+B4E,GAA0B,EAC1E,OAAOtC,EAAQV,mBAAmBlR,EAAK,KAAM,CAAE8S,wBAAyB/H,EAAcA,iBAE1F,MAAMoJ,EAAS,GAEf,GADAA,EAAO5qC,KAAK,CAAEwO,OAAQ2kB,EAAa9qB,KAAMuH,OAAQA,IAC7CA,EAAS,EAAG,CACZ,MAAMujB,EAAeuO,EAAIjN,wBAAwBjpB,EAAYoE,EAAS,GAClEujB,GACAyX,EAAO5qC,KAAK,CAAEwO,OAAQ2kB,EAAa9qB,KAAMuH,OAAQA,EAAS,GAElE,CAEA,GAAIA,EADkB8xB,EAAIqC,UAAUkB,iBAAiBz5B,GACzB,CACxB,MAAM2nB,EAAeuO,EAAIjN,wBAAwBjpB,EAAYoE,EAAS,GAClEujB,GACAyX,EAAO5qC,KAAK,CAAEwO,OAAQ2kB,EAAa9qB,KAAMuH,OAAQA,EAAS,GAElE,CACAg7B,EAAOvqC,KAAK,CAACpC,EAAGC,IAAMD,EAAEuQ,OAAStQ,EAAEsQ,QACnC,MAAMq8B,EAAmBxC,EAAQ5R,IAAIjB,oBAAoB,KAAckM,EAAIwC,cACrE4G,EAAqBv8B,EAASw8B,wBAC9BC,EAAuBF,EAAmBziC,MAAQwiC,EAAiBjV,SAAWiV,EAAiBjV,SAAWkV,EAAmB5N,MACnI,IAAI+N,EAAM,KACV,IAAK,IAAI9sC,EAAI,EAAGA,EAAIysC,EAAOptC,OAAQW,IAAK,CACpC,MAAMiK,EAAOwiC,EAAOzsC,EAAI,GAClB+sC,EAAON,EAAOzsC,GACpB,GAAIiK,EAAKoG,QAAU65B,EAAQtC,8BAAgCsC,EAAQtC,8BAAgCmF,EAAK18B,OAAQ,CAC5Gy8B,EAAM,IAAI,IAAYz/B,EAAYpD,EAAKwH,OAAQpE,EAAY0/B,EAAKt7B,QAMhE6mB,EAFkBj3B,KAAK8P,IAAIlH,EAAKoG,OAAS65B,EAAQtC,8BAC/BvmC,KAAK8P,IAAI47B,EAAK18B,OAAS65B,EAAQtC,8BAE3C,IAAI,IAASv6B,EAAYpD,EAAKwH,QAC9B,IAAI,IAASpE,EAAY0/B,EAAKt7B,QACpC,KACJ,CACJ,CACA,OAAOy4B,EAAQV,mBAAmBlR,EAAKwU,EAAK,CAAE1B,uBAAwByB,KAAyBxJ,EAAcA,gBACjH,CAIA,wCAAO2J,CAAkCzJ,EAAK2G,GAG1C,MAAM78B,EAAak2B,EAAI4D,8BAA8B+C,EAAQ9D,qBACvD6G,EAA0B1J,EAAI3N,+BAA+BvoB,GAC7D6/B,EAAwBD,EAA0B1J,EAAIn3B,WAG5D,KAFyBiB,IAAek2B,EAAIqC,UAAUc,gBAC/CwD,EAAQ9D,oBAAsB8G,GACf,CAClB,MAAMC,EAA6B9rC,KAAKC,OAAO2rC,EAA0BC,GAAyB,GAClG,IAAIE,EAAgBlD,EAAQ5R,IAAInB,GAAKgW,EAA6BjD,EAAQ9D,qBACtEgH,GAAiBlD,EAAQ/R,UAAUhB,IACnCiW,EAAgBlD,EAAQ/R,UAAUhB,EAAI,GAEtCiW,GAAiBlD,EAAQ/R,UAAUhB,EAAI+S,EAAQ/R,UAAU1C,SACzD2X,EAAgBlD,EAAQ/R,UAAUhB,EAAI+S,EAAQ/R,UAAU1C,OAAS,GAErE,MAAM4X,EAAe,IAAI,KAAgBnD,EAAQ5R,IAAIxzB,EAAGsoC,GAClDl7B,EAAItL,KAAK0mC,wCAAwC/J,EAAK8J,EAAahW,oBAAoB,KAAckM,EAAIwC,eAC/G,GAAe,IAAX7zB,EAAEixB,KACF,OAAOjxB,CAEf,CAEA,OAAOtL,KAAK0mC,wCAAwC/J,EAAK2G,EAAQ5R,IAAIjB,oBAAoB,KAAckM,EAAIwC,cAC/G,CACA,8CAAOuH,CAAwC/J,EAAKgK,GAChD,MAAMC,EAAa,KAAkBjK,EAAIwC,aACzC,IAAIliC,EAYJ,GATQA,EAFJ2pC,OAC8C,IAAnCA,EAAWC,oBA4GlC,SAAmCD,EAAY1oC,EAAGqyB,GAC9C,MAAMtzB,EAAQoF,SAASC,cAEvB,IAAIwkC,EAAKF,EAAWG,iBAAiB7oC,EAAGqyB,GACxC,GAAW,OAAPuW,EAAa,CAIb,KAAOA,GAAMA,EAAG3iC,YAAc2iC,EAAG3iC,WAAWkO,WAAay0B,EAAG3iC,WAAW6iC,WAAaF,EAAGG,WAAaH,EAAGG,UAAU9iC,YAC7G2iC,EAAKA,EAAGG,UAGZ,MAAMC,EAAOJ,EAAGd,wBAEVmB,EAAW,KAAcL,GAOzBM,EAAO,GANKD,EAASE,iBAAiBP,EAAI,MAAMQ,iBAAiB,iBACnDH,EAASE,iBAAiBP,EAAI,MAAMQ,iBAAiB,mBACtDH,EAASE,iBAAiBP,EAAI,MAAMQ,iBAAiB,kBACvDH,EAASE,iBAAiBP,EAAI,MAAMQ,iBAAiB,gBACnDH,EAASE,iBAAiBP,EAAI,MAAMQ,iBAAiB,kBACrDH,EAASE,iBAAiBP,EAAI,MAAMQ,iBAAiB,iBAGlEz2B,EAAOi2B,EAAGS,UAEhB,IAEIC,EAFAC,EAAcP,EAAK5jC,KACnBmG,EAAS,EAGb,GAAIvL,EAAIgpC,EAAK5jC,KAAO4jC,EAAK3jC,MACrBkG,EAASoH,EAAKpY,WAEb,CACD,MAAMivC,EAAkBC,EAAgBC,cAGxC,IAAK,IAAIxuC,EAAI,EAAGA,EAAIyX,EAAKpY,OAAS,EAAGW,IAAK,CAMtC,GAJAouC,EAAOE,EAAgBG,aAAah3B,EAAKi3B,OAAO1uC,GAAIguC,GAAQ,EAE5DK,GAAeD,EAEXtpC,EAAIupC,EAAa,CACjBh+B,EAASrQ,EACT,KACJ,CAEAquC,GAAeD,CACnB,CACJ,CAEAvqC,EAAM8F,SAAS+jC,EAAG3iC,WAAYsF,GAC9BxM,EAAM+F,OAAO8jC,EAAG3iC,WAAYsF,EAChC,CACA,OAAOxM,CACX,CAlKwB8qC,CAA0BnB,EAAYD,EAAO9V,QAAS8V,EAAO7V,SAG7D8V,EAAWC,oBAAoBF,EAAO9V,QAAS8V,EAAO7V,SAI1D6L,EAAIwC,YAAYxrB,cAAckzB,oBAAoBF,EAAO9V,QAAS8V,EAAO7V,UAEhF7zB,IAAUA,EAAM+qC,eACjB,OAAO,IAAI3L,EAGf,MAAM2L,EAAiB/qC,EAAM+qC,eAC7B,GAAIA,EAAe31B,WAAa21B,EAAehB,UAAW,CAEtD,MAAMiB,EAAUD,EAAehsB,WACzBksB,EAAUD,EAAUA,EAAQjsB,WAAa,KACzCmsB,EAAUD,EAAUA,EAAQlsB,WAAa,KAE/C,OADyBmsB,GAAWA,EAAQ91B,WAAa81B,EAAQzoB,aAAeyoB,EAAQzT,UAAY,QAC3E,KAAS9uB,WACvBw2B,EAAcM,kBAAkBC,EAAKsL,EAAShrC,EAAM2F,aAGpD,IAAIy5B,EAAqB2L,EAAehsB,WAEvD,CACK,GAAIgsB,EAAe31B,WAAa21B,EAAetoB,aAAc,CAE9D,MAAMuoB,EAAUD,EAAehsB,WACzBksB,EAAUD,EAAUA,EAAQjsB,WAAa,KAE/C,OADyBksB,GAAWA,EAAQ71B,WAAa61B,EAAQxoB,aAAewoB,EAAQxT,UAAY,QAC3E,KAAS9uB,WACvBw2B,EAAcM,kBAAkBC,EAAKqL,EAAgBA,EAAe3jC,YAAY5L,QAGhF,IAAI4jC,EAAqB2L,EAExC,CACA,OAAO,IAAI3L,CACf,CAIA,2CAAO+L,CAAqCzL,EAAKgK,GAC7C,MAAM0B,EAAY1L,EAAIwC,YAAYxrB,cAAc20B,uBAAuB3B,EAAO9V,QAAS8V,EAAO7V,SAC9F,GAAIuX,EAAUE,WAAWl2B,WAAag2B,EAAUE,WAAWvB,UAAW,CAElE,MAAMiB,EAAUI,EAAUE,WAAWvsB,WAC/BksB,EAAUD,EAAUA,EAAQjsB,WAAa,KACzCmsB,EAAUD,EAAUA,EAAQlsB,WAAa,KAE/C,OADyBmsB,GAAWA,EAAQ91B,WAAa81B,EAAQzoB,aAAeyoB,EAAQzT,UAAY,QAC3E,KAAS9uB,WACvBw2B,EAAcM,kBAAkBC,EAAK0L,EAAUE,WAAWvsB,WAAYqsB,EAAU5+B,QAGhF,IAAI4yB,EAAqBgM,EAAUE,WAAWvsB,WAE7D,CAGA,GAAIqsB,EAAUE,WAAWl2B,WAAag2B,EAAUE,WAAW7oB,aAAc,CACrE,MAAMuoB,EAAUI,EAAUE,WAAWvsB,WAC/BwsB,EAAmBP,GAAWA,EAAQ51B,WAAa41B,EAAQvoB,aAAeuoB,EAAQvT,UAAY,KAC9FwT,EAAUD,EAAUA,EAAQjsB,WAAa,KACzCysB,EAAmBP,GAAWA,EAAQ71B,WAAa61B,EAAQxoB,aAAewoB,EAAQxT,UAAY,KACpG,GAAI8T,IAAqB,KAAS5iC,WAAY,CAE1C,MAAM8iC,EAAYL,EAAUE,WAAW/tB,WAAW/f,KAAKmE,IAAIypC,EAAU5+B,OAAQ4+B,EAAUE,WAAW/tB,WAAW/hB,OAAS,IACtH,GAAIiwC,EACA,OAAOtM,EAAcM,kBAAkBC,EAAK+L,EAAW,EAE/D,MACK,GAAID,IAAqB,KAAS7iC,WAEnC,OAAOw2B,EAAcM,kBAAkBC,EAAK0L,EAAUE,WAAY,EAE1E,CACA,OAAO,IAAIlM,EAAqBgM,EAAUE,WAC9C,CACA,6BAAO/E,CAAuB7T,EAAUqP,GACpC,MAAM31B,EAAc21B,EAAUqD,eAAe1S,EAASlpB,aAChD,QAAEuB,GAAYg3B,EAAUsD,MAAMC,aAC9BoG,EAAc,IAAwBC,eAAev/B,EAAasmB,EAAS9kB,OAAS,EAAG7C,EAAS,GACtG,OAAqB,IAAjB2gC,EACO,IAAI,IAAShZ,EAASlpB,WAAYkiC,EAAc,GAEpDhZ,CACX,CACA,gBAAOqS,CAAUrF,EAAK2G,GAClB,IAAInoC,EAAS,IAAIkhC,EAOjB,GANiE,mBAAtDM,EAAIwC,YAAYxrB,cAAckzB,oBACrC1rC,EAAS6E,KAAKomC,kCAAkCzJ,EAAK2G,GAEhD3G,EAAIwC,YAAYxrB,cAAc20B,yBACnCntC,EAAS6E,KAAKooC,qCAAqCzL,EAAK2G,EAAQ5R,IAAIjB,oBAAoB,KAAckM,EAAIwC,gBAE1F,IAAhBhkC,EAAOohC,KAA4C,CACnD,MAAME,EAAeE,EAAIqC,UAAU6J,kBAAkB1tC,EAAOw0B,UACtDmZ,EAAqBnM,EAAIqC,UAAU+J,kBAAkB5tC,EAAOw0B,SAAU,IACxE8M,GAAiBqM,EAAmBhwC,OAAOqC,EAAOw0B,YAClDx0B,EAAS,IAAIqhC,EAAqBsM,EAAoB3tC,EAAOqO,SAAUizB,GAE/E,CACA,OAAOthC,CACX,EA0DJ,MAAMwsC,SACO3nC,KAAKgpC,UAAY,IAAM,CAChC,kBAAOpB,GAIH,OAHKD,EAAgBqB,YACjBrB,EAAgBqB,UAAY,IAAIrB,GAE7BA,EAAgBqB,SAC3B,CACA,WAAAjpC,GACIC,KAAKipC,OAAS,CAAC,EACfjpC,KAAKkpC,QAAU7mC,SAASqR,cAAc,SAC1C,CACA,YAAAm0B,CAAapM,EAAM2L,GACf,MAAM+B,EAAW1N,EAAO2L,EACxB,GAAIpnC,KAAKipC,OAAOE,GACZ,OAAOnpC,KAAKipC,OAAOE,GAEvB,MAAMllC,EAAUjE,KAAKkpC,QAAQE,WAAW,MACxCnlC,EAAQmjC,KAAOA,EACf,MACM7jC,EADUU,EAAQolC,YAAY5N,GACdl4B,MAEtB,OADAvD,KAAKipC,OAAOE,GAAY5lC,EACjBA,CACX,E,scC54BG,MAAM+lC,GAAkB,QAAc,mBAAoB,CAAErzC,KAAM,UAAWC,MAAO,KAAMQ,MAAOP,OAAQ,KAAMq1B,MAAOp1B,QAAS,KAAMM,OAAS,KAAa,qBAAsB,0BAC3K6yC,GAAkB,QAAc,mBAAoB,KAAY,KAAa,qBAAsB,0BACnGC,GAAc,QAAc,eAAgB,CAAEvzC,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,iBAAkB,sBACzJqzC,GAA0B,QAAc,2BAA4B,CAAExzC,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,6BAA8B,uDACvMszC,GAAmC,QAAc,8BAA+B,CAAEzzC,KAAM,YAAaC,MAAO,YAAaC,OAAQ,KAAMC,QAAS,MAAQ,KAAa,8BAA+B,2DACpMuzC,GAA8B,QAAc,+BAAgC,CAAE1zC,MAAM,QAAY,KAAa,IAAMC,OAAO,QAAY,KAAa,IAAMC,OAAQ,KAAMK,YAAaJ,QAAS,KAAMI,aAAe,KAAa,+BAAgC,uDAC/PozC,GAA8B,QAAc,+BAAgC,CAAE3zC,KAAM,KAAMS,MAAOR,MAAO,KAAMs1B,MAAOr1B,OAAQ,KAAYC,QAAS,MAAc,KAAa,+BAAgC,2DAG7MyzC,IAF6B,QAAc,8BAA+B,CAAE3zC,OAAO,QAAY,KAAY,IAAMD,MAAM,QAAY,KAAY,IAAME,QAAQ,QAAY,KAAY,IAAMC,SAAS,QAAY,KAAY,KAAQ,KAAa,6BAA8B,sDAE/O,QAAc,iCAAkC,CAAEH,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMq1B,MAAOp1B,QAAS,KAAMM,OAAS,KAAa,gCAAiC,iEAChNozC,GAAgC,QAAc,iCAAkC,CAAE7zC,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,QAAS,MAAc,KAAa,gCAAiC,gEAC9L2zC,GAA4B,QAAc,6BAA8B,CAAE9zC,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,4BAA6B,4DAC1M4zC,GAAmC,QAAc,oCAAqC,CAAE/zC,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMq1B,MAAOp1B,QAAS,KAAMM,OAAS,KAAa,mCAAoC,4DACzNuzC,GAAmC,QAAc,oCAAqC,CAAEh0C,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,QAAS,MAAc,KAAa,mCAAoC,4DACvM8zC,GAA+B,QAAc,gCAAiC,CAAEj0C,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,+BAAgC,wDACnN+zC,GAAiC,QAAc,kCAAmC,CAAEl0C,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMq1B,MAAOp1B,QAAS,KAAMM,OAAS,KAAa,iCAAkC,0DACnN0zC,GAAiC,QAAc,kCAAmC,CAAEn0C,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,QAAS,MAAc,KAAa,iCAAkC,0DACjMi0C,GAA6B,QAAc,8BAA+B,CAAEp0C,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,6BAA8B,sDAE7Mk0C,GAAmB,QAAc,sBAAuB,CAAEr0C,KAAM,UAAWC,MAAO,KAAMQ,MAAOP,OAAQ,KAAMq1B,MAAOp1B,QAAS,KAAMM,OAAS,KAAa,qBAAsB,yBAC/K6zC,GAAuB,QAAc,0BAA2B,CAAEt0C,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAMq1B,MAAOp1B,QAAS,KAAMM,OAAS,KAAa,yBAA0B,8BAC/K8zC,GAAmB,QAAc,sBAAuB,CAAEv0C,KAAM,UAAWC,MAAO,KAAYC,OAAQ,KAAMO,MAAON,QAAS,MAAc,KAAa,qBAAsB,yBAC7Kq0C,GAAe,QAAc,kBAAmB,CAAEx0C,KAAMq0C,EAAkBp0C,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,iBAAkB,qBAE9Ks0C,GAAmB,QAAc,oBAAqB,KAAMh0C,MAAO,KAAa,mBAAoB,6BACpGi0C,GAAkB,QAAc,oBAAoB,QAAYD,EAAkB,IAAK,KAAa,kBAAmB,4BACvHE,GAAmB,QAAc,oBAAqB,CAAE30C,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,WAAa,KAAa,mBAAoB,6BAChKy0C,GAAwB,QAAc,yBAA0B,CAAE50C,MAAM,OAAQ20C,EAAkB,IAAM10C,OAAO,QAAO00C,EAAkB,IAAMz0C,OAAQy0C,EAAkBx0C,QAASw0C,GAAoB,KAAa,wBAAyB,2CAC3OE,GAAe,QAAc,gBAAiB,KAAgB,KAAa,eAAgB,yBAC3FC,GAA4B,QAAc,6BAA8B,CAAE90C,KAAM,KAAMS,MAAOR,MAAO,KAAMQ,MAAOP,OAAQ,KAAMO,MAAON,QAAS,MAAc,KAAa,4BAA6B,uCACvM40C,GAA4B,QAAc,6BAA8B,CAAE/0C,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMC,QAAS,KAAMM,OAAS,KAAa,4BAA6B,uCAC7Lu0C,GAAiC,QAAc,kCAAmC,CAAEh1C,MAAM,OAAQ+0C,EAA2B,IAAM90C,OAAO,QAAO80C,EAA2B,IAAM70C,OAAQ,KAAMC,QAAS,MAAQ,KAAa,iCAAkC,qDAEhQ80C,GAAwB,QAAc,yBAA0BtB,EAA6B,KAAa,wBAAyB,6CACnIuB,GAAwB,QAAc,yBAA0BxB,EAA6B,KAAa,kBAAmB,6CAC7HyB,GAAoB,QAAc,qBAAsB3B,EAAyB,KAAa,oBAAqB,6CACnH4B,GAA0B,QAAc,2BAA4B,KAAM,KAAa,0BAA2B,+CAClHC,GAA0B,QAAc,2BAA4B,KAAM,KAAa,0BAA2B,+CAClHC,GAAsB,QAAc,uBAAwB,CAAEr1C,OAAO,QAAYg1C,EAAuB,IAAKj1C,MAAM,QAAYi1C,EAAuB,IAAK/0C,QAAQ,QAAY+0C,EAAuB,IAAK90C,SAAS,QAAY80C,EAAuB,KAAO,KAAa,sBAAuB,+CAClSM,GAA+B,QAAc,gCAAiC9B,EAAkC,KAAa,uBAAwB,oEAErJ+B,GAAqB,QAAc,sBAAuBnB,EAAkB,KAAa,sBAAuB,yCAEhHoB,IAD2B,QAAc,4BAA6B,KAAwB,KAAa,6BAA8B,+EACpH,QAAc,sBAAuBlB,EAAkB,KAAa,sBAAuB,0CAChHmB,GAAiB,QAAc,kBAAmBlB,EAAc,KAAa,kBAAmB,qCAGhGmB,IAFuB,QAAc,wBAAyB,KAAgB,KAAa,yBAA0B,2EAEzF,QAAc,6BAA8B,CAAE31C,KAAM,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,IAAK,MAAQC,MAAO,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,IAAK,KAAOC,OAAQ,KAAMK,YAAaJ,QAAS,KAAMI,aAAe,KAAa,4BAA6B,uGAC7Qq1C,GAA4B,QAAc,6BAA8B,CAAE51C,KAAM,KAAMM,QAAQ,WAAYL,MAAO,KAAMK,QAAQ,WAAYJ,OAAQ,KAAMO,MAAON,QAAS,MAAc,KAAa,4BAA6B,sGACjO01C,GAAwB,QAAc,yBAA0B,CAAE71C,KAAM,IAAI,KAAM,IAAI,KAAK,GAAI,GAAI,GAAI,KAAOC,MAAO,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,IAAK,KAAOC,OAAQ,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,MAAOC,QAAS,MAAkB,KAAa,wBAAyB,kGAC3Q21C,GAA8B,QAAc,+BAAgC,CAAE91C,KAAM,IAAI,KAAM,IAAI,KAAK,GAAI,GAAI,GAAI,KAAOC,MAAO,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,IAAK,KAAOC,OAAQ,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,MAAOC,QAAS,MAAc,KAAa,8BAA+B,wG,qFCrD3R41C,E,sDA6FJ,SAASC,EAAc5uC,EAAQpF,GAClC,OAAI,IAAIi0C,MAAM7uC,IACH,QAAiBA,EAAOpF,OAAQA,IAGhC,QAAqBoF,EAAQpF,EAAS,IAErD,CACO,SAASk0C,EAAkB9uC,KAAW+uC,GACzC,OAAOA,EAAQC,KAAKp0C,GAAUg0C,EAAc5uC,EAAQpF,GACxD,EAtGA,SAAW+zC,GAKPA,EAAQM,SAAW,WAInBN,EAAQO,OAAS,SAIjBP,EAAQQ,SAAW,UAInBR,EAAQS,YAAc,cAItBT,EAAQU,mBAAqB,qBAC7BV,EAAQW,KAAO,OACfX,EAAQY,MAAQ,QAChBZ,EAAQa,KAAO,OACfb,EAAQc,OAAS,SACjBd,EAAQe,SAAW,WACnBf,EAAQ3xC,KAAO,OACf2xC,EAAQgB,QAAU,UAClBhB,EAAQiB,aAAe,gBACvBjB,EAAQkB,qBAAuB,yBAC/BlB,EAAQmB,4BAA8B,iCACtCnB,EAAQoB,eAAiB,kBACzBpB,EAAQqB,mBAAqB,uBAC7BrB,EAAQsB,mBAAqB,uBAC7BtB,EAAQuB,2BAA6B,gCACrCvB,EAAQwB,+BAAiC,qCACzCxB,EAAQyB,yBAA2B,8BACnCzB,EAAQ0B,6BAA+B,mCACvC1B,EAAQ2B,uBAAyB,2BACjC3B,EAAQ4B,uBAAyB,2BACjC5B,EAAQ6B,eAAiB,kBACzB7B,EAAQ8B,qBAAuB,yBAC/B9B,EAAQ+B,eAAiB,kBAEzB/B,EAAQgC,oBAAsB,yBAE9BhC,EAAQiC,2BAA6B,iCAErCjC,EAAQkC,mBAAqB,qBAI7BlC,EAAQmC,aAAe,gBAIvBnC,EAAQoC,cAAgB,iBAIxBpC,EAAQqC,UAAY,YAKpBrC,EAAQsC,mBAAqB,cAI7BtC,EAAQuC,IAAM,MAIdvC,EAAQwC,KAAO,OAIfxC,EAAQyC,oBAAsB,aAI9BzC,EAAQ0C,cAAgB,UAIxB1C,EAAQ2C,YAAc,eAItB3C,EAAQ4C,cAAgB,QAC3B,CA3FD,CA2FG5C,IAAYA,EAAU,CAAC,IAyDnB,MAAM6C,EAAoB,IA5CjC,MACI,WAAA9uC,GACIC,KAAK8uC,OAASr5C,OAAO6X,OAAO,MAC5BtN,KAAK+uC,OAASt5C,OAAO6X,OAAO,MAC5BtN,KAAKgvC,kBAAoBv5C,OAAO6X,OAAO,MACvCtN,KAAKivC,oBAAsB,OAC3BjvC,KAAKkvC,UAAY,KACjBlvC,KAAKmvC,gBAAkB,GAC3B,CACA,qBAAAC,CAAsBC,GAClBrvC,KAAKivC,oBAAsBI,CAC/B,CACA,wBAAIC,GACA,OAAO,KAAYC,KAAKvvC,KAAKmvC,gBAAiBnD,EAAQkB,qBAC1D,CACA,OAAAsC,CAAQC,GACJ,GAAIzvC,KAAKkvC,UACL,IACI,OAAOlvC,KAAKkvC,UAAUO,EAC1B,CACA,MAAO/tB,GAEH,OADA,KAAyBA,GAClB+tB,CACX,CAEJ,MAAMC,EAAYD,EAAIC,UACtB,IAAIC,EAAO3vC,KAAK8uC,OAAOY,GACnBC,IAA+B,IAAvBA,EAAK/xC,QAAQ,OAAsC,IAAvB+xC,EAAK/xC,QAAQ,OACjD+xC,EAAO,IAAIA,MAEf,MAAMC,EAAO5vC,KAAK+uC,OAAOW,GACnBG,EAAkB7vC,KAAKgvC,kBAAkBU,GAC/C,IAAII,EAAQ,QAAQC,mBAAmBN,EAAItR,QAI3C,MAH+B,iBAApB0R,IACPC,GAAS,QAAgCC,mBAAmBF,MAEzD,IAAI1yC,KAAK,CACZlF,OAAQ,KAAiB+H,KAAKivC,oBAAsBjD,EAAQkB,qBAC5DwC,UAAW,GAAGC,KAAQC,IACtBzR,KAAMn+B,KAAKsvC,qBACXQ,SAER,GAIJ,MAAME,SACOhwC,KAAKiwC,mBAFc,YAEyB,CAOrD,YAAAC,CAAaC,GAKT,MAAMV,EAAMzvC,KAAKowC,MAAMD,GAEvB,OAAOnwC,KAAKqwC,gBAAgBZ,EAChC,CAOA,eAAAY,CAAgBZ,GAEZ,OAAIA,EAAIx3C,SAAW+zC,EAAQiB,aAChB4B,EAAkBW,QAAQC,GAKrCA,EAAIx3C,SAAW+zC,EAAQa,OAGnB,MAEK,OAA6B,GAAGb,EAAQsC,wBAAwB0B,EAAeC,qBAYjFR,EAXIA,EAAIa,KAAK,CACZr4C,OAAQ+zC,EAAQsC,mBAKhBoB,UAAWD,EAAIC,WAAaM,EAAeC,mBAC3CH,MAAO,KACPxyB,SAAU,MAItB,CACA,KAAA8yB,CAAMG,EAAaC,GACf,GAAI,IAAItE,MAAMqE,GACV,OAAOA,EAEX,GAAIlqB,WAAWoqB,kBAAmB,CAC9B,MAAMC,EAAgBrqB,WAAWoqB,kBAEjC,GAAI,qBAAqB9kC,KAAK+kC,GAC1B,OAAO,IAAIC,SAAS,IAAIC,MAAMF,GAAe,GAAOH,GAGxD,MAAMM,EAAa,KAAWH,EAAeH,GAC7C,OAAO,IAAI1D,KAAKgE,EACpB,CACA,OAAO,IAAID,MAAMJ,EAAcM,MAAMP,GACzC,EAEG,MAAMQ,EAAa,IAAIf,EACvB,IAAIgB,GACX,SAAWA,GACP,MAAMC,EAAa,IAAI9c,IAAI,CACvB,CAAC,IAAK,CAAE,6BAA8B,gBACtC,CAAC,IAAK,CAAE,+BAAgC,iBACxC,CAAC,IAAK,CAAE,6BAA8B,cAAe,+BAAgC,mBAEzF6c,EAAIE,YAAcz7C,OAAO2X,OAAO6jC,EAAWt7C,IAAI,MAC/C,MAAMw7C,EAAqB,aAqB3BH,EAAII,oBAjBJ,SAA6BC,GACzB,IAAIC,EACe,iBAARD,EACPC,EAAS,IAAIC,IAAIF,GAAKG,aAEjBH,aAAeE,IACpBD,EAASD,EAAIG,aAER,IAAItF,MAAMmF,KACfC,EAAS,IAAIC,IAAIF,EAAI/iC,UAAS,IAAOkjC,cAEzC,MAAMz2C,EAAQu2C,GAAQ37C,IAAIw7C,GAC1B,GAAKp2C,EAGL,OAAOk2C,EAAWt7C,IAAIoF,EAC1B,EAmBAi2C,EAAIS,eAbJ,SAAwBC,EAAaC,EAAMC,GACvC,IAAKvrB,WAAWwrB,oBAEZ,OAEJ,MAAM92C,EAAQ42C,GAAQC,EAAO,IAAMA,EAAO,IAAM,IAC5CF,aAAuBI,gBACvBJ,EAAY/hC,IAAIwhC,EAAoBp2C,GAGpC22C,EAAYP,GAAsBp2C,CAE1C,CAEH,CA/CD,CA+CGi2C,IAAQA,EAAM,CAAC,G,mCChRX,MAAMe,EACT,WAAAhyC,CAAY8nB,GACR7nB,KAAK6nB,SAAWA,EAChB7nB,KAAK8nB,SAAU,CACnB,CAOA,SAAI/sB,GACA,IAAKiF,KAAK8nB,QACN,IACI9nB,KAAKgoB,OAAShoB,KAAK6nB,UACvB,CACA,MAAOnG,GACH1hB,KAAKioB,OAASvG,CAClB,CACA,QACI1hB,KAAK8nB,SAAU,CACnB,CAEJ,GAAI9nB,KAAKioB,OACL,MAAMjoB,KAAKioB,OAEf,OAAOjoB,KAAKgoB,MAChB,CAIA,YAAIgqB,GAAa,OAAOhyC,KAAKgoB,MAAQ,E,8EC3BlC,SAASiqB,EAAK51C,GACjB,OAAO61C,EAAO71C,EAAK,EACvB,CACO,SAAS61C,EAAO71C,EAAK81C,GACxB,cAAe91C,GACX,IAAK,SACD,OAAY,OAARA,EACO+1C,EAAW,IAAKD,GAElB71C,MAAMC,QAAQF,IA6BhB1D,EA5Bc0D,EA6B7Bg2C,EAAiBD,EAAW,OADRC,EA5BcF,GA8B3Bx5C,EAAI25C,OAAO,CAACH,EAASz2C,IAASw2C,EAAOx2C,EAAMy2C,GAAUE,IAEhE,SAAoBh2C,EAAKg2C,GAErB,OADAA,EAAiBD,EAAW,OAAQC,GAC7B58C,OAAOkM,KAAKtF,GAAKf,OAAOg3C,OAAO,CAACH,EAASx4C,KAC5Cw4C,EAAUI,EAAW54C,EAAKw4C,GACnBD,EAAO71C,EAAI1C,GAAMw4C,IACzBE,EACP,CApCmBG,CAAWn2C,EAAK81C,GAC3B,IAAK,SACD,OAAOI,EAAWl2C,EAAK81C,GAC3B,IAAK,UACD,OAYZ,SAAqBh5C,EAAGk5C,GACpB,OAAOD,EAAWj5C,EAAI,IAAM,IAAKk5C,EACrC,CAdmBI,CAAYp2C,EAAK81C,GAC5B,IAAK,SACD,OAAOC,EAAW/1C,EAAK81C,GAC3B,IAAK,YACD,OAAOC,EAAW,IAAKD,GAC3B,QACI,OAAOC,EAAW,IAAKD,GAgBnC,IAAmBx5C,EAAK05C,CAdxB,CACO,SAASD,EAAWp3C,EAAKq3C,GAC5B,OAAUA,GAAkB,GAAKA,EAAkBr3C,EAAO,CAC9D,CAIO,SAASu3C,EAAWG,EAAGP,GAC1BA,EAAUC,EAAW,OAAQD,GAC7B,IAAK,IAAI/4C,EAAI,EAAGX,EAASi6C,EAAEj6C,OAAQW,EAAIX,EAAQW,IAC3C+4C,EAAUC,EAAWM,EAAEC,WAAWv5C,GAAI+4C,GAE1C,OAAOA,CACX,CAYA,SAASS,EAAW73C,EAAO83C,EAAMC,EAAY,IAEzC,MAAMC,EAAQD,EAAYD,EAI1B,OAAS93C,GAAS83C,MAFF,GAAKE,GAAS,GAEKh4C,KAAWg4C,KAAY,CAC9D,CACA,SAASC,EAAKC,EAAM15C,EAAQ,EAAGmH,EAAQuyC,EAAKC,WAAYn4C,EAAQ,GAC5D,IAAK,IAAI3B,EAAI,EAAGA,EAAIsH,EAAOtH,IACvB65C,EAAK15C,EAAQH,GAAK2B,CAE1B,CAOO,SAASo4C,EAAYC,EAAeC,EAAU,IACjD,OAAID,aAAyBE,YAClBh3C,MAAMa,KAAK,IAAIyiB,WAAWwzB,IAAgBnyC,IAAI9H,GAAKA,EAAEmV,SAAS,IAAIilC,SAAS,EAAG,MAAMhE,KAAK,IARxG,SAAiBx0C,EAAOtC,EAAQgjC,EAAO,KACnC,KAAO1gC,EAAMtC,OAASA,GAClBsC,EAAQ0gC,EAAO1gC,EAEnB,OAAOA,CACX,CAKWy4C,EAASJ,IAAkB,GAAG9kC,SAAS,IAAK+kC,EAAU,EACjE,CAIO,MAAMI,SACAzzC,KAAK0zC,YAAc,IAAIC,SAAS,IAAIL,YAAY,KAAO,CAChE,WAAAvzC,GACIC,KAAK4zC,IAAM,WACX5zC,KAAK6zC,IAAM,WACX7zC,KAAK8zC,IAAM,WACX9zC,KAAK+zC,IAAM,UACX/zC,KAAKg0C,IAAM,WACXh0C,KAAKi0C,MAAQ,IAAIr0B,WAAW,IAC5B5f,KAAKk0C,QAAU,IAAIP,SAAS3zC,KAAKi0C,MAAME,QACvCn0C,KAAKo0C,SAAW,EAChBp0C,KAAKq0C,UAAY,EACjBr0C,KAAKs0C,uBAAyB,EAC9Bt0C,KAAKu0C,WAAY,CACrB,CACA,MAAAC,CAAO9e,GACH,MAAM+e,EAAS/e,EAAIj9B,OACnB,GAAe,IAAXg8C,EACA,OAEJ,MAAMC,EAAO10C,KAAKi0C,MAClB,IAEIzY,EACA/xB,EAHAkrC,EAAU30C,KAAKo0C,SACfQ,EAAwB50C,KAAKs0C,uBAYjC,IAT8B,IAA1BM,GACApZ,EAAWoZ,EACXnrC,GAAU,EACVmrC,EAAwB,IAGxBpZ,EAAW9F,EAAIid,WAAW,GAC1BlpC,EAAS,KAEA,CACT,IAAIorC,EAAYrZ,EAChB,GAAI,KAAwBA,GAAW,CACnC,KAAI/xB,EAAS,EAAIgrC,GAWZ,CAEDG,EAAwBpZ,EACxB,KACJ,CAfyB,CACrB,MAAMsZ,EAAepf,EAAIid,WAAWlpC,EAAS,GACzC,KAAuBqrC,IACvBrrC,IACAorC,EAAY,KAAyBrZ,EAAUsZ,IAI/CD,EAAY,KAEpB,CAMJ,MACS,KAAuBrZ,KAE5BqZ,EAAY,OAIhB,GAFAF,EAAU30C,KAAK+0C,MAAML,EAAMC,EAASE,GACpCprC,MACIA,EAASgrC,GAIT,MAHAjZ,EAAW9F,EAAIid,WAAWlpC,EAKlC,CACAzJ,KAAKo0C,SAAWO,EAChB30C,KAAKs0C,uBAAyBM,CAClC,CACA,KAAAG,CAAML,EAAMC,EAASE,GA4BjB,OA3BIA,EAAY,IACZH,EAAKC,KAAaE,EAEbA,EAAY,MACjBH,EAAKC,KAAa,KAA2B,KAAZE,KAAoD,EACrFH,EAAKC,KAAa,KAA2B,GAAZE,KAAoD,GAEhFA,EAAY,OACjBH,EAAKC,KAAa,KAA2B,MAAZE,KAAoD,GACrFH,EAAKC,KAAa,KAA2B,KAAZE,KAAoD,EACrFH,EAAKC,KAAa,KAA2B,GAAZE,KAAoD,IAGrFH,EAAKC,KAAa,KAA2B,QAAZE,KAAoD,GACrFH,EAAKC,KAAa,KAA2B,OAAZE,KAAoD,GACrFH,EAAKC,KAAa,KAA2B,KAAZE,KAAoD,EACrFH,EAAKC,KAAa,KAA2B,GAAZE,KAAoD,GAErFF,GAAW,KACX30C,KAAKg1C,QACLL,GAAW,GACX30C,KAAKq0C,WAAa,GAElBK,EAAK,GAAKA,EAAK,IACfA,EAAK,GAAKA,EAAK,IACfA,EAAK,GAAKA,EAAK,KAEZC,CACX,CACA,MAAAM,GAWI,OAVKj1C,KAAKu0C,YACNv0C,KAAKu0C,WAAY,EACbv0C,KAAKs0C,yBAELt0C,KAAKs0C,uBAAyB,EAC9Bt0C,KAAKo0C,SAAWp0C,KAAK+0C,MAAM/0C,KAAKi0C,MAAOj0C,KAAKo0C,SAAU,QAE1Dp0C,KAAKq0C,WAAar0C,KAAKo0C,SACvBp0C,KAAKk1C,WAEF/B,EAAYnzC,KAAK4zC,KAAOT,EAAYnzC,KAAK6zC,KAAOV,EAAYnzC,KAAK8zC,KAAOX,EAAYnzC,KAAK+zC,KAAOZ,EAAYnzC,KAAKg0C,IAC5H,CACA,OAAAkB,GACIl1C,KAAKi0C,MAAMj0C,KAAKo0C,YAAc,IAC9BpB,EAAKhzC,KAAKi0C,MAAOj0C,KAAKo0C,UAClBp0C,KAAKo0C,SAAW,KAChBp0C,KAAKg1C,QACLhC,EAAKhzC,KAAKi0C,QAGd,MAAMkB,EAAK,EAAIn1C,KAAKq0C,UACpBr0C,KAAKk0C,QAAQkB,UAAU,GAAI36C,KAAKC,MAAMy6C,EAAK,aAAa,GACxDn1C,KAAKk0C,QAAQkB,UAAU,GAAID,EAAK,YAAY,GAC5Cn1C,KAAKg1C,OACT,CACA,KAAAA,GACI,MAAMK,EAAa5B,EAAWC,YACxBr5C,EAAO2F,KAAKk0C,QAClB,IAAK,IAAIoB,EAAI,EAAGA,EAAI,GAAeA,GAAK,EACpCD,EAAWD,UAAUE,EAAGj7C,EAAKk7C,UAAUD,GAAG,IAAQ,GAEtD,IAAK,IAAIA,EAAI,GAAIA,EAAI,IAAgBA,GAAK,EACtCD,EAAWD,UAAUE,EAAG1C,EAAYyC,EAAWE,UAAUD,EAAI,IAAI,GAASD,EAAWE,UAAUD,EAAI,IAAI,GAASD,EAAWE,UAAUD,EAAI,IAAI,GAASD,EAAWE,UAAUD,EAAI,IAAI,GAAS,IAAI,GAEpM,IAKIz5C,EAAG25C,EACHC,EANAv8C,EAAI8G,KAAK4zC,IACTz6C,EAAI6G,KAAK6zC,IACTnrB,EAAI1oB,KAAK8zC,IACTvP,EAAIvkC,KAAK+zC,IACT93C,EAAI+D,KAAKg0C,IAGb,IAAK,IAAIsB,EAAI,EAAGA,EAAI,GAAIA,IAChBA,EAAI,IACJz5C,EAAK1C,EAAIuvB,GAAQvvB,EAAKorC,EACtBiR,EAAI,YAECF,EAAI,IACTz5C,EAAI1C,EAAIuvB,EAAI6b,EACZiR,EAAI,YAECF,EAAI,IACTz5C,EAAK1C,EAAIuvB,EAAMvvB,EAAIorC,EAAM7b,EAAI6b,EAC7BiR,EAAI,aAGJ35C,EAAI1C,EAAIuvB,EAAI6b,EACZiR,EAAI,YAERC,EAAQ7C,EAAW15C,EAAG,GAAK2C,EAAII,EAAIu5C,EAAIH,EAAWE,UAAc,EAAJD,GAAO,GAAU,WAC7Er5C,EAAIsoC,EACJA,EAAI7b,EACJA,EAAIkqB,EAAWz5C,EAAG,IAClBA,EAAID,EACJA,EAAIu8C,EAERz1C,KAAK4zC,IAAO5zC,KAAK4zC,IAAM16C,EAAK,WAC5B8G,KAAK6zC,IAAO7zC,KAAK6zC,IAAM16C,EAAK,WAC5B6G,KAAK8zC,IAAO9zC,KAAK8zC,IAAMprB,EAAK,WAC5B1oB,KAAK+zC,IAAO/zC,KAAK+zC,IAAMxP,EAAK,WAC5BvkC,KAAKg0C,IAAOh0C,KAAKg0C,IAAM/3C,EAAK,UAChC,E,yFC1PG,MAAMy5C,EAAwB,oCAoBxBC,EAZb,SAA0BC,EAAe,IACrC,IAAIzzB,EAAS,yBACb,IAAK,MAAM0zB,KAAOH,EACVE,EAAah4C,QAAQi4C,IAAQ,IAGjC1zB,GAAU,KAAO0zB,GAGrB,OADA1zB,GAAU,SACH,IAAIlT,OAAOkT,EAAQ,IAC9B,CAEmC2zB,GAC5B,SAASC,EAA0BC,GACtC,IAAI76C,EAASw6C,EACb,GAAIK,GAAmBA,aAA0B/mC,OAC7C,GAAK+mC,EAAeC,OAchB96C,EAAS66C,MAde,CACxB,IAAIE,EAAQ,IACRF,EAAeG,aACfD,GAAS,KAETF,EAAeI,YACfF,GAAS,KAETF,EAAeK,UACfH,GAAS,KAEb/6C,EAAS,IAAI8T,OAAO+mC,EAAe7zB,OAAQ+zB,EAC/C,CAMJ,OADA/6C,EAAOm7C,UAAY,EACZn7C,CACX,CACA,MAAMo7C,EAAiB,IAAI,IAMpB,SAASC,EAAc3rC,EAAQmrC,EAAgBnlC,EAAM4lC,EAAY9xC,GAMpE,GAJAqxC,EAAiBD,EAA0BC,GACtCrxC,IACDA,EAAS,IAAStD,MAAMk1C,IAExB1lC,EAAKpY,OAASkM,EAAO+xC,OAAQ,CAG7B,IAAIv4C,EAAQ0M,EAASlG,EAAO+xC,OAAS,EAQrC,OAPIv4C,EAAQ,EACRA,EAAQ,EAGRs4C,GAAct4C,EAGXq4C,EAAc3rC,EAAQmrC,EAD7BnlC,EAAOA,EAAK8lC,UAAUx4C,EAAO0M,EAASlG,EAAO+xC,OAAS,GACHD,EAAY9xC,EACnE,CACA,MAAMiyC,EAAKrvB,KAAKC,MACVkK,EAAM7mB,EAAS,EAAI4rC,EACzB,IAAII,GAAkB,EAClBroC,EAAQ,KACZ,IAAK,IAAIpV,EAAI,IAELmuB,KAAKC,MAAQovB,GAAMjyC,EAAOmyC,YAFjB19C,IAAK,CAOlB,MAAM29C,EAAarlB,EAAM/sB,EAAOqyC,WAAa59C,EAC7C48C,EAAeM,UAAY77C,KAAKkE,IAAI,EAAGo4C,GACvC,MAAME,EAAYC,EAAiClB,EAAgBnlC,EAAM6gB,EAAKmlB,GAC9E,IAAKI,GAAazoC,EAEd,MAIJ,GAFAA,EAAQyoC,EAEJF,GAAc,EACd,MAEJF,EAAiBE,CACrB,CACA,GAAIvoC,EAAO,CACP,MAAMrT,EAAS,CACXg8C,KAAM3oC,EAAM,GACZhH,YAAaivC,EAAa,EAAIjoC,EAAMjV,MACpCkO,UAAWgvC,EAAa,EAAIjoC,EAAMjV,MAAQiV,EAAM,GAAG/V,QAGvD,OADAu9C,EAAeM,UAAY,EACpBn7C,CACX,CACA,OAAO,IACX,CACA,SAAS+7C,EAAiClB,EAAgBnlC,EAAM6gB,EAAK0lB,GACjE,IAAI5oC,EACJ,KAAOA,EAAQwnC,EAAeqB,KAAKxmC,IAAO,CACtC,MAAMymC,EAAa9oC,EAAMjV,OAAS,EAClC,GAAI+9C,GAAc5lB,GAAOskB,EAAeM,WAAa5kB,EACjD,OAAOljB,EAEN,GAAI4oC,EAAU,GAAKE,EAAaF,EACjC,OAAO,IAEf,CACA,OAAO,IACX,CAxEAb,EAAez4C,QAAQ,CACnB44C,OAAQ,IACRM,WAAY,GACZF,WAAY,K,2fChDT,SAASS,EAAoB7hB,GAChC,OAAKA,GAAsB,iBAARA,GAGU,IAAtBA,EAAI7mB,OAAOpW,MACtB,CACA,MAAM++C,EAAgB,WAOf,SAASC,EAAO18C,KAAU4S,GAC7B,OAAoB,IAAhBA,EAAKlV,OACEsC,EAEJA,EAAM2T,QAAQ8oC,EAAe,SAAUhpC,EAAOkpC,GACjD,MAAMC,EAAMr4B,SAASo4B,EAAO,IAC5B,OAAOE,MAAMD,IAAQA,EAAM,GAAKA,GAAOhqC,EAAKlV,OACxC+V,EACAb,EAAKgqC,EACb,EACJ,CAOO,SAASE,EAAyB98C,GACrC,OAAOA,EAAM2T,QAAQ,WAAYopC,IAC7B,OAAQA,GACJ,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,SACjB,IAAK,IAAM,MAAO,SAClB,IAAK,IAAK,MAAO,QAErB,OAAOA,GAEf,CAKO,SAASC,EAAOjnC,GACnB,OAAOA,EAAKpC,QAAQ,SAAU,SAAUF,GACpC,OAAQA,GACJ,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,OACjB,IAAK,IAAK,MAAO,QACjB,QAAS,OAAOA,EAExB,EACJ,CAIO,SAASwpC,EAAuBj9C,GACnC,OAAOA,EAAM2T,QAAQ,kCAAmC,OAC5D,CAMO,SAASG,EAAKopC,EAAUC,EAAS,KAEpC,OAAOC,EADSC,EAAMH,EAAUC,GACVA,EAC1B,CAMO,SAASE,EAAMH,EAAUC,GAC5B,IAAKD,IAAaC,EACd,OAAOD,EAEX,MAAMI,EAAYH,EAAOz/C,OACzB,GAAkB,IAAd4/C,GAAuC,IAApBJ,EAASx/C,OAC5B,OAAOw/C,EAEX,IAAIxuC,EAAS,EACb,KAAOwuC,EAASr6C,QAAQs6C,EAAQzuC,KAAYA,GACxCA,GAAkB4uC,EAEtB,OAAOJ,EAAStB,UAAUltC,EAC9B,CAMO,SAAS0uC,EAAMF,EAAUC,GAC5B,IAAKD,IAAaC,EACd,OAAOD,EAEX,MAAMI,EAAYH,EAAOz/C,OAAQ6/C,EAAcL,EAASx/C,OACxD,GAAkB,IAAd4/C,GAAmC,IAAhBC,EACnB,OAAOL,EAEX,IAAIxuC,EAAS6uC,EAAaX,GAAO,EACjC,KACIA,EAAMM,EAASM,YAAYL,EAAQzuC,EAAS,IAC/B,IAATkuC,GAAcA,EAAMU,IAAc5uC,GAF7B,CAKT,GAAY,IAARkuC,EACA,MAAO,GAEXluC,EAASkuC,CACb,CACA,OAAOM,EAAStB,UAAU,EAAGltC,EACjC,CACO,SAAS+uC,EAA4BC,GACxC,OAAOA,EAAQ/pC,QAAQ,wCAAyC,QAAQA,QAAQ,QAAS,KAC7F,CACO,SAASgqC,EAAeD,GAC3B,OAAOA,EAAQ/pC,QAAQ,MAAO,GAClC,CACO,SAASiqC,EAAaC,EAAcC,EAASh0C,EAAU,CAAC,GAC3D,IAAK+zC,EACD,MAAM,IAAIhgD,MAAM,yCAEfigD,IACDD,EAAeZ,EAAuBY,IAEtC/zC,EAAQi0C,YACH,KAAKntC,KAAKitC,EAAa9Q,OAAO,MAC/B8Q,EAAe,MAAQA,GAEtB,KAAKjtC,KAAKitC,EAAa9Q,OAAO8Q,EAAangD,OAAS,MACrDmgD,GAA8B,QAGtC,IAAIG,EAAY,GAahB,OAZIl0C,EAAQoxC,SACR8C,GAAa,KAEZl0C,EAAQm0C,YACTD,GAAa,KAEbl0C,EAAQuxC,YACR2C,GAAa,KAEbl0C,EAAQwxC,UACR0C,GAAa,KAEV,IAAI9pC,OAAO2pC,EAAcG,EACpC,CACO,SAASE,EAAyBC,GAGrC,MAAsB,MAAlBA,EAAO/2B,QAAoC,OAAlB+2B,EAAO/2B,QAAqC,MAAlB+2B,EAAO/2B,QAAoC,WAAlB+2B,EAAO/2B,WAKzE+2B,EAAO7B,KAAK,KACc,IAArB6B,EAAO5C,UAC9B,CACO,SAAS6C,EAAWzjB,GACvB,OAAOA,EAAI0jB,MAAM,aACrB,CACO,SAASC,EAA4B3jB,GACxC,MAAM4jB,EAAsB,GACtBC,EAA0B7jB,EAAI0jB,MAAM,gBAC1C,IAAK,IAAIhgD,EAAI,EAAGA,EAAIqB,KAAK++C,KAAKD,EAAwB9gD,OAAS,GAAIW,IAC/DkgD,EAAoBr+C,KAAKs+C,EAAwB,EAAIngD,IAAMmgD,EAAwB,EAAIngD,EAAI,IAAM,KAErG,OAAOkgD,CACX,CAKO,SAASG,EAAwB/jB,GACpC,IAAK,IAAIt8B,EAAI,EAAGC,EAAMq8B,EAAIj9B,OAAQW,EAAIC,EAAKD,IAAK,CAC5C,MAAMsgD,EAAShkB,EAAIid,WAAWv5C,GAC9B,GAAe,KAAXsgD,GAAiD,IAAXA,EACtC,OAAOtgD,CAEf,CACA,OAAQ,CACZ,CAKO,SAASugD,EAAqBjkB,EAAKv3B,EAAQ,EAAGmpB,EAAMoO,EAAIj9B,QAC3D,IAAK,IAAIW,EAAI+E,EAAO/E,EAAIkuB,EAAKluB,IAAK,CAC9B,MAAMsgD,EAAShkB,EAAIid,WAAWv5C,GAC9B,GAAe,KAAXsgD,GAAiD,IAAXA,EACtC,OAAOhkB,EAAIihB,UAAUx4C,EAAO/E,EAEpC,CACA,OAAOs8B,EAAIihB,UAAUx4C,EAAOmpB,EAChC,CAKO,SAASsyB,EAAuBlkB,EAAKmkB,EAAankB,EAAIj9B,OAAS,GAClE,IAAK,IAAIW,EAAIygD,EAAYzgD,GAAK,EAAGA,IAAK,CAClC,MAAMsgD,EAAShkB,EAAIid,WAAWv5C,GAC9B,GAAe,KAAXsgD,GAAiD,IAAXA,EACtC,OAAOtgD,CAEf,CACA,OAAQ,CACZ,CACO,SAASkB,EAAQpB,EAAGC,GACvB,OAAID,EAAIC,GACI,EAEHD,EAAIC,EACF,EAGA,CAEf,CACO,SAAS2gD,EAAiB5gD,EAAGC,EAAG4gD,EAAS,EAAGC,EAAO9gD,EAAET,OAAQwhD,EAAS,EAAGC,EAAO/gD,EAAEV,QACrF,KAAOshD,EAASC,GAAQC,EAASC,EAAMH,IAAUE,IAAU,CACvD,MAAME,EAAQjhD,EAAEy5C,WAAWoH,GACrBK,EAAQjhD,EAAEw5C,WAAWsH,GAC3B,GAAIE,EAAQC,EACR,OAAQ,EAEP,GAAID,EAAQC,EACb,OAAO,CAEf,CACA,MAAMC,EAAOL,EAAOD,EACdO,EAAOJ,EAAOD,EACpB,OAAII,EAAOC,GACC,EAEHD,EAAOC,EACL,EAEJ,CACX,CACO,SAASC,EAAkBrhD,EAAGC,GACjC,OAAOqhD,EAA2BthD,EAAGC,EAAG,EAAGD,EAAET,OAAQ,EAAGU,EAAEV,OAC9D,CACO,SAAS+hD,EAA2BthD,EAAGC,EAAG4gD,EAAS,EAAGC,EAAO9gD,EAAET,OAAQwhD,EAAS,EAAGC,EAAO/gD,EAAEV,QAC/F,KAAOshD,EAASC,GAAQC,EAASC,EAAMH,IAAUE,IAAU,CACvD,IAAIE,EAAQjhD,EAAEy5C,WAAWoH,GACrBK,EAAQjhD,EAAEw5C,WAAWsH,GACzB,GAAIE,IAAUC,EAEV,SAEJ,GAAID,GAAS,KAAOC,GAAS,IAEzB,OAAON,EAAiB5gD,EAAEkV,cAAejV,EAAEiV,cAAe2rC,EAAQC,EAAMC,EAAQC,GAIhFO,EAAmBN,KACnBA,GAAS,IAETM,EAAmBL,KACnBA,GAAS,IAGb,MAAMM,EAAOP,EAAQC,EACrB,GAAa,IAATM,EAGJ,OAAOA,CACX,CACA,MAAML,EAAOL,EAAOD,EACdO,EAAOJ,EAAOD,EACpB,OAAII,EAAOC,GACC,EAEHD,EAAOC,EACL,EAEJ,CACX,CACO,SAASK,EAAa7e,GACzB,OAAOA,GAAQ,IAA4BA,GAAQ,EACvD,CACO,SAAS2e,EAAmB3e,GAC/B,OAAOA,GAAQ,IAAuBA,GAAQ,GAClD,CACO,SAAS8e,EAAmB9e,GAC/B,OAAOA,GAAQ,IAAuBA,GAAQ,EAClD,CACO,SAAS+e,EAAiB3hD,EAAGC,GAChC,OAAOD,EAAET,SAAWU,EAAEV,QAA+C,IAArC+hD,EAA2BthD,EAAGC,EAClE,CACO,SAAS2hD,EAAqBplB,EAAKqlB,GACtC,MAAMC,EAAkBD,EAAUtiD,OAClC,QAAIsiD,EAAUtiD,OAASi9B,EAAIj9B,SAG+C,IAAnE+hD,EAA2B9kB,EAAKqlB,EAAW,EAAGC,EACzD,CAIO,SAASC,EAAmB/hD,EAAGC,GAClC,MAAME,EAAMoB,KAAKmE,IAAI1F,EAAET,OAAQU,EAAEV,QACjC,IAAIW,EACJ,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IACjB,GAAIF,EAAEy5C,WAAWv5C,KAAOD,EAAEw5C,WAAWv5C,GACjC,OAAOA,EAGf,OAAOC,CACX,CAIO,SAAS6hD,EAAmBhiD,EAAGC,GAClC,MAAME,EAAMoB,KAAKmE,IAAI1F,EAAET,OAAQU,EAAEV,QACjC,IAAIW,EACJ,MAAM+hD,EAAajiD,EAAET,OAAS,EACxB2iD,EAAajiD,EAAEV,OAAS,EAC9B,IAAKW,EAAI,EAAGA,EAAIC,EAAKD,IACjB,GAAIF,EAAEy5C,WAAWwI,EAAa/hD,KAAOD,EAAEw5C,WAAWyI,EAAahiD,GAC3D,OAAOA,EAGf,OAAOC,CACX,CAIO,SAASgiD,EAAgB7f,GAC5B,OAAQ,OAAUA,GAAYA,GAAY,KAC9C,CAIO,SAAS8f,EAAe9f,GAC3B,OAAQ,OAAUA,GAAYA,GAAY,KAC9C,CAIO,SAAS+f,EAAiBC,EAAeC,GAC5C,OAA2CA,EAAe,OAAjDD,EAAgB,OAAW,IAAgC,KACxE,CAIO,SAASE,EAAiBhmB,EAAKr8B,EAAKoQ,GACvC,MAAM+xB,EAAW9F,EAAIid,WAAWlpC,GAChC,GAAI4xC,EAAgB7f,IAAa/xB,EAAS,EAAIpQ,EAAK,CAC/C,MAAMy7C,EAAepf,EAAIid,WAAWlpC,EAAS,GAC7C,GAAI6xC,EAAexG,GACf,OAAOyG,EAAiB/f,EAAUsZ,EAE1C,CACA,OAAOtZ,CACX,CAcO,MAAMmgB,EACT,UAAIlyC,GACA,OAAOzJ,KAAK47C,OAChB,CACA,WAAA77C,CAAY21B,EAAKjsB,EAAS,GACtBzJ,KAAK67C,KAAOnmB,EACZ11B,KAAKwP,KAAOkmB,EAAIj9B,OAChBuH,KAAK47C,QAAUnyC,CACnB,CACA,SAAAqyC,CAAUryC,GACNzJ,KAAK47C,QAAUnyC,CACnB,CACA,aAAAsyC,GACI,MAAMlH,EAvBd,SAA0Bnf,EAAKjsB,GAC3B,MAAM+xB,EAAW9F,EAAIid,WAAWlpC,EAAS,GACzC,GAAI6xC,EAAe9f,IAAa/xB,EAAS,EAAG,CACxC,MAAMuyC,EAAetmB,EAAIid,WAAWlpC,EAAS,GAC7C,GAAI4xC,EAAgBW,GAChB,OAAOT,EAAiBS,EAAcxgB,EAE9C,CACA,OAAOA,CACX,CAc0BygB,CAAiBj8C,KAAK67C,KAAM77C,KAAK47C,SAEnD,OADA57C,KAAK47C,SAAY/G,GAAa,MAA0D,EAAI,EACrFA,CACX,CACA,aAAAqH,GACI,MAAMrH,EAAY6G,EAAiB17C,KAAK67C,KAAM77C,KAAKwP,KAAMxP,KAAK47C,SAE9D,OADA57C,KAAK47C,SAAY/G,GAAa,MAA0D,EAAI,EACrFA,CACX,CACA,GAAAsH,GACI,OAAQn8C,KAAK47C,SAAW57C,KAAKwP,IACjC,EAEG,MAAM4sC,EACT,UAAI3yC,GACA,OAAOzJ,KAAKq8C,UAAU5yC,MAC1B,CACA,WAAA1J,CAAY21B,EAAKjsB,EAAS,GACtBzJ,KAAKq8C,UAAY,IAAIV,EAAkBjmB,EAAKjsB,EAChD,CACA,kBAAA6yC,GACI,MAAMC,EAAoBC,GAAkB5U,cACtC6U,EAAWz8C,KAAKq8C,UAChBK,EAAgBD,EAAShzC,OAC/B,IAAIkzC,EAAoBJ,EAAkBK,qBAAqBH,EAASP,iBACxE,MAAQO,EAASN,OAAO,CACpB,MAAM1yC,EAASgzC,EAAShzC,OAClBozC,EAAwBN,EAAkBK,qBAAqBH,EAASP,iBAC9E,GAAIY,GAA8BH,EAAmBE,GAAwB,CAEzEJ,EAASX,UAAUryC,GACnB,KACJ,CACAkzC,EAAoBE,CACxB,CACA,OAAQJ,EAAShzC,OAASizC,CAC9B,CACA,kBAAAK,GACI,MAAMR,EAAoBC,GAAkB5U,cACtC6U,EAAWz8C,KAAKq8C,UAChBK,EAAgBD,EAAShzC,OAC/B,IAAIkzC,EAAoBJ,EAAkBK,qBAAqBH,EAASV,iBACxE,KAAOU,EAAShzC,OAAS,GAAG,CACxB,MAAMA,EAASgzC,EAAShzC,OAClBuzC,EAAwBT,EAAkBK,qBAAqBH,EAASV,iBAC9E,GAAIe,GAA8BE,EAAuBL,GAAoB,CAEzEF,EAASX,UAAUryC,GACnB,KACJ,CACAkzC,EAAoBK,CACxB,CACA,OAAQN,EAAgBD,EAAShzC,MACrC,CACA,GAAA0yC,GACI,OAAOn8C,KAAKq8C,UAAUF,KAC1B,EAEG,SAASc,EAAevnB,EAAKgnB,GAEhC,OADiB,IAAIN,EAAiB1mB,EAAKgnB,GAC3BJ,oBACpB,CACO,SAASY,EAAexnB,EAAKgnB,GAEhC,OADiB,IAAIN,EAAiB1mB,EAAKgnB,GAC3BK,oBACpB,CACO,SAASI,EAAwBznB,EAAKjsB,GACrCA,EAAS,GAAK6xC,EAAe5lB,EAAIid,WAAWlpC,KAC5CA,IAEJ,MAAM3G,EAAY2G,EAASwzC,EAAevnB,EAAKjsB,GAE/C,MAAO,CADa3G,EAAYo6C,EAAexnB,EAAK5yB,GAC/BA,EACzB,CACA,IAAIs6C,EAQG,SAASt1C,EAAY4tB,GAIxB,OAHK0nB,IACDA,EAPG,gkBASAA,EAAazxC,KAAK+pB,EAC7B,CACA,MAAM2nB,EAAiB,uBAIhB,SAASx1C,EAAa6tB,GACzB,OAAO2nB,EAAe1xC,KAAK+pB,EAC/B,CACO,MAAM4nB,EAA2B,iBAIjC,SAASC,EAA+B7nB,GAC3C,OAAO4nB,EAAyB3xC,KAAK+pB,EACzC,CACO,SAAS8nB,EAAqBhiB,GAuCjC,OAASA,GAAY,OAAUA,GAAY,OACnCA,GAAY,OAAUA,GAAY,OAClCA,GAAY,OAAUA,GAAY,KAC9C,CAKO,SAASiiB,EAAiBv/C,GAC7B,OAASA,GAAK,QAAWA,GAAK,QAAmB,OAANA,GAAsB,OAANA,GAAsB,OAANA,GAC7D,OAANA,GAAgBA,GAAK,MAAQA,GAAK,OAAiB,QAANA,GAAuB,QAANA,GAC9DA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QACpDA,GAAK,QAAUA,GAAK,QAAYA,GAAK,QAAUA,GAAK,QACpDA,GAAK,QAAUA,GAAK,MAChC,CAEO,MAAMw/C,EAAqBr1C,OAAOqzB,aAAa,OAC/C,SAASiiB,EAAkBjoB,GAC9B,SAAUA,GAAOA,EAAIj9B,OAAS,GAA2B,QAAtBi9B,EAAIid,WAAW,GACtD,CACO,SAASiL,EAA2BvgD,EAAQwgD,GAAqB,GACpE,QAAKxgD,IAGDwgD,IACAxgD,EAASA,EAAOqR,QAAQ,OAAQ,KAE7BrR,EAAO+Q,gBAAkB/Q,EACpC,CAIO,SAASygD,GAAiBtlD,GAG7B,OADAA,GAAQ,IADY,GAGT6P,OAAOqzB,aAAa,GAAsBljC,GAE9C6P,OAAOqzB,aAAa,GAAsBljC,EAL7B,GAMxB,CACA,SAASskD,GAA8BiB,EAAYC,GAG/C,OAAmB,IAAfD,EAEuB,IAAfC,GAAkE,IAAfA,IAM5C,IAAfD,GACmB,IAAfC,GAIW,IAAfD,GAAmE,IAAfA,GAA8D,IAAfA,GAGpF,IAAfC,GAAmE,IAAfA,GAA8D,IAAfA,IAOpF,IAAfD,IACmB,IAAfC,GAA6D,IAAfA,GAA6D,KAAfA,GAA+D,KAAfA,MAIjI,KAAfD,GAA+D,IAAfA,GAC7B,IAAfC,GAA6D,KAAfA,KAInC,KAAfD,GAAgE,KAAfA,IAC9B,KAAfC,GAMW,IAAfA,GAAkE,KAAfA,GAOpC,IAAfA,GAGe,IAAfD,GAKe,KAAfA,GAAgE,KAAfC,GAMlC,IAAfD,GAA8E,IAAfC,GAMvE,CACA,MAAMxB,UACOx8C,KAAKgpC,UAAY,IAAM,CAChC,kBAAOpB,GAIH,OAHK4U,GAAkBxT,YACnBwT,GAAkBxT,UAAY,IAAIwT,IAE/BA,GAAkBxT,SAC7B,CACA,WAAAjpC,GACIC,KAAKi+C,MAuCF/oB,KAAK0b,MAAM,031BAtClB,CACA,oBAAAgM,CAAqB/H,GAEjB,GAAIA,EAAY,GACZ,OAAkB,KAAdA,EACO,EAEO,KAAdA,EACO,EAEJ,EAGX,GAAIA,EAAY,IACZ,OAAO,EAEX,MAAMx6C,EAAO2F,KAAKi+C,MACZC,EAAY7jD,EAAK5B,OAAS,EAChC,IAAI0lD,EAAY,EAChB,KAAOA,GAAaD,GAChB,GAAIrJ,EAAYx6C,EAAK,EAAI8jD,GAErBA,GAAY,MAEX,MAAItJ,EAAYx6C,EAAK,EAAI8jD,EAAY,IAMtC,OAAO9jD,EAAK,EAAI8jD,EAAY,GAJ5BA,EAAY,EAAIA,EAAY,CAKhC,CAEJ,OAAO,CACX,EAWG,SAASC,GAAoB30C,EAAQisB,GACxC,GAAe,IAAXjsB,EACA,OAAO,EAGX,MAAM40C,EASV,SAA2C3B,EAAehnB,GAGtD,MAAM+mB,EAAW,IAAId,EAAkBjmB,EAAKgnB,GAC5C,IAAI7H,EAAY4H,EAASV,gBAEzB,KAAQuC,GAAgBzJ,IAA4B,QAAdA,GAA0E,OAAdA,GAAqD,CACnJ,GAAwB,IAApB4H,EAAShzC,OAET,OAEJorC,EAAY4H,EAASV,eACzB,CAEA,IAAK0B,EAAiB5I,GAElB,OAEJ,IAAI0J,EAAe9B,EAAShzC,OAU5B,OATI80C,EAAe,GAKc,OADA9B,EAASV,kBAElCwC,EAAe9B,EAAShzC,QAGzB80C,CACX,CAtCwBC,CAAkC/0C,EAAQisB,GAC9D,QAAoB/5B,IAAhB0iD,EACA,OAAOA,EAGX,MAAM5B,EAAW,IAAId,EAAkBjmB,EAAKjsB,GAE5C,OADAgzC,EAASV,gBACFU,EAAShzC,MACpB,CA+BA,SAAS60C,GAAgBzJ,GACrB,OAAO,QAAWA,GAAaA,GAAa,MAChD,CACO,MAAM4J,GAAoB,IAC1B,MAAMC,UACA1+C,KAAK2+C,uBAAyB,IAAI,IAAK,IAGrCzpB,KAAK0b,MAAM,0vmBAClB,QACK5wC,KAAK4+C,MAAQ,IAAI,KAAkB,CAAEC,YAAa3pB,KAAKC,WAAc2pB,IAC1E,SAASC,EAAWpmD,GAChB,MAAMwC,EAAS,IAAIg5B,IACnB,IAAK,IAAI/6B,EAAI,EAAGA,EAAIT,EAAIF,OAAQW,GAAK,EACjC+B,EAAOwU,IAAIhX,EAAIS,GAAIT,EAAIS,EAAI,IAE/B,OAAO+B,CACX,CAQA,SAAS6jD,EAAcC,EAAMC,GACzB,IAAKD,EACD,OAAOC,EAEX,MAAM/jD,EAAS,IAAIg5B,IACnB,IAAK,MAAOx6B,EAAKoB,KAAUkkD,EACnBC,EAAKriD,IAAIlD,IACTwB,EAAOwU,IAAIhW,EAAKoB,GAGxB,OAAOI,CACX,CACA,MAAMd,EAAO2F,KAAK2+C,uBAAuB5jD,MACzC,IAIIokD,EAJAC,EAAkBN,EAAQ9iD,OAAQ6T,IAAOA,EAAEwvC,WAAW,MAAQxvC,KAAKxV,GACxC,IAA3B+kD,EAAgB3mD,SAChB2mD,EAAkB,CAAC,aAGvB,IAAK,MAAME,KAAUF,EAEjBD,EAAsBH,EAAcG,EADxBJ,EAAW1kD,EAAKilD,KAGhC,MACMr+C,EA9BN,SAAmBg+C,EAAMC,GACrB,MAAM/jD,EAAS,IAAIg5B,IAAI8qB,GACvB,IAAK,MAAOtlD,EAAKoB,KAAUmkD,EACvB/jD,EAAOwU,IAAIhW,EAAKoB,GAEpB,OAAOI,CACX,CAwBYokD,CADMR,EAAW1kD,EAAc,SACV8kD,GACjC,OAAO,IAAIT,GAAoBz9C,IAC/B,CACJ,kBAAO2mC,CAAYkX,GACf,OAAOJ,GAAoBE,MAAMjpD,IAAI2G,MAAMa,KAAK2hD,GACpD,QACS9+C,KAAKw/C,SAAW,IAAI,IAAK,IAAM/pD,OAAOkM,KAAK+8C,GAAoBC,uBAAuB5jD,OAAOiB,OAAQw5C,IAAOA,EAAE6J,WAAW,MAAQ,CAC1I,iBAAOI,GACH,OAAOf,GAAoBc,SAASzkD,KACxC,CACA,WAAAgF,CAAY2/C,GACR1/C,KAAK0/C,qBAAuBA,CAChC,CACA,WAAAC,CAAY9K,GACR,OAAO70C,KAAK0/C,qBAAqB7iD,IAAIg4C,EACzC,CAKA,oBAAA+K,CAAqB/K,GACjB,OAAO70C,KAAK0/C,qBAAqB/pD,IAAIk/C,EACzC,CACA,uBAAAgL,GACI,OAAO,IAAIjjD,IAAIoD,KAAK0/C,qBAAqB/9C,OAC7C,EAEG,MAAMm+C,GACT,iBAAOC,GAEH,OAAO7qB,KAAK0b,MAAM,uiGACtB,QACS5wC,KAAKi+C,WAAQtiD,CAAW,CACjC,cAAOqkD,GAIH,OAHKhgD,KAAKi+C,QACNj+C,KAAKi+C,MAAQ,IAAIrhD,IAAIkjD,GAAoBC,eAEtC//C,KAAKi+C,KAChB,CACA,2BAAOgC,CAAqBpL,GACxB,OAAOiL,GAAoBE,UAAUnjD,IAAIg4C,EAC7C,CACA,qBAAWqL,GACP,OAAOJ,GAAoBE,SAC/B,E,wHCl0BG,MAAMG,EACT,WAAApgD,CAIAqgD,EAAU7jB,EAAM8jB,EAAUv4C,GACtB9H,KAAKogD,SAAWA,EAChBpgD,KAAKu8B,KAAOA,EACZv8B,KAAKqgD,SAAWA,EAChBrgD,KAAK8H,YAAcA,EACnB9H,KAAKsgD,oBAAiB3kD,CAC1B,CACA,YAAA4kD,GACI,SAAwB,EAAhBvgD,KAAKqgD,SACjB,CACA,aAAAG,GACI,SAAwB,EAAhBxgD,KAAKqgD,SACjB,ECZG,MAAMI,EACT,WAAA1gD,CAAY85C,EAAYuG,GACpBpgD,KAAK4C,YAAci3C,EACnB75C,KAAK8C,UAAYs9C,CACrB,CACA,MAAAtnD,CAAO4nD,GACH,OAAO1gD,KAAK4C,cAAgB89C,EAAe99C,aACpC5C,KAAK8C,YAAc49C,EAAe59C,SAC7C,EAEG,MAAM69C,EACT,WAAA5gD,CAAYsF,EAA2BE,EAAgC8D,EAAazB,EAA0BC,EAAcC,EAAa84C,EAAkBC,EAAYC,EAAiB94C,EAASC,EAAoB/C,EAAYC,EAAaC,EAAeK,EAAwBT,EAAkBC,EAAyBS,EAAeyB,GAC3UnH,KAAKqF,0BAA4BA,EACjCrF,KAAKuF,+BAAiCA,EACtCvF,KAAKqJ,YAAcA,EACnBrJ,KAAK4H,yBAA2BA,EAChC5H,KAAK6H,aAAeA,EACpB7H,KAAK8H,YAAcA,EACnB9H,KAAK4gD,iBAAmBA,EACxB5gD,KAAK6gD,WAAaA,EAClB7gD,KAAK8gD,gBAAkBA,EAAgBxlD,KAAK,IAAehB,SAC3D0F,KAAKgI,QAAUA,EACfhI,KAAKiI,mBAAqBA,EAC1BjI,KAAKkF,WAAaA,EAClBlF,KAAKyF,uBAAyBA,EAC9BzF,KAAKgF,iBAAyC,QAArBA,EACnB,EACqB,aAArBA,EACI,EACqB,cAArBA,EACI,EACqB,aAArBA,EACI,EACA,EAClBhF,KAAKiF,wBAA0BA,EAC/BjF,KAAK0F,cAAgBA,EACrB1F,KAAKmH,iBAAmBA,GAAoBA,EAAiB7L,KAAK,CAACpC,EAAGC,IAAMD,EAAE0J,YAAczJ,EAAEyJ,aAAe,EAAI,GAC5FnI,KAAK8P,IAAInF,EAAgBF,GAC3BzK,KAAK8P,IAAIpF,EAAcD,IAEtClF,KAAK+gD,iBAAmB37C,EACxBpF,KAAKghD,oBAAsB,QAG3BhhD,KAAK+gD,iBAAmB57C,EACxBnF,KAAKghD,oBAAsB,IAEnC,CACA,aAAAC,CAAcC,GACV,GAA8B,OAA1BlhD,KAAKmH,iBACL,OAA2B,OAApB+5C,EAEX,GAAwB,OAApBA,EACA,OAAO,EAEX,GAAIA,EAAgBzoD,SAAWuH,KAAKmH,iBAAiB1O,OACjD,OAAO,EAEX,IAAK,IAAIW,EAAI,EAAGA,EAAI4G,KAAKmH,iBAAiB1O,OAAQW,IAC9C,IAAK4G,KAAKmH,iBAAiB/N,GAAGN,OAAOooD,EAAgB9nD,IACjD,OAAO,EAGf,OAAO,CACX,CACA,MAAAN,CAAOE,GACH,OAAQgH,KAAKqF,4BAA8BrM,EAAMqM,2BAC1CrF,KAAKuF,iCAAmCvM,EAAMuM,gCAC9CvF,KAAKqJ,cAAgBrQ,EAAMqQ,aAC3BrJ,KAAK4H,2BAA6B5O,EAAM4O,0BACxC5H,KAAK6H,eAAiB7O,EAAM6O,cAC5B7H,KAAK8H,cAAgB9O,EAAM8O,aAC3B9H,KAAK4gD,mBAAqB5nD,EAAM4nD,kBAChC5gD,KAAKgI,UAAYhP,EAAMgP,SACvBhI,KAAKiI,qBAAuBjP,EAAMiP,oBAClCjI,KAAKkF,aAAelM,EAAMkM,YAC1BlF,KAAK+gD,mBAAqB/nD,EAAM+nD,kBAChC/gD,KAAKghD,sBAAwBhoD,EAAMgoD,qBACnChhD,KAAKyF,yBAA2BzM,EAAMyM,wBACtCzF,KAAKgF,mBAAqBhM,EAAMgM,kBAChChF,KAAKiF,0BAA4BjM,EAAMiM,yBACvCjF,KAAK0F,gBAAkB1M,EAAM0M,eAC7B,IAAey7C,UAAUnhD,KAAK8gD,gBAAiB9nD,EAAM8nD,kBACrD9gD,KAAK6gD,WAAW/nD,OAAOE,EAAM6nD,aAC7B7gD,KAAKihD,cAAcjoD,EAAMmO,iBACpC,EAEG,MAAMi6C,EACT,WAAArhD,CAAYwL,EAAWC,GACnBxL,KAAKuL,UAAYA,EACjBvL,KAAKwL,UAAYA,CACrB,EAKG,MAAM61C,EACT,mBAAOC,CAAaC,GAChB,OAAmB,WAAXA,KAA2E,EACvF,CACA,mBAAOC,CAAaD,GAChB,OAAmB,MAAXA,KAAsE,CAClF,CACA,WAAAxhD,CAAYtH,EAAQgpD,GAChBzhD,KAAKvH,OAASA,EACduH,KAAKi+C,MAAQ,IAAIyD,YAAY1hD,KAAKvH,QAClCuH,KAAK2hD,kBAAoB,IAAID,YAAY1hD,KAAKvH,OAClD,CACA,aAAAmpD,CAAc/2C,EAAQU,EAAWC,EAAWxB,GACxC,MAAMu3C,GAAah2C,GAAa,GACzBC,KAAuE,EAC9ExL,KAAKi+C,MAAMpzC,EAAS,GAAK02C,EACzBvhD,KAAK2hD,kBAAkB92C,EAAS,GAAKb,CACzC,CACA,mBAAAC,CAAoBY,GAChB,OAAsC,IAAlC7K,KAAK2hD,kBAAkBlpD,OAEhB,EAEJuH,KAAK2hD,kBAAkB92C,EAAS,EAC3C,CACA,oBAAAg3C,CAAqBC,GACjB,OAAoB,IAAhB9hD,KAAKvH,OACE,EAEPqpD,EAAa,EACN9hD,KAAKi+C,MAAM,GAElB6D,GAAc9hD,KAAKvH,OACZuH,KAAKi+C,MAAMj+C,KAAKvH,OAAS,GAE7BuH,KAAKi+C,MAAM6D,EACtB,CACA,cAAAz2C,CAAeR,GACX,MAAM02C,EAAWvhD,KAAK6hD,qBAAqBh3C,EAAS,GAC9CU,EAAY81C,EAAiBC,aAAaC,GAC1C/1C,EAAY61C,EAAiBG,aAAaD,GAChD,OAAO,IAAIH,EAAY71C,EAAWC,EACtC,CACA,SAAAsB,CAAU1B,EAAa22C,GAEnB,OADmB/hD,KAAKgiD,qBAAqB52C,EAAYG,UAAWw2C,EAAY32C,EAAYI,WACxE,CACxB,CACA,oBAAAw2C,CAAqBz2C,EAAWw2C,EAAYv2C,GACxC,GAAoB,IAAhBxL,KAAKvH,OACL,OAAO,EAEX,MAAMwpD,GAAgB12C,GAAa,GAC5BC,KAAuE,EAC9E,IAAI5M,EAAM,EACND,EAAMqB,KAAKvH,OAAS,EACxB,KAAOmG,EAAM,EAAID,GAAK,CAClB,MAAM3E,EAAQ4E,EAAMD,IAAS,EACvBujD,EAAWliD,KAAKi+C,MAAMjkD,GAC5B,GAAIkoD,IAAaD,EACb,OAAOjoD,EAEFkoD,EAAWD,EAChBtjD,EAAM3E,EAGN4E,EAAM5E,CAEd,CACA,GAAI4E,IAAQD,EACR,OAAOC,EAEX,MAAMujD,EAAWniD,KAAKi+C,MAAMr/C,GACtBwjD,EAAWpiD,KAAKi+C,MAAMt/C,GAC5B,GAAIwjD,IAAaF,EACb,OAAOrjD,EAEX,GAAIwjD,IAAaH,EACb,OAAOtjD,EAEX,MAAM0jD,EAAehB,EAAiBC,aAAaa,GAC7CG,EAAejB,EAAiBG,aAAaW,GAEnD,IAAII,EAUJ,OAPIA,EAFAF,IAFiBhB,EAAiBC,aAAac,GAIhCL,EAGAV,EAAiBG,aAAaY,GAExB52C,EAAY82C,GACZC,EAAe/2C,EAE7B5M,EAEJD,CACX,EAEG,MAAM6jD,EACT,WAAAziD,CAAY2I,EAAkBZ,EAAaU,GACvCxI,KAAKyiD,4BAAyB9mD,EAC9BqE,KAAK0I,iBAAmBA,EACxB1I,KAAK8H,YAAcA,EACnB9H,KAAKwI,wBAA0BA,CACnC,EAEG,SAASk6C,EAAev6C,EAAOvB,GAClC,GAAiC,IAA7BuB,EAAMkB,YAAY5Q,OAAc,CAChC,GAAI0P,EAAM24C,gBAAgBroD,OAAS,EAAG,CAElCmO,EAAGwB,aAAa,UAChB,IAAIu6C,EAAc,EACdC,EAAa,EACbp6C,EAA0B,EAC9B,IAAK,MAAMq6C,KAAkB16C,EAAM24C,gBACH,IAAxB+B,EAAetmB,MAAwE,IAAxBsmB,EAAetmB,OAC9E31B,EAAGwB,aAAa,iBAChBxB,EAAGwB,aAAay6C,EAAenuB,WAC/B9tB,EAAGwB,aAAa,aACY,IAAxBy6C,EAAetmB,OACf/zB,GAA2B,EAC3Bm6C,KAEwB,IAAxBE,EAAetmB,OACf/zB,GAA2B,EAC3Bo6C,MAIZh8C,EAAGwB,aAAa,WAChB,MAAMM,EAAmB,IAAI24C,EAAiB,EAAGsB,EAAcC,GAE/D,OADAl6C,EAAiBk5C,cAAc,EAAGe,EAAa,EAAG,GAC3C,IAAIH,EAAiB95C,GAAkB,EAAOF,EACzD,CAGA,OADA5B,EAAGwB,aAAa,8BACT,IAAIo6C,EAAiB,IAAInB,EAAiB,EAAG,IAAI,EAAO,EACnE,CACA,OA2cJ,SAAqBl5C,EAAOvB,GACxB,MAAMk8C,EAAkB36C,EAAM26C,gBACxBv9C,EAAiC4C,EAAM5C,+BACvCiD,EAA0BL,EAAMK,wBAChCa,EAAclB,EAAMkB,YACpBhQ,EAAM8O,EAAM9O,IACZ0pD,EAAgB56C,EAAM46C,cACtBC,EAAuB76C,EAAM66C,qBAC7BC,EAAQ96C,EAAM86C,MACdrC,EAAmBz4C,EAAMy4C,iBACzB54C,EAAUG,EAAMH,QAChBC,EAAqBE,EAAMF,mBAC3BH,EAAcK,EAAML,YACpB5C,EAAaiD,EAAMjD,WACnB87C,EAAsB74C,EAAM64C,oBAC5Bh8C,EAAmBmD,EAAMnD,iBACzBC,EAA0BkD,EAAMlD,wBAChCyD,EAAmB,IAAI24C,EAAiBhoD,EAAM,EAAG4pD,EAAMxqD,QAC7D,IAAIyqD,GAA8B,EAC9B13C,EAAY,EACZ23C,EAAgBl7C,EAChBm7C,EAAmB,EACnBC,EAAuB,EACvBC,EAAmB,EACnBx7C,EACAlB,EAAGwB,aAAa,oBAGhBxB,EAAGwB,aAAa,UAEpB,IAAK,IAAImD,EAAY,EAAGg4C,EAAYN,EAAMxqD,OAAQ8S,EAAYg4C,EAAWh4C,IAAa,CAClF,MAAMi4C,EAAOP,EAAM13C,GACbk4C,EAAeD,EAAKpD,SACpBsD,EAAWF,EAAKjnB,KAChBonB,EAAkBH,EAAK17C,YACvB87C,EAA8C,IAArB5+C,GAAsDw+C,EAAKjD,eACpFsD,EAAiCD,IAA0Bd,IAAiC,SAAbY,IAA4Cl7C,GAC3Hs7C,EAAgCt4C,IAAci4C,GAAgBD,EAAKhD,gBASzE,GARA4C,EAAmB,EACnBx8C,EAAGwB,aAAa,UACZu7C,GACA/8C,EAAGwB,aAAa,iCAEpBxB,EAAGwB,aAAa,WAChBxB,EAAGwB,aAAay7C,EAAiC,OAASH,GAC1D98C,EAAGm9C,oBAAoB,IACnBH,EAAuB,CACvB,IAAII,EAAY,EAChB,CACI,IAAIC,EAAaz4C,EACb04C,EAAiBf,EACrB,KAAOc,EAAaR,EAAcQ,IAAc,CAC5C,MACME,EAA+F,GAArE,IADf96C,EAAYspC,WAAWsR,GACgBj8C,EAAWk8C,EAAiBl8C,EAAY,GAChGg8C,GAAaG,EACTF,GAAcrD,IACdsD,GAAkBC,EAE1B,CACJ,CAOA,IANIN,IACAj9C,EAAGwB,aAAa,kBAChBxB,EAAGwB,aAAaC,OAAOnD,EAAa8+C,IACpCp9C,EAAGwB,aAAa,QAEpBxB,EAAGm9C,oBAAoB,IAChBv4C,EAAYi4C,EAAcj4C,IAAa,CAI1C,IAAI44C,EACAD,EACJ,GALAz7C,EAAiBk5C,cAAcp2C,EAAY,EAAGD,EAAY+3C,EAAkBF,EAAkBC,GAC9FC,EAAmB,EAIF,IAHAj6C,EAAYspC,WAAWnnC,GAGD,CACnC44C,EAAsBp8C,EAAWm7C,EAAgBn7C,EAAY,EAC7Dm8C,EAAYC,GACP7+C,GAAkC4+C,EAAY,EAC/Cv9C,EAAGy9C,eAAe,MAGlBz9C,EAAGy9C,eAAe,OAEtB,IAAK,IAAIC,EAAQ,EAAGA,GAASH,EAAWG,IACpC19C,EAAGy9C,eAAe,IAE1B,MAEID,EAAqB,EACrBD,EAAY,EACZv9C,EAAGy9C,eAAerD,GAClBp6C,EAAGy9C,eAAe,MAEtBjB,GAAoBgB,EACpBf,GAAwBc,EACpB34C,GAAao1C,IACbuC,GAAiBgB,EAEzB,CACJ,MAGI,IADAv9C,EAAGm9C,oBAAoB,IAChBv4C,EAAYi4C,EAAcj4C,IAAa,CAC1C9C,EAAiBk5C,cAAcp2C,EAAY,EAAGD,EAAY+3C,EAAkBF,EAAkBC,GAC9FC,EAAmB,EACnB,MAAM9nB,EAAWnyB,EAAYspC,WAAWnnC,GACxC,IAAI44C,EAAqB,EACrBD,EAAY,EAChB,OAAQ3oB,GACJ,KAAK,EACD4oB,EAAsBp8C,EAAWm7C,EAAgBn7C,EACjDm8C,EAAYC,EACZ,IAAK,IAAIE,EAAQ,EAAGA,GAASF,EAAoBE,IAC7C19C,EAAGy9C,eAAe,KAEtB,MACJ,KAAK,GACDz9C,EAAGy9C,eAAe,KAClB,MACJ,KAAK,GACDz9C,EAAGwB,aAAa,QAChB,MACJ,KAAK,GACDxB,EAAGwB,aAAa,QAChB,MACJ,KAAK,GACDxB,EAAGwB,aAAa,SAChB,MACJ,KAAK,EACGnD,EAEA2B,EAAGy9C,eAAe,MAGlBz9C,EAAGwB,aAAa,SAEpB,MACJ,KAAK,MACL,KAAK,KACL,KAAK,KACL,KAAK,IACDxB,EAAGy9C,eAAe,OAClB,MACJ,QACQE,EAAA,GAA6B/oB,IAC7B2oB,IAGAl/C,GAA2Bu2B,EAAW,GACtC50B,EAAGy9C,eAAe,KAAO7oB,GAEpBv2B,GAAwC,MAAbu2B,EAEhC50B,EAAGy9C,eAAe,MAEbp/C,GAA2Bu/C,EAAmBhpB,IACnD50B,EAAGwB,aAAa,OAChBxB,EAAGwB,aAAaq8C,EAAWjpB,IAC3B50B,EAAGwB,aAAa,KAChBg8C,EAAqB,EACrBD,EAAYC,GAGZx9C,EAAGy9C,eAAe7oB,GAG9B4nB,GAAoBgB,EACpBf,GAAwBc,EACpB34C,GAAao1C,IACbuC,GAAiBgB,EAEzB,CAEAL,EACAR,IAGAA,EAAmB,EAEnB93C,GAAanS,IAAQ6pD,GAA+BM,EAAKhD,kBACzD0C,GAA8B,EAC9Bx6C,EAAiBk5C,cAAcp2C,EAAY,EAAGD,EAAW63C,EAAkBC,IAE/Ez8C,EAAGwB,aAAa,UACpB,CAiBJ,IAAoC5P,EALhC,OAXK0qD,GAGDx6C,EAAiBk5C,cAAcvoD,EAAM,EAAG4pD,EAAMxqD,OAAS,EAAG2qD,EAAkBC,GAE5EN,IACAn8C,EAAGwB,aAAa,8BAChBxB,EAAGwB,aAAas8C,EAAA,GAAa,WAAY,mBASblsD,EAT2DwqD,GAUnF,KACG0B,EAAA,GAAa,iBAAkB,YAAalsD,GAEnDA,EAAI,QACG,IAAIA,EAAI,MAAMmsD,QAAQ,QAE1B,IAAInsD,EAAI,KAAO,MAAMmsD,QAAQ,UAfhC/9C,EAAGwB,aAAa,YAEpBxB,EAAGwB,aAAa,WACT,IAAIo6C,EAAiB95C,EAAkBZ,EAAaU,EAC/D,CA9oBWo8C,CAoCX,SAAgCz8C,GAC5B,MAAMkB,EAAclB,EAAMkB,YAC1B,IAAI05C,EACAC,EACA3pD,GACkC,IAAlC8O,EAAM1C,wBAAiC0C,EAAM1C,uBAAyB4D,EAAY5Q,QAClFsqD,GAAgB,EAChBC,EAAuB35C,EAAY5Q,OAAS0P,EAAM1C,uBAClDpM,EAAM8O,EAAM1C,yBAGZs9C,GAAgB,EAChBC,EAAuB,EACvB3pD,EAAMgQ,EAAY5Q,QAEtB,IAAIsP,EAuCR,SAAuCsB,EAAaw7C,EAAiB98C,EAAQ64C,EAAkBvnD,GAC3F,MAAM8B,EAAS,GACf,IAAIiI,EAAY,EAEZw9C,EAAmB,IACnBzlD,EAAOiI,KAAe,IAAI+8C,EAASS,EAAkB,GAAI,GAAG,IAEhE,IAAIh+C,EAAcg+C,EAClB,IAAK,IAAIkE,EAAa,EAAGvB,EAAYx7C,EAAOg9C,WAAYD,EAAavB,EAAWuB,IAAc,CAC1F,MAAM1E,EAAWr4C,EAAOi9C,aAAaF,GACrC,GAAI1E,GAAYQ,EAEZ,SAEJ,MAAMrkB,EAAOx0B,EAAOk9C,aAAaH,GACjC,GAAI1E,GAAY/mD,EAAK,CACjB,MAAM6rD,IAAoBL,GAAkBN,EAAA,GAAoBl7C,EAAYstC,UAAU/zC,EAAavJ,IACnG8B,EAAOiI,KAAe,IAAI+8C,EAAS9mD,EAAKkjC,EAAM,EAAG2oB,GACjD,KACJ,CACA,MAAMA,IAAoBL,GAAkBN,EAAA,GAAoBl7C,EAAYstC,UAAU/zC,EAAaw9C,IACnGjlD,EAAOiI,KAAe,IAAI+8C,EAASC,EAAU7jB,EAAM,EAAG2oB,GACtDtiD,EAAcw9C,CAClB,CACA,OAAOjlD,CACX,CAhEiBgqD,CAA8B97C,EAAalB,EAAML,YAAaK,EAAM04C,WAAY14C,EAAMy4C,iBAAkBvnD,GACjH8O,EAAMlD,0BAA4BkD,EAAMN,eAGxCE,EA4JR,SAAkCsB,EAAatB,GAC3C,MAAM5M,EAAS,GACf,IAAIiqD,EAAe,IAAIjF,EAAS,EAAG,GAAI,GAAG,GACtC2B,EAAa,EACjB,IAAK,MAAMz/B,KAASta,EAAQ,CACxB,MAAMs9C,EAAgBhjC,EAAM+9B,SAC5B,KAAO0B,EAAauD,EAAevD,IAE3B0C,EADan7C,EAAYspC,WAAWmP,MAEhCA,EAAasD,EAAahF,WAE1BgF,EAAe,IAAIjF,EAAS2B,EAAYz/B,EAAMka,KAAMla,EAAMg+B,SAAUh+B,EAAMva,aAC1E3M,EAAOF,KAAKmqD,IAEhBA,EAAe,IAAIjF,EAAS2B,EAAa,EAAG,aAAcz/B,EAAMg+B,UAAU,GAC1EllD,EAAOF,KAAKmqD,IAGhBtD,EAAasD,EAAahF,WAE1BgF,EAAe,IAAIjF,EAASkF,EAAehjC,EAAMka,KAAMla,EAAMg+B,SAAUh+B,EAAMva,aAC7E3M,EAAOF,KAAKmqD,GAEpB,CACA,OAAOjqD,CACX,CArLiBmqD,CAAyBj8C,EAAatB,KAEpB,IAA3BI,EAAMnD,kBACqB,IAA3BmD,EAAMnD,kBACsB,IAA3BmD,EAAMnD,kBAA6DmD,EAAMhB,kBAC9C,IAA3BgB,EAAMnD,mBAA2DmD,EAAMP,4BACxEG,EAqLR,SAAgCI,EAAOkB,EAAahQ,EAAK0O,GACrD,MAAMH,EAA2BO,EAAMP,yBACjCg5C,EAAmBz4C,EAAMy4C,iBACzB54C,EAAUG,EAAMH,QAChBC,EAAqBE,EAAMF,mBAC3B5C,EAA4B8C,EAAM9C,0BAClC+B,EAAae,EAAMhB,iBACnBo+C,EAA2C,IAA3Bp9C,EAAMnD,iBACtBwgD,EAA2C,IAA3Br9C,EAAMnD,iBACtBygD,EAAqCt9C,EAAM44C,mBAAqB54C,EAAMjD,WACtE/J,EAAS,GACf,IAAIiI,EAAY,EACZ0hD,EAAa,EACbY,EAAY39C,EAAO+8C,GAAYvoB,KAC/B2oB,EAAmBn9C,EAAO+8C,GAAYh9C,YACtCu9C,EAAgBt9C,EAAO+8C,GAAY1E,SACvC,MAAMuF,EAAe59C,EAAOtP,OAC5B,IAEImhD,EAFAgM,GAA0B,EAC1BnM,EAA0B8K,EAAA,GAAgCl7C,IAE7B,IAA7BowC,GACAmM,GAA0B,EAC1BnM,EAA0BpgD,EAC1BugD,EAAyBvgD,GAGzBugD,EAAyB2K,EAAA,GAA+Bl7C,GAE5D,IAAIw8C,GAAkB,EAClBC,EAAwB,EACxBC,EAAmB3+C,GAAcA,EAAW0+C,GAC5CE,EAAY/9C,EAAqBD,EACrC,IAAK,IAAIwD,EAAYo1C,EAAkBp1C,EAAYnS,EAAKmS,IAAa,CACjE,MAAMkuC,EAASrwC,EAAYspC,WAAWnnC,GAKtC,IAAIy6C,EACJ,GALIF,GAAoBv6C,GAAau6C,EAAiBjjD,YAClDgjD,IACAC,EAAmB3+C,GAAcA,EAAW0+C,IAG5Ct6C,EAAYiuC,GAA2BjuC,EAAYouC,EAEnDqM,GAAiB,OAEhB,GAAe,IAAXvM,EAELuM,GAAiB,OAEhB,GAAe,KAAXvM,EAEL,GAAI6L,EAEA,GAAIM,EACAI,GAAiB,MAEhB,CACD,MAAMC,EAAc16C,EAAY,EAAInS,EAAMgQ,EAAYspC,WAAWnnC,EAAY,GAAK,EAClFy6C,EAAiC,KAAfC,GAAyD,IAAfA,CAChE,MAGAD,GAAiB,OAIrBA,GAAiB,EAqBrB,GAlBIA,GAAkB7+C,IAClB6+C,IAAmBF,GAAoBA,EAAiBnjD,aAAe4I,GAAau6C,EAAiBjjD,UAAY0I,GAGjHy6C,GAAkBT,IAClBS,EAAiBL,GAA2Bp6C,EAAYouC,GAExDqM,GAAkBf,GAOd15C,GAAaiuC,GAA2BjuC,GAAaouC,IACrDqM,GAAiB,GAGrBJ,GAEA,IAAKI,IAAoB5gD,GAA6B2gD,GAAah+C,EAAU,CAEzE,GAAIy9C,EAEA,IAAK,IAAIrsD,GADagK,EAAY,EAAIjI,EAAOiI,EAAY,GAAGg9C,SAAWQ,GAC3C,EAAGxnD,GAAKoS,EAAWpS,IAC3C+B,EAAOiI,KAAe,IAAI+8C,EAAS/mD,EAAG,OAAQ,GAAwC,QAI1F+B,EAAOiI,KAAe,IAAI+8C,EAAS30C,EAAW,OAAQ,GAAwC,GAElGw6C,GAAwBh+C,CAC5B,OAIIwD,IAAc65C,GAAkBY,GAAkBz6C,EAAYo1C,KAC9DzlD,EAAOiI,KAAe,IAAI+8C,EAAS30C,EAAWk6C,EAAW,EAAGR,GAC5Dc,GAAwBh+C,GAahC,IAVe,IAAX0xC,EACAsM,EAAYh+C,EAEPu8C,EAAA,GAA6B7K,GAClCsM,GAAa,EAGbA,IAEJH,EAAkBI,EACXz6C,IAAc65C,IACjBP,IACIA,EAAaa,IACbD,EAAY39C,EAAO+8C,GAAYvoB,KAC/B2oB,EAAmBn9C,EAAO+8C,GAAYh9C,YACtCu9C,EAAgBt9C,EAAO+8C,GAAY1E,QAM/C,CACA,IAAI+F,GAAqB,EACzB,GAAIN,EAEA,GAAIj+C,GAA4B29C,EAAc,CAC1C,MAAMa,EAAgB/sD,EAAM,EAAIgQ,EAAYspC,WAAWt5C,EAAM,GAAK,EAC5D2iD,EAAgB3iD,EAAM,EAAIgQ,EAAYspC,WAAWt5C,EAAM,GAAK,EAClB,KAAjB+sD,GAA8D,KAAjBpK,GAA6D,IAAjBA,IAEpHmK,GAAqB,EAE7B,MAEIA,GAAqB,EAG7B,GAAIA,EACA,GAAIV,EAEA,IAAK,IAAIrsD,GADagK,EAAY,EAAIjI,EAAOiI,EAAY,GAAGg9C,SAAWQ,GAC3C,EAAGxnD,GAAKC,EAAKD,IACrC+B,EAAOiI,KAAe,IAAI+8C,EAAS/mD,EAAG,OAAQ,GAAwC,QAI1F+B,EAAOiI,KAAe,IAAI+8C,EAAS9mD,EAAK,OAAQ,GAAwC,QAI5F8B,EAAOiI,KAAe,IAAI+8C,EAAS9mD,EAAKqsD,EAAW,EAAGR,GAE1D,OAAO/pD,CACX,CArViBkrD,CAAuBl+C,EAAOkB,EAAahQ,EAAK0O,IAE7D,IAAIS,EAA0B,EAC9B,GAAIL,EAAM24C,gBAAgBroD,OAAS,EAAG,CAClC,IAAK,IAAIW,EAAI,EAAGC,EAAM8O,EAAM24C,gBAAgBroD,OAAQW,EAAIC,EAAKD,IAAK,CAC9D,MAAMypD,EAAiB16C,EAAM24C,gBAAgB1nD,GACjB,IAAxBypD,EAAetmB,MAIc,IAAxBsmB,EAAetmB,KAFpB/zB,GAA2B,EAKE,IAAxBq6C,EAAetmB,OACpB/zB,GAA2B,EAEnC,CACAT,EAyUR,SAAiCsB,EAAahQ,EAAK0O,EAAQu+C,GACvDA,EAAiBhrD,KAAK,IAAehB,SACrC,MAAMwmD,EAAkB,KAA0ByF,UAAUl9C,EAAai9C,GACnEE,EAAqB1F,EAAgBroD,OAC3C,IAAIguD,EAAsB,EAC1B,MAAMtrD,EAAS,GACf,IAAIiI,EAAY,EACZsjD,EAAqB,EACzB,IAAK,IAAI5B,EAAa,EAAGzrD,EAAM0O,EAAOtP,OAAQqsD,EAAazrD,EAAKyrD,IAAc,CAC1E,MAAMziC,EAAQta,EAAO+8C,GACfO,EAAgBhjC,EAAM+9B,SACtBsF,EAAYrjC,EAAMka,KAClBoqB,EAAgBtkC,EAAMg+B,SACtB6E,EAAmB7iC,EAAMva,YAC/B,KAAO2+C,EAAsBD,GAAsB1F,EAAgB2F,GAAqB7jD,YAAcyiD,GAAe,CACjH,MAAMxC,EAAiB/B,EAAgB2F,GAKvC,GAJI5D,EAAejgD,YAAc8jD,IAC7BA,EAAqB7D,EAAejgD,YACpCzH,EAAOiI,KAAe,IAAI+8C,EAASuG,EAAoBhB,EAAWiB,EAAezB,MAEjFrC,EAAe//C,UAAY,GAAKuiD,GAM/B,CAEDqB,EAAqBrB,EACrBlqD,EAAOiI,KAAe,IAAI+8C,EAASuG,EAAoBhB,EAAY,IAAM7C,EAAenuB,UAAWiyB,EAAgB9D,EAAexC,SAAU6E,GAC5I,KACJ,CATIwB,EAAqB7D,EAAe//C,UAAY,EAChD3H,EAAOiI,KAAe,IAAI+8C,EAASuG,EAAoBhB,EAAY,IAAM7C,EAAenuB,UAAWiyB,EAAgB9D,EAAexC,SAAU6E,GAC5IuB,GAQR,CACIpB,EAAgBqB,IAChBA,EAAqBrB,EACrBlqD,EAAOiI,KAAe,IAAI+8C,EAASuG,EAAoBhB,EAAWiB,EAAezB,GAEzF,CACA,MAAM0B,EAAoB7+C,EAAOA,EAAOtP,OAAS,GAAG2nD,SACpD,GAAIqG,EAAsBD,GAAsB1F,EAAgB2F,GAAqB7jD,cAAgBgkD,EACjG,KAAOH,EAAsBD,GAAsB1F,EAAgB2F,GAAqB7jD,cAAgBgkD,GAAmB,CACvH,MAAM/D,EAAiB/B,EAAgB2F,GACvCtrD,EAAOiI,KAAe,IAAI+8C,EAASuG,EAAoB7D,EAAenuB,UAAWmuB,EAAexC,UAAU,GAC1GoG,GACJ,CAEJ,OAAOtrD,CACX,CAxXiB0rD,CAAwBx9C,EAAahQ,EAAK0O,EAAQI,EAAM24C,gBACrE,CAKA,OAJK34C,EAAML,cAEPC,EAuCR,SAA0BsB,EAAatB,EAAQ++C,GAC3C,IAAIF,EAAoB,EACxB,MAAMzrD,EAAS,GACf,IAAIiI,EAAY,EAChB,GAAI0jD,EAEA,IAAK,IAAI1tD,EAAI,EAAGC,EAAM0O,EAAOtP,OAAQW,EAAIC,EAAKD,IAAK,CAC/C,MAAMipB,EAAQta,EAAO3O,GACfisD,EAAgBhjC,EAAM+9B,SAC5B,GAAIwG,EAAoB,GAA+BvB,EAAe,CAClE,MAAMK,EAAYrjC,EAAMka,KAClBoqB,EAAgBtkC,EAAMg+B,SACtB6E,EAAmB7iC,EAAMva,YAC/B,IAAIi/C,GAAmB,EACnBC,EAAiBJ,EACrB,IAAK,IAAItR,EAAIsR,EAAmBtR,EAAI+P,EAAe/P,IACb,KAA9BjsC,EAAYspC,WAAW2C,KACvByR,EAAkBzR,IAEG,IAArByR,GAA0BzR,EAAI0R,GAAkB,KAEhD7rD,EAAOiI,KAAe,IAAI+8C,EAAS4G,EAAkB,EAAGrB,EAAWiB,EAAezB,GAClF8B,EAAiBD,EAAkB,EACnCA,GAAmB,GAGvBC,IAAmB3B,IACnBlqD,EAAOiI,KAAe,IAAI+8C,EAASkF,EAAeK,EAAWiB,EAAezB,GAEpF,MAEI/pD,EAAOiI,KAAeif,EAE1BukC,EAAoBvB,CACxB,MAIA,IAAK,IAAIjsD,EAAI,EAAGC,EAAM0O,EAAOtP,OAAQW,EAAIC,EAAKD,IAAK,CAC/C,MAAMipB,EAAQta,EAAO3O,GACfisD,EAAgBhjC,EAAM+9B,SACtB1F,EAAQ2K,EAAgBuB,EAC9B,GAAIlM,EAAO,GAA8B,CACrC,MAAMgL,EAAYrjC,EAAMka,KAClBoqB,EAAgBtkC,EAAMg+B,SACtB6E,EAAmB7iC,EAAMva,YACzBm/C,EAAcxsD,KAAK++C,KAAKkB,EAAO,IACrC,IAAK,IAAIpF,EAAI,EAAGA,EAAI2R,EAAa3R,IAAK,CAClC,MAAM4R,EAAgBN,EAAyB,GAAJtR,EAC3Cn6C,EAAOiI,KAAe,IAAI+8C,EAAS+G,EAAexB,EAAWiB,EAAezB,EAChF,CACA/pD,EAAOiI,KAAe,IAAI+8C,EAASkF,EAAeK,EAAWiB,EAAezB,EAChF,MAEI/pD,EAAOiI,KAAeif,EAE1BukC,EAAoBvB,CACxB,CAEJ,OAAOlqD,CACX,CAnGiBgsD,CAAiB99C,EAAatB,GAASI,EAAMN,cAAgBM,EAAMzC,gBAEzE,IAAI0hD,EAAwBj/C,EAAM9C,0BAA2B8C,EAAM5C,+BAAgC8D,EAAahQ,EAAK0pD,EAAeC,EAAsBj7C,EAAQS,EAAyBL,EAAMy4C,iBAAkBz4C,EAAMH,QAASG,EAAMF,mBAAoBE,EAAML,YAAaK,EAAMjD,WAAYiD,EAAM64C,oBAAqB74C,EAAMnD,iBAAkBmD,EAAMlD,wBACrW,CArFuBoiD,CAAuBl/C,GAAQvB,EACtD,CACO,MAAM0gD,EACT,WAAAvnD,CAAY2I,EAAkBoI,EAAMhJ,EAAaU,GAC7CxI,KAAK0I,iBAAmBA,EACxB1I,KAAK8Q,KAAOA,EACZ9Q,KAAK8H,YAAcA,EACnB9H,KAAKwI,wBAA0BA,CACnC,EAEG,SAAS++C,EAAgBp/C,GAC5B,MAAMvB,EAAK,IAAI,KAAc,KACvB4gD,EAAM9E,EAAev6C,EAAOvB,GAClC,OAAO,IAAI0gD,EAAkBE,EAAI9+C,iBAAkB9B,EAAG6gD,QAASD,EAAI1/C,YAAa0/C,EAAIh/C,wBACxF,CACA,MAAM4+C,EACF,WAAArnD,CAAY+iD,EAAiBv9C,EAAgC8D,EAAahQ,EAAK0pD,EAAeC,EAAsBC,EAAOz6C,EAAyBo4C,EAAkB54C,EAASC,EAAoBH,EAAa5C,EAAY87C,EAAqBh8C,EAAkBC,GAC/PjF,KAAK8iD,gBAAkBA,EACvB9iD,KAAKuF,+BAAiCA,EACtCvF,KAAKqJ,YAAcA,EACnBrJ,KAAK3G,IAAMA,EACX2G,KAAK+iD,cAAgBA,EACrB/iD,KAAKgjD,qBAAuBA,EAC5BhjD,KAAKijD,MAAQA,EACbjjD,KAAKwI,wBAA0BA,EAC/BxI,KAAK4gD,iBAAmBA,EACxB5gD,KAAKgI,QAAUA,EACfhI,KAAKiI,mBAAqBA,EAC1BjI,KAAK8H,YAAcA,EACnB9H,KAAKkF,WAAaA,EAClBlF,KAAKghD,oBAAsBA,EAC3BhhD,KAAKgF,iBAAmBA,EACxBhF,KAAKiF,wBAA0BA,CAEnC,EAoJJ,SAASu/C,EAAmBhpB,GACxB,OAAIA,EAAW,GACU,IAAbA,EAEK,MAAbA,GAICA,GAAY,MAAUA,GAAY,MAC/BA,GAAY,MAAUA,GAAY,MAClCA,GAAY,MAAUA,GAAY,MACtB,OAAbA,CAiBX,CA6bA,SAASipB,EAAWjsD,GAChB,OAAOA,EAAE8V,SAAS,IAAIqtB,cAAc4X,SAAS,EAAG,IACpD,C,mCC73BO,MAAMmU,EAAiBl9B,OAAO,iB,kBCHrC,SAASm9B,EAAWC,EAAQC,GACxB,MAAMC,EAAUrtD,KAAKstD,IAAI,GAAIF,GAC7B,OAAOptD,KAAKyP,MAAM09C,EAASE,GAAWA,CAC1C,C,6CACO,MAAME,EACT,WAAAjoD,CAAYuL,EAAG28C,EAAG9uD,EAAGD,EAAI,GACrB8G,KAAKkoD,gBAAavsD,EAClBqE,KAAKsL,EAAoC,EAAhC7Q,KAAKmE,IAAI,IAAKnE,KAAKkE,IAAI,EAAG2M,IACnCtL,KAAKioD,EAAoC,EAAhCxtD,KAAKmE,IAAI,IAAKnE,KAAKkE,IAAI,EAAGspD,IACnCjoD,KAAK7G,EAAoC,EAAhCsB,KAAKmE,IAAI,IAAKnE,KAAKkE,IAAI,EAAGxF,IACnC6G,KAAK9G,EAAIyuD,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAG1F,GAAI,GAAI,EACrD,CACA,aAAOJ,CAAOI,EAAGC,GACb,OAAOD,EAAEoS,IAAMnS,EAAEmS,GAAKpS,EAAE+uD,IAAM9uD,EAAE8uD,GAAK/uD,EAAEC,IAAMA,EAAEA,GAAKD,EAAEA,IAAMC,EAAED,CAClE,EAEG,MAAMivD,EACT,WAAApoD,CAAYqoD,EAAG1V,EAAG7iC,EAAG3W,GACjB8G,KAAKqoD,gBAAa1sD,EAClBqE,KAAKooD,EAAoC,EAAhC3tD,KAAKkE,IAAIlE,KAAKmE,IAAI,IAAKwpD,GAAI,GACpCpoD,KAAK0yC,EAAIiV,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAG8zC,GAAI,GAAI,GACjD1yC,KAAK6P,EAAI83C,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAGiR,GAAI,GAAI,GACjD7P,KAAK9G,EAAIyuD,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAG1F,GAAI,GAAI,EACrD,CACA,aAAOJ,CAAOI,EAAGC,GACb,OAAOD,EAAEkvD,IAAMjvD,EAAEivD,GAAKlvD,EAAEw5C,IAAMv5C,EAAEu5C,GAAKx5C,EAAE2W,IAAM1W,EAAE0W,GAAK3W,EAAEA,IAAMC,EAAED,CAClE,CAOA,eAAOovD,CAASC,GACZ,MAAMj9C,EAAIi9C,EAAKj9C,EAAI,IACb28C,EAAIM,EAAKN,EAAI,IACb9uD,EAAIovD,EAAKpvD,EAAI,IACbD,EAAIqvD,EAAKrvD,EACTyF,EAAMlE,KAAKkE,IAAI2M,EAAG28C,EAAG9uD,GACrByF,EAAMnE,KAAKmE,IAAI0M,EAAG28C,EAAG9uD,GAC3B,IAAIivD,EAAI,EACJ1V,EAAI,EACR,MAAM7iC,GAAKjR,EAAMD,GAAO,EAClB6pD,EAAS7pD,EAAMC,EACrB,GAAI4pD,EAAS,EAAG,CAEZ,OADA9V,EAAIj4C,KAAKmE,IAAKiR,GAAK,GAAM24C,GAAU,EAAI34C,GAAK24C,GAAU,EAAK,EAAI34C,GAAM,GAC7DlR,GACJ,KAAK2M,EACD88C,GAAKH,EAAI9uD,GAAKqvD,GAAUP,EAAI9uD,EAAI,EAAI,GACpC,MACJ,KAAK8uD,EACDG,GAAKjvD,EAAImS,GAAKk9C,EAAS,EACvB,MACJ,KAAKrvD,EACDivD,GAAK98C,EAAI28C,GAAKO,EAAS,EAG/BJ,GAAK,GACLA,EAAI3tD,KAAKyP,MAAMk+C,EACnB,CACA,OAAO,IAAID,EAAKC,EAAG1V,EAAG7iC,EAAG3W,EAC7B,CACA,eAAOuvD,CAAShgC,EAAGigC,EAAGhjC,GAOlB,OANIA,EAAI,IACJA,GAAK,GAELA,EAAI,IACJA,GAAK,GAELA,EAAI,EAAI,EACD+C,EAAc,GAATigC,EAAIjgC,GAAS/C,EAEzBA,EAAI,GACGgjC,EAEPhjC,EAAI,EAAI,EACD+C,GAAKigC,EAAIjgC,IAAM,EAAI,EAAI/C,GAAK,EAEhC+C,CACX,CAOA,aAAOkgC,CAAOC,GACV,MAAMR,EAAIQ,EAAKR,EAAI,KACb,EAAE1V,EAAC,EAAE7iC,EAAC,EAAE3W,GAAM0vD,EACpB,IAAIt9C,EAAG28C,EAAG9uD,EACV,GAAU,IAANu5C,EACApnC,EAAI28C,EAAI9uD,EAAI0W,MAEX,CACD,MAAM64C,EAAI74C,EAAI,GAAMA,GAAK,EAAI6iC,GAAK7iC,EAAI6iC,EAAI7iC,EAAI6iC,EACxCjqB,EAAI,EAAI5Y,EAAI64C,EAClBp9C,EAAI68C,EAAKM,SAAShgC,EAAGigC,EAAGN,EAAI,EAAI,GAChCH,EAAIE,EAAKM,SAAShgC,EAAGigC,EAAGN,GACxBjvD,EAAIgvD,EAAKM,SAAShgC,EAAGigC,EAAGN,EAAI,EAAI,EACpC,CACA,OAAO,IAAIJ,EAAKvtD,KAAKyP,MAAU,IAAJoB,GAAU7Q,KAAKyP,MAAU,IAAJ+9C,GAAUxtD,KAAKyP,MAAU,IAAJ/Q,GAAUD,EACnF,EAEG,MAAM2vD,EACT,WAAA9oD,CAAYqoD,EAAG1V,EAAGoW,EAAG5vD,GACjB8G,KAAK+oD,gBAAaptD,EAClBqE,KAAKooD,EAAoC,EAAhC3tD,KAAKkE,IAAIlE,KAAKmE,IAAI,IAAKwpD,GAAI,GACpCpoD,KAAK0yC,EAAIiV,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAG8zC,GAAI,GAAI,GACjD1yC,KAAK8oD,EAAInB,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAGkqD,GAAI,GAAI,GACjD9oD,KAAK9G,EAAIyuD,EAAWltD,KAAKkE,IAAIlE,KAAKmE,IAAI,EAAG1F,GAAI,GAAI,EACrD,CACA,aAAOJ,CAAOI,EAAGC,GACb,OAAOD,EAAEkvD,IAAMjvD,EAAEivD,GAAKlvD,EAAEw5C,IAAMv5C,EAAEu5C,GAAKx5C,EAAE4vD,IAAM3vD,EAAE2vD,GAAK5vD,EAAEA,IAAMC,EAAED,CAClE,CAEA,eAAOovD,CAASC,GACZ,MAAMj9C,EAAIi9C,EAAKj9C,EAAI,IACb28C,EAAIM,EAAKN,EAAI,IACb9uD,EAAIovD,EAAKpvD,EAAI,IACb6vD,EAAOvuD,KAAKkE,IAAI2M,EAAG28C,EAAG9uD,GAEtB45C,EAAQiW,EADDvuD,KAAKmE,IAAI0M,EAAG28C,EAAG9uD,GAEtBu5C,EAAa,IAATsW,EAAa,EAAKjW,EAAQiW,EACpC,IAAIC,EAaJ,OAXIA,EADU,IAAVlW,EACI,EAECiW,IAAS19C,IACN28C,EAAI9uD,GAAK45C,EAAS,EAAK,GAAK,EAE/BiW,IAASf,GACR9uD,EAAImS,GAAKynC,EAAS,GAGlBznC,EAAI28C,GAAKlV,EAAS,EAErB,IAAI8V,EAAKpuD,KAAKyP,MAAU,GAAJ++C,GAASvW,EAAGsW,EAAMT,EAAKrvD,EACtD,CAEA,aAAOyvD,CAAOO,GACV,MAAM,EAAEd,EAAC,EAAE1V,EAAC,EAAEoW,EAAC,EAAE5vD,GAAMgwD,EACjBxgC,EAAIogC,EAAIpW,EACRx0C,EAAIwqB,GAAK,EAAIjuB,KAAK8P,IAAK69C,EAAI,GAAM,EAAI,IACrCa,EAAIH,EAAIpgC,EACd,IAAKpd,EAAG28C,EAAG9uD,GAAK,CAAC,EAAG,EAAG,GA4BvB,OA3BIivD,EAAI,IACJ98C,EAAIod,EACJu/B,EAAI/pD,GAECkqD,EAAI,KACT98C,EAAIpN,EACJ+pD,EAAIv/B,GAEC0/B,EAAI,KACTH,EAAIv/B,EACJvvB,EAAI+E,GAECkqD,EAAI,KACTH,EAAI/pD,EACJ/E,EAAIuvB,GAEC0/B,EAAI,KACT98C,EAAIpN,EACJ/E,EAAIuvB,GAEC0/B,GAAK,MACV98C,EAAIod,EACJvvB,EAAI+E,GAERoN,EAAI7Q,KAAKyP,MAAgB,KAAToB,EAAI29C,IACpBhB,EAAIxtD,KAAKyP,MAAgB,KAAT+9C,EAAIgB,IACpB9vD,EAAIsB,KAAKyP,MAAgB,KAAT/Q,EAAI8vD,IACb,IAAIjB,EAAK18C,EAAG28C,EAAG9uD,EAAGD,EAC7B,EAEG,MAAMiwD,EACT,cAAO5yD,CAAQ6yD,GACX,OAAOD,EAAME,OAAOC,IAAIC,SAASH,IAAQD,EAAMK,GACnD,CACA,aAAO1wD,CAAOI,EAAGC,GACb,OAAKD,IAAMC,MAGND,IAAMC,IAGJD,EAAEJ,OAAOK,EACpB,CACA,QAAIyvD,GACA,OAAI5oD,KAAKypD,MACEzpD,KAAKypD,MAGLtB,EAAKG,SAAStoD,KAAKuoD,KAElC,CACA,QAAIW,GACA,OAAIlpD,KAAK0pD,MACE1pD,KAAK0pD,MAETb,EAAKP,SAAStoD,KAAKuoD,KAC9B,CACA,WAAAxoD,CAAY7C,GACR,IAAKA,EACD,MAAM,IAAItE,MAAM,uBAEf,GAAIsE,aAAe8qD,EACpBhoD,KAAKuoD,KAAOrrD,OAEX,GAAIA,aAAeirD,EACpBnoD,KAAKypD,MAAQvsD,EACb8C,KAAKuoD,KAAOJ,EAAKQ,OAAOzrD,OAEvB,MAAIA,aAAe2rD,GAKpB,MAAM,IAAIjwD,MAAM,+BAJhBoH,KAAK0pD,MAAQxsD,EACb8C,KAAKuoD,KAAOM,EAAKF,OAAOzrD,EAI5B,CACJ,CACA,MAAApE,CAAOE,GACH,QAASA,GAASgvD,EAAKlvD,OAAOkH,KAAKuoD,KAAMvvD,EAAMuvD,OAASJ,EAAKrvD,OAAOkH,KAAK4oD,KAAM5vD,EAAM4vD,OAASC,EAAK/vD,OAAOkH,KAAKkpD,KAAMlwD,EAAMkwD,KAC/H,CAKA,oBAAAS,GAKI,OAAOhC,EADW,MAHRwB,EAAMS,+BAA+B5pD,KAAKuoD,KAAKj9C,GAG1B,MAFrB69C,EAAMS,+BAA+B5pD,KAAKuoD,KAAKN,GAEb,MADlCkB,EAAMS,+BAA+B5pD,KAAKuoD,KAAKpvD,GAE5B,EACjC,CACA,qCAAOywD,CAA+B1vB,GAClC,MAAMxR,EAAIwR,EAAQ,IAClB,OAAQxR,GAAK,OAAWA,EAAI,MAAQjuB,KAAKstD,KAAMr/B,EAAI,MAAS,MAAQ,IACxE,CAKA,SAAAmhC,GAEI,OAD2B,IAAd7pD,KAAKuoD,KAAKj9C,EAAwB,IAAdtL,KAAKuoD,KAAKN,EAAwB,IAAdjoD,KAAKuoD,KAAKpvD,GAAW,KAC5D,GAClB,CACA,aAAA2wD,CAAcC,GAGV,OAFa/pD,KAAK2pD,uBACLI,EAAQJ,sBAEzB,CACA,YAAAK,CAAaD,GAGT,OAFa/pD,KAAK2pD,uBACLI,EAAQJ,sBAEzB,CACA,OAAAM,CAAQC,GACJ,OAAO,IAAIf,EAAM,IAAIhB,EAAKnoD,KAAK4oD,KAAKR,EAAGpoD,KAAK4oD,KAAKlW,EAAG1yC,KAAK4oD,KAAK/4C,EAAI7P,KAAK4oD,KAAK/4C,EAAIq6C,EAAQlqD,KAAK4oD,KAAK1vD,GACtG,CACA,MAAAixD,CAAOD,GACH,OAAO,IAAIf,EAAM,IAAIhB,EAAKnoD,KAAK4oD,KAAKR,EAAGpoD,KAAK4oD,KAAKlW,EAAG1yC,KAAK4oD,KAAK/4C,EAAI7P,KAAK4oD,KAAK/4C,EAAIq6C,EAAQlqD,KAAK4oD,KAAK1vD,GACtG,CACA,WAAA1C,CAAY0zD,GACR,MAAM,EAAE5+C,EAAC,EAAE28C,EAAC,EAAE9uD,EAAC,EAAED,GAAM8G,KAAKuoD,KAC5B,OAAO,IAAIY,EAAM,IAAInB,EAAK18C,EAAG28C,EAAG9uD,EAAGD,EAAIgxD,GAC3C,CACA,aAAAE,GACI,OAAuB,IAAhBpqD,KAAKuoD,KAAKrvD,CACrB,CACA,QAAAmxD,GACI,OAAuB,IAAhBrqD,KAAKuoD,KAAKrvD,CACrB,CACA,QAAAoxD,GACI,OAAO,IAAInB,EAAM,IAAInB,EAAK,IAAMhoD,KAAKuoD,KAAKj9C,EAAG,IAAMtL,KAAKuoD,KAAKN,EAAG,IAAMjoD,KAAKuoD,KAAKpvD,EAAG6G,KAAKuoD,KAAKrvD,GACjG,CACA,UAAAqxD,CAAWC,GACP,GAAIxqD,KAAKqqD,YAA0C,IAA5BG,EAAiBjC,KAAKrvD,EAEzC,OAAO8G,KAEX,MAAM,EAAEsL,EAAC,EAAE28C,EAAC,EAAE9uD,EAAC,EAAED,GAAM8G,KAAKuoD,KAE5B,OAAO,IAAIY,EAAM,IAAInB,EAAKwC,EAAiBjC,KAAKj9C,EAAIpS,GAAKsxD,EAAiBjC,KAAKj9C,EAAIA,GAAIk/C,EAAiBjC,KAAKN,EAAI/uD,GAAKsxD,EAAiBjC,KAAKN,EAAIA,GAAIuC,EAAiBjC,KAAKpvD,EAAID,GAAKsxD,EAAiBjC,KAAKpvD,EAAIA,GAAI,GACrN,CACA,QAAAmV,GAII,OAHKtO,KAAKyqD,YACNzqD,KAAKyqD,UAAYtB,EAAME,OAAOC,IAAI7R,OAAOz3C,OAEtCA,KAAKyqD,SAChB,CACA,sBAAOC,CAAgBC,EAAIC,EAAUV,GACjC,GAAIS,EAAGb,cAAcc,GACjB,OAAOD,EAEXT,EAASA,GAAkB,GAC3B,MAAMW,EAAOF,EAAGhB,uBACVmB,EAAOF,EAASjB,uBAEtB,OADAO,EAASA,GAAUY,EAAOD,GAAQC,EAC3BH,EAAGV,QAAQC,EACtB,CACA,qBAAOa,CAAeJ,EAAIC,EAAUV,GAChC,GAAIS,EAAGX,aAAaY,GAChB,OAAOD,EAEXT,EAASA,GAAkB,GAC3B,MAAMW,EAAOF,EAAGhB,uBAGhB,OADAO,EAASA,GAAUW,EADND,EAASjB,wBACYkB,EAC3BF,EAAGR,OAAOD,EACrB,QACSlqD,KAAKtJ,MAAQ,IAAIyyD,EAAM,IAAInB,EAAK,IAAK,IAAK,IAAK,GAAK,QACpDhoD,KAAKwrB,MAAQ,IAAI29B,EAAM,IAAInB,EAAK,EAAG,EAAG,EAAG,GAAK,QAC9ChoD,KAAKwpD,IAAM,IAAIL,EAAM,IAAInB,EAAK,IAAK,EAAG,EAAG,GAAK,QAC9ChoD,KAAKgrD,KAAO,IAAI7B,EAAM,IAAInB,EAAK,EAAG,EAAG,IAAK,GAAK,QAC/ChoD,KAAKirD,MAAQ,IAAI9B,EAAM,IAAInB,EAAK,EAAG,IAAK,EAAG,GAAK,QAChDhoD,KAAKkrD,KAAO,IAAI/B,EAAM,IAAInB,EAAK,EAAG,IAAK,IAAK,GAAK,QACjDhoD,KAAKmrD,UAAY,IAAIhC,EAAM,IAAInB,EAAK,IAAK,IAAK,IAAK,GAAK,QACxDhoD,KAAKxJ,YAAc,IAAI2yD,EAAM,IAAInB,EAAK,EAAG,EAAG,EAAG,GAAK,GAEjE,SAAWmB,GACP,IAAIE,GACJ,SAAWA,GACP,IAAIC,GACJ,SAAWA,GAuBP,SAAS8B,EAAe5yD,GACpB,MAAM8S,EAAI9S,EAAE8V,SAAS,IACrB,OAAoB,IAAbhD,EAAE7S,OAAe,IAAM6S,EAAIA,CACtC,CA8EA,SAAS+/C,EAAe7vB,GACpB,OAAQA,GACJ,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GAA0B,OAAO,EACtC,KAAK,GACL,KAAK,GAAqB,OAAO,GACjC,KAAK,GACL,KAAK,GAAqB,OAAO,GACjC,KAAK,GACL,KAAK,GAAqB,OAAO,GACjC,KAAK,IACL,KAAK,GAAqB,OAAO,GACjC,KAAK,IACL,KAAK,GAAqB,OAAO,GACjC,KAAK,IACL,KAAK,GAAqB,OAAO,GAErC,OAAO,CACX,CA3HA8tB,EAAIgC,UANJ,SAAmBpxB,GACf,OAAqB,IAAjBA,EAAMquB,KAAKrvD,EACJ,OAAOghC,EAAMquB,KAAKj9C,MAAM4uB,EAAMquB,KAAKN,MAAM/tB,EAAMquB,KAAKpvD,KAExDgwD,EAAME,OAAOC,IAAIiC,WAAWrxB,EACvC,EAKAovB,EAAIiC,WAHJ,SAAoBrxB,GAChB,MAAO,QAAQA,EAAMquB,KAAKj9C,MAAM4uB,EAAMquB,KAAKN,MAAM/tB,EAAMquB,KAAKpvD,OAAQ+gC,EAAMquB,KAAM,EAAE5D,QAAQ,KAC9F,EAQA2E,EAAIkC,UANJ,SAAmBtxB,GACf,OAAqB,IAAjBA,EAAM0uB,KAAK1vD,EACJ,OAAOghC,EAAM0uB,KAAKR,OAAsB,IAAfluB,EAAM0uB,KAAKlW,GAASiS,QAAQ,SAAwB,IAAfzqB,EAAM0uB,KAAK/4C,GAAS80C,QAAQ,OAE9FwE,EAAME,OAAOC,IAAImC,WAAWvxB,EACvC,EAKAovB,EAAImC,WAHJ,SAAoBvxB,GAChB,MAAO,QAAQA,EAAM0uB,KAAKR,OAAsB,IAAfluB,EAAM0uB,KAAKlW,GAASiS,QAAQ,SAAwB,IAAfzqB,EAAM0uB,KAAK/4C,GAAS80C,QAAQ,QAAQzqB,EAAM0uB,KAAK1vD,EAAEyrD,QAAQ,KACnI,EAYA2E,EAAIoC,UAHJ,SAAmBxxB,GACf,MAAO,IAAIkxB,EAAelxB,EAAMquB,KAAKj9C,KAAK8/C,EAAelxB,EAAMquB,KAAKN,KAAKmD,EAAelxB,EAAMquB,KAAKpvD,IACvG,EAYAmwD,EAAIqC,WANJ,SAAoBzxB,EAAO0xB,GAAU,GACjC,OAAIA,GAA4B,IAAjB1xB,EAAMquB,KAAKrvD,EACfiwD,EAAME,OAAOC,IAAIoC,UAAUxxB,GAE/B,IAAIkxB,EAAelxB,EAAMquB,KAAKj9C,KAAK8/C,EAAelxB,EAAMquB,KAAKN,KAAKmD,EAAelxB,EAAMquB,KAAKpvD,KAAKiyD,EAAe3wD,KAAKyP,MAAqB,IAAfgwB,EAAMquB,KAAKrvD,KACjJ,EAWAowD,EAAI7R,OANJ,SAAgBvd,GACZ,OAAIA,EAAMmwB,WACClB,EAAME,OAAOC,IAAIoC,UAAUxxB,GAE/BivB,EAAME,OAAOC,IAAIiC,WAAWrxB,EACvC,EAkDAovB,EAAIC,SA3CJ,SAAkBH,GACd,MAAM3wD,EAAS2wD,EAAI3wD,OACnB,GAAe,IAAXA,EAEA,OAAO,KAEX,GAA0B,KAAtB2wD,EAAIzW,WAAW,GAEf,OAAO,KAEX,GAAe,IAAXl6C,EAAc,CAEd,MAAM6S,EAAI,GAAK+/C,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IAC3EsV,EAAI,GAAKoD,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IAC3Ex5C,EAAI,GAAKkyD,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IACjF,OAAO,IAAIwW,EAAM,IAAInB,EAAK18C,EAAG28C,EAAG9uD,EAAG,GACvC,CACA,GAAe,IAAXV,EAAc,CAEd,MAAM6S,EAAI,GAAK+/C,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IAC3EsV,EAAI,GAAKoD,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IAC3Ex5C,EAAI,GAAKkyD,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IAC3Ez5C,EAAI,GAAKmyD,EAAejC,EAAIzW,WAAW,IAAM0Y,EAAejC,EAAIzW,WAAW,IACjF,OAAO,IAAIwW,EAAM,IAAInB,EAAK18C,EAAG28C,EAAG9uD,EAAGD,EAAI,KAC3C,CACA,GAAe,IAAXT,EAAc,CAEd,MAAM6S,EAAI+/C,EAAejC,EAAIzW,WAAW,IAClCsV,EAAIoD,EAAejC,EAAIzW,WAAW,IAClCx5C,EAAIkyD,EAAejC,EAAIzW,WAAW,IACxC,OAAO,IAAIwW,EAAM,IAAInB,EAAK,GAAK18C,EAAIA,EAAG,GAAK28C,EAAIA,EAAG,GAAK9uD,EAAIA,GAC/D,CACA,GAAe,IAAXV,EAAc,CAEd,MAAM6S,EAAI+/C,EAAejC,EAAIzW,WAAW,IAClCsV,EAAIoD,EAAejC,EAAIzW,WAAW,IAClCx5C,EAAIkyD,EAAejC,EAAIzW,WAAW,IAClCz5C,EAAImyD,EAAejC,EAAIzW,WAAW,IACxC,OAAO,IAAIwW,EAAM,IAAInB,EAAK,GAAK18C,EAAIA,EAAG,GAAK28C,EAAIA,EAAG,GAAK9uD,EAAIA,GAAI,GAAKD,EAAIA,GAAK,KACjF,CAEA,OAAO,IACX,CA6BH,CAnID,CAmIGowD,EAAMD,EAAOC,MAAQD,EAAOC,IAAM,CAAC,GACzC,CAtID,CAsIGD,EAASF,EAAME,SAAWF,EAAME,OAAS,CAAC,GAChD,CAzID,CAyIGF,IAAUA,EAAQ,CAAC,G,yHCxctB,MAAM0C,EACF,WAAA9rD,GAEIC,KAAK8rD,wBAA0B,IAAI33B,GACvC,QACSn0B,KAAK+rD,SAAW,IAAIF,CAAiB,CAC9C,aAAAG,CAAc32D,GACV,OAAO2K,KAAK8rD,wBAAwBn2D,IAAIqK,KAAKisD,YAAY52D,KAAkB,CAC/E,CACA,WAAA42D,CAAY52D,GACR,OAAOA,EAAaG,cACxB,EAEG,SAAS02D,EAA4B72D,EAAcy6C,EAAO5tB,GACxC,iBAAV4tB,IACPA,EAAQz6C,EAAa82D,WAAWrc,IAEpCA,EAAMsc,iBAAiB,SAAUlqC,EACrC,CAEO,SAAS8pC,EAAc32D,GAC1B,OAAOw2D,EAAcE,SAASC,cAAc32D,EAChD,CACA,MAAMg3D,EAAYpsC,UAAUosC,UACfC,EAAaD,EAAUzuD,QAAQ,YAAc,EAC7C2uD,EAAYF,EAAUzuD,QAAQ,gBAAkB,EAChD4uD,EAAYH,EAAUzuD,QAAQ,WAAa,EAC3C6uD,GAAaD,GAAaH,EAAUzuD,QAAQ,WAAa,EACzD8uD,GAAoBF,IAAaC,GAAYF,EAE7CI,GADcN,EAAUzuD,QAAQ,aACnByuD,EAAUzuD,QAAQ,YAAc,GAC1D,IAAIgvD,GAAa,EACjB,GAAqC,mBAA1B,IAAWT,WAA2B,CAC7C,MAAMU,EAAuB,IAAWV,WAAW,yEAC7CW,EAAuB,IAAWX,WAAW,8BACnDS,EAAaC,EAAqB9yC,QAClCmyC,EAA4B,IAAYW,EAAsB,EAAG9yC,cAGzD6yC,GAAcE,EAAqB/yC,UAIvC6yC,EAAa7yC,IAErB,CACO,SAASgzC,IACZ,OAAOH,CACX,C,0DCjDA,MAAMI,EAA6B,IAAIC,QACvC,SAASC,EAA4BC,GACjC,IAAKA,EAAEhxC,QAAUgxC,EAAEhxC,SAAWgxC,EAC1B,OAAO,KAGX,IACI,MAAMC,EAAWD,EAAEC,SACbC,EAAiBF,EAAEhxC,OAAOixC,SAChC,GAAwB,SAApBA,EAASE,QAA+C,SAA1BD,EAAeC,QAAqBF,EAASE,SAAWD,EAAeC,OACrG,OAAO,IAEf,CACA,MAAOrxD,GACH,OAAO,IACX,CACA,OAAOkxD,EAAEhxC,MACb,CACO,MAAMoxC,EAKT,+BAAOC,CAAyBn4D,GAC5B,IAAIo4D,EAAmBT,EAA2Br3D,IAAIN,GACtD,IAAKo4D,EAAkB,CACnBA,EAAmB,GACnBT,EAA2Br9C,IAAIta,EAAco4D,GAC7C,IACItxC,EADAgxC,EAAI93D,EAER,GACI8mB,EAAS+wC,EAA4BC,GACjChxC,EACAsxC,EAAiBxyD,KAAK,CAClBpF,OAAQ,IAAI63D,QAAQP,GACpBQ,cAAeR,EAAES,cAAgB,OAIrCH,EAAiBxyD,KAAK,CAClBpF,OAAQ,IAAI63D,QAAQP,GACpBQ,cAAe,OAGvBR,EAAIhxC,QACCgxC,EACb,CACA,OAAOM,EAAiB50D,MAAM,EAClC,CAIA,uDAAOg1D,CAAiDC,EAAaC,GACjE,IAAKA,GAAkBD,IAAgBC,EACnC,MAAO,CACHt/B,IAAK,EACLnrB,KAAM,GAGd,IAAImrB,EAAM,EAAGnrB,EAAO,EACpB,MAAM0qD,EAAchuD,KAAKwtD,yBAAyBM,GAClD,IAAK,MAAMG,KAAiBD,EAAa,CACrC,MAAME,EAAgBD,EAAcp4D,OAAOs4D,QAG3C,GAFA1/B,GAAOy/B,GAAet9B,SAAW,EACjCttB,GAAQ4qD,GAAev9B,SAAW,EAC9Bu9B,IAAkBH,EAClB,MAEJ,IAAKE,EAAcN,cACf,MAEJ,MAAMS,EAAeH,EAAcN,cAAc3nB,wBACjDvX,GAAO2/B,EAAa3/B,IACpBnrB,GAAQ8qD,EAAa9qD,IACzB,CACA,MAAO,CACHmrB,IAAKA,EACLnrB,KAAMA,EAEd,E,eC5EG,MAAM+qD,EACT,WAAAtuD,CAAY1K,EAAc4G,GACtB+D,KAAKsuD,UAAY/mC,KAAKC,MACtBxnB,KAAK8gB,aAAe7kB,EACpB+D,KAAKuuD,WAA0B,IAAbtyD,EAAEuyD,OACpBxuD,KAAKyuD,aAA4B,IAAbxyD,EAAEuyD,OACtBxuD,KAAK0uD,YAA2B,IAAbzyD,EAAEuyD,OACrBxuD,KAAK4hB,QAAU3lB,EAAE2lB,QACjB5hB,KAAK3C,OAASpB,EAAEoB,OAChB2C,KAAKs9B,OAASrhC,EAAEqhC,QAAU,EACX,aAAXrhC,EAAEsgC,OACFv8B,KAAKs9B,OAAS,GAElBt9B,KAAKi7B,QAAUh/B,EAAEg/B,QACjBj7B,KAAKk7B,SAAWj/B,EAAEi/B,SAClBl7B,KAAKm7B,OAASl/B,EAAEk/B,OAChBn7B,KAAKo7B,QAAUn/B,EAAEm/B,QACM,iBAAZn/B,EAAE0yD,OACT3uD,KAAKmyB,KAAOl2B,EAAE0yD,MACd3uD,KAAKoyB,KAAOn2B,EAAE2yD,QAId5uD,KAAKmyB,KAAOl2B,EAAE40B,QAAU7wB,KAAK3C,OAAOsW,cAAc0G,KAAKqU,WAAa1uB,KAAK3C,OAAOsW,cAAcuG,gBAAgBwU,WAC9G1uB,KAAKoyB,KAAOn2B,EAAE60B,QAAU9wB,KAAK3C,OAAOsW,cAAc0G,KAAKmU,UAAYxuB,KAAK3C,OAAOsW,cAAcuG,gBAAgBsU,WAGjH,MAAMqgC,EAAgBtB,EAAYM,iDAAiDx4D,EAAc4G,EAAE6yD,MACnG9uD,KAAKmyB,MAAQ08B,EAAcvrD,KAC3BtD,KAAKoyB,MAAQy8B,EAAcpgC,GAC/B,CACA,cAAA5M,GACI7hB,KAAK8gB,aAAae,gBACtB,CACA,eAAAsa,GACIn8B,KAAK8gB,aAAaqb,iBACtB,EAEG,MAAM4yB,EACT,WAAAhvD,CAAY9D,EAAG+yD,EAAS,EAAGC,EAAS,GAChCjvD,KAAK8gB,aAAe7kB,GAAK,KACzB+D,KAAK3C,OAASpB,EAAKA,EAAEoB,QAAUpB,EAAEizD,YAAcjzD,EAAEkzD,WAAc,KAC/DnvD,KAAKivD,OAASA,EACdjvD,KAAKgvD,OAASA,EACd,IAAII,GAAkB,EACtB,GAAI5qD,EAAA,GAAkB,CAGlB,MAAM6qD,EAAqBpvC,UAAUosC,UAAU79C,MAAM,iBAErD4gD,GAD2BC,EAAqB/vC,SAAS+vC,EAAmB,IAAM,MAC1C,GAC5C,CACA,GAAIpzD,EAAG,CAEH,MAAMqzD,EAAKrzD,EACLszD,EAAKtzD,EACLuzD,EAAmBvzD,EAAE6yD,MAAMU,kBAAoB,EAErD,QAA8B,IAAnBF,EAAGG,YAGNzvD,KAAKivD,OAFLG,EAEcE,EAAGG,aAAe,IAAMD,GAGxBF,EAAGG,YAAc,SAGlC,QAAgC,IAArBF,EAAGG,eAAiCH,EAAGI,OAASJ,EAAGG,cAC/D1vD,KAAKivD,QAAUM,EAAGjyB,OAAS,OAE1B,GAAe,UAAXrhC,EAAEsgC,KAAkB,CAGzB,MAAMqzB,EAAK3zD,EACP2zD,EAAGC,YAAcD,EAAGE,eAEhBtrD,EAAA,KAAsBD,EAAA,GACtBvE,KAAKivD,QAAUhzD,EAAEgzD,OAAS,EAG1BjvD,KAAKivD,QAAUhzD,EAAEgzD,OAIrBjvD,KAAKivD,QAAUhzD,EAAEgzD,OAAS,EAElC,CAEA,QAA8B,IAAnBK,EAAGS,YACNvrD,EAAA,IAAoBD,EAAA,GACpBvE,KAAKgvD,QAAWM,EAAGS,YAAc,IAIjC/vD,KAAKgvD,OAFAI,EAESE,EAAGS,aAAe,IAAMP,GAGxBF,EAAGS,YAAc,SAGlC,QAAkC,IAAvBR,EAAGS,iBAAmCT,EAAGI,OAASJ,EAAGS,gBACjEhwD,KAAKgvD,QAAU/yD,EAAEqhC,OAAS,OAEzB,GAAe,UAAXrhC,EAAEsgC,KAAkB,CAGzB,MAAMqzB,EAAK3zD,EACP2zD,EAAGC,YAAcD,EAAGE,eAEhBtrD,EAAA,KAAsBD,EAAA,GACtBvE,KAAKgvD,QAAU/yD,EAAE+yD,OAAS,EAG1BhvD,KAAKgvD,QAAU/yD,EAAE+yD,OAIrBhvD,KAAKgvD,QAAU/yD,EAAE+yD,OAAS,EAElC,CAEoB,IAAhBhvD,KAAKivD,QAAgC,IAAhBjvD,KAAKgvD,QAAgB/yD,EAAEg0D,aAGxCjwD,KAAKivD,OAFLG,EAEcnzD,EAAEg0D,YAAc,IAAMT,GAGtBvzD,EAAEg0D,WAAa,IAGzC,CACJ,CACA,cAAApuC,GACI7hB,KAAK8gB,cAAce,gBACvB,CACA,eAAAsa,GACIn8B,KAAK8gB,cAAcqb,iBACvB,E,2DC3IG,MAAM+zB,EACT,WAAAnwD,CAAYyH,EAAaC,EAAWitB,EAAW6H,GAC3Cv8B,KAAKwH,YAAcA,EACnBxH,KAAKyH,UAAYA,EACjBzH,KAAK00B,UAAYA,EACjB10B,KAAKu8B,KAAOA,EACZv8B,KAAKmwD,0BAAuBx0D,CAChC,CACA,cAAOy0D,CAAQl3D,EAAGC,GACd,OAAQD,EAAEsO,cAAgBrO,EAAEqO,aACrBtO,EAAEuO,YAActO,EAAEsO,WAClBvO,EAAEw7B,YAAcv7B,EAAEu7B,WAClBx7B,EAAEqjC,OAASpjC,EAAEojC,IACxB,CACA,gBAAO4kB,CAAUjoD,EAAGC,GAChB,MAAMkhD,EAAOnhD,EAAET,OAEf,GAAI4hD,IADSlhD,EAAEV,OAEX,OAAO,EAEX,IAAK,IAAIW,EAAI,EAAGA,EAAIihD,EAAMjhD,IACtB,IAAK82D,EAAeE,QAAQl3D,EAAEE,GAAID,EAAEC,IAChC,OAAO,EAGf,OAAO,CACX,CACA,qBAAOi3D,CAAe13D,EAAKiK,EAAaE,GACpC,GAAmB,IAAfnK,EAAIF,OACJ,OAAOE,EAEX,MAAM6O,EAAc5E,EAAc,EAC5B6E,EAAY3E,EAAY,EACxBwtD,EAAaxtD,EAAYF,EACzB0I,EAAI,GACV,IAAIilD,EAAU,EACd,IAAK,MAAMC,KAAO73D,EACV63D,EAAI/oD,WAAaD,GAAegpD,EAAIhpD,aAAeC,IAGvD6D,EAAEilD,KAAa,IAAIL,EAAez1D,KAAKkE,IAAI,EAAG6xD,EAAIhpD,YAAcA,EAAc,GAAI/M,KAAKmE,IAAI0xD,EAAa,EAAGE,EAAI/oD,UAAYD,EAAc,GAAIgpD,EAAI97B,UAAW87B,EAAIj0B,OAEpK,OAAOjxB,CACX,CACA,aAAOtP,CAAO8kD,EAAiBr6C,EAAYgqD,EAAenwB,GACtD,GAA+B,IAA3BwgB,EAAgBroD,OAChB,MAAO,GAEX,MAAM0C,EAAS,GACf,IAAIiI,EAAY,EAChB,IAAK,IAAIhK,EAAI,EAAGC,EAAMynD,EAAgBroD,OAAQW,EAAIC,EAAKD,IAAK,CACxD,MAAMmrC,EAAIuc,EAAgB1nD,GACpB6D,EAAQsnC,EAAEtnC,MAChB,GAAIA,EAAMqK,cAAgBb,GAAcxJ,EAAMsK,gBAAkBd,EAE5D,SAEJ,GAAIxJ,EAAMyzD,YAAyB,IAAXnsB,EAAEhI,MAA4D,IAAXgI,EAAEhI,MAEzE,SAEJ,MAAM/0B,EAAevK,EAAMsK,kBAAoBd,EAAaxJ,EAAMuK,YAAcipD,EAC1EhpD,EAAaxK,EAAMqK,gBAAkBb,EAAaxJ,EAAMwK,UAAY64B,EAC1EnlC,EAAOiI,KAAe,IAAI8sD,EAAe1oD,EAAaC,EAAW88B,EAAEosB,gBAAiBpsB,EAAEhI,KAC1F,CACA,OAAOphC,CACX,CACA,mBAAOy1D,CAAa13D,EAAGC,GACnB,MAAM03D,EAAQ,CAAC,EAAG,EAAG,EAAG,GACxB,OAAOA,EAAM33D,GAAK23D,EAAM13D,EAC5B,CACA,cAAOmB,CAAQpB,EAAGC,GACd,GAAID,EAAEsO,cAAgBrO,EAAEqO,YACpB,OAAOtO,EAAEsO,YAAcrO,EAAEqO,YAE7B,GAAItO,EAAEuO,YAActO,EAAEsO,UAClB,OAAOvO,EAAEuO,UAAYtO,EAAEsO,UAE3B,MAAMqpD,EAAUZ,EAAeU,aAAa13D,EAAEqjC,KAAMpjC,EAAEojC,MACtD,OAAgB,IAAZu0B,EACOA,EAEP53D,EAAEw7B,YAAcv7B,EAAEu7B,UACXx7B,EAAEw7B,UAAYv7B,EAAEu7B,WAAa,EAAI,EAErC,CACX,EAEG,MAAMq8B,EACT,WAAAhxD,CAAY6C,EAAaE,EAAW4xB,EAAW2rB,GAC3CrgD,KAAK4C,YAAcA,EACnB5C,KAAK8C,UAAYA,EACjB9C,KAAK00B,UAAYA,EACjB10B,KAAKqgD,SAAWA,CACpB,EAEJ,MAAM2Q,EACF,WAAAjxD,GACIC,KAAKixD,YAAc,GACnBjxD,KAAKkxD,WAAa,GAClBlxD,KAAKqgD,SAAW,GAChBrgD,KAAKU,MAAQ,CACjB,CACA,gBAAOywD,CAAU9Q,GACb,IAAIllD,EAAS,EACb,IAAK,IAAI/B,EAAI,EAAGC,EAAMgnD,EAAS5nD,OAAQW,EAAIC,EAAKD,IAC5C+B,GAAUklD,EAASjnD,GAEvB,OAAO+B,CACX,CACA,gBAAAi2D,CAAiBC,EAAeC,EAAiBn2D,GAC7C,KAAO6E,KAAKU,MAAQ,GAAKV,KAAKixD,YAAY,GAAKI,GAAe,CAC1D,IAAIj4D,EAAI,EAER,KAAOA,EAAI,EAAI4G,KAAKU,OAASV,KAAKixD,YAAY73D,KAAO4G,KAAKixD,YAAY73D,EAAI,IACtEA,IAGJ+B,EAAOF,KAAK,IAAI81D,EAAkBO,EAAiBtxD,KAAKixD,YAAY73D,GAAI4G,KAAKkxD,WAAW3hB,KAAK,KAAMyhB,EAAMG,UAAUnxD,KAAKqgD,YACxHiR,EAAkBtxD,KAAKixD,YAAY73D,GAAK,EAExC4G,KAAKixD,YAAYpzD,OAAO,EAAGzE,EAAI,GAC/B4G,KAAKkxD,WAAWrzD,OAAO,EAAGzE,EAAI,GAC9B4G,KAAKqgD,SAASxiD,OAAO,EAAGzE,EAAI,GAC5B4G,KAAKU,OAAUtH,EAAI,CACvB,CAKA,OAJI4G,KAAKU,MAAQ,GAAK4wD,EAAkBD,IACpCl2D,EAAOF,KAAK,IAAI81D,EAAkBO,EAAiBD,EAAgB,EAAGrxD,KAAKkxD,WAAW3hB,KAAK,KAAMyhB,EAAMG,UAAUnxD,KAAKqgD,YACtHiR,EAAkBD,GAEfC,CACX,CACA,MAAAC,CAAOC,EAAY98B,EAAW2rB,GAC1B,GAAmB,IAAfrgD,KAAKU,OAAeV,KAAKixD,YAAYjxD,KAAKU,MAAQ,IAAM8wD,EAExDxxD,KAAKixD,YAAYh2D,KAAKu2D,GACtBxxD,KAAKkxD,WAAWj2D,KAAKy5B,GACrB10B,KAAKqgD,SAASplD,KAAKolD,QAInB,IAAK,IAAIjnD,EAAI,EAAGA,EAAI4G,KAAKU,MAAOtH,IAC5B,GAAI4G,KAAKixD,YAAY73D,IAAMo4D,EAAY,CACnCxxD,KAAKixD,YAAYpzD,OAAOzE,EAAG,EAAGo4D,GAC9BxxD,KAAKkxD,WAAWrzD,OAAOzE,EAAG,EAAGs7B,GAC7B10B,KAAKqgD,SAASxiD,OAAOzE,EAAG,EAAGinD,GAC3B,KACJ,CAGRrgD,KAAKU,OAET,EAEG,MAAM+wD,EAIT,gBAAOlL,CAAUl9C,EAAay3C,GAC1B,GAA+B,IAA3BA,EAAgBroD,OAChB,MAAO,GAEX,MAAM0C,EAAS,GACT8wB,EAAQ,IAAI+kC,EAClB,IAAIM,EAAkB,EACtB,IAAK,IAAIl4D,EAAI,EAAGC,EAAMynD,EAAgBroD,OAAQW,EAAIC,EAAKD,IAAK,CACxD,MAAMmrC,EAAIuc,EAAgB1nD,GAC1B,IAAIoO,EAAc+8B,EAAE/8B,YAChBC,EAAY88B,EAAE98B,UAClB,MAAMitB,EAAY6P,EAAE7P,UACd2rB,EAAuB,IAAX9b,EAAEhI,KACd,EACW,IAAXgI,EAAEhI,KACE,EACA,EAEV,GAAI/0B,EAAc,EAAG,CACjB,MAAMkqD,EAAiBroD,EAAYspC,WAAWnrC,EAAc,GACxD,KAAwBkqD,IACxBlqD,GAER,CACA,GAAIC,EAAY,EAAG,CACf,MAAMiqD,EAAiBroD,EAAYspC,WAAWlrC,EAAY,GACtD,KAAwBiqD,IACxBjqD,GAER,CACA,MAAMkqD,EAAqBnqD,EAAc,EACnCoqD,EAAmBnqD,EAAY,EACrC6pD,EAAkBrlC,EAAMmlC,iBAAiBO,EAAoBL,EAAiBn2D,GAC1D,IAAhB8wB,EAAMvrB,QACN4wD,EAAkBK,GAEtB1lC,EAAMslC,OAAOK,EAAkBl9B,EAAW2rB,EAC9C,CAEA,OADAp0B,EAAMmlC,iBAAiB,WAAmDE,EAAiBn2D,GACpFA,CACX,E,uFCxLG,SAAS02D,EAAG92D,EAAO+2D,GACtB,IAAK/2D,EACD,MAAM,IAAInC,MAAMk5D,EAAU,qBAAqBA,KAAa,mBAEpE,CACO,SAASC,EAAYh3D,EAAO+2D,EAAU,eACzC,MAAM,IAAIl5D,MAAMk5D,EACpB,CAIO,SAASE,EAAWC,GAClBA,IACD,QAAkB,IAAI,KAAmB,yBAEjD,CAIO,SAASC,EAASD,GAChBA,MAIDA,KACA,QAAkB,IAAI,KAAmB,qBAEjD,CACO,SAASE,EAAmB32D,EAAO4E,GACtC,IAAIhH,EAAI,EACR,KAAOA,EAAIoC,EAAM/C,OAAS,GAAG,CAGzB,IAAK2H,EAFK5E,EAAMpC,GACNoC,EAAMpC,EAAI,IAEhB,OAAO,EAEXA,GACJ,CACA,OAAO,CACX,C,oJC/CO,MAAMg5D,GAAa,QAAc,cAAe,CAAEn8D,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,aAAc,2BACnJi8D,GAAiB,QAAc,kBAAmB,KAAkB,KAAa,iBAAkB,oCACnGC,GAAiB,QAAc,kBAAmB,KAAkB,KAAa,iBAAkB,oCACnGC,GAA0B,QAAc,2BAA4B,KAA+B,KAAa,0BAA2B,yDAC3IC,GAA0B,QAAc,2BAA4B,KAA+B,KAAa,0BAA2B,yDAC3IC,GAAsB,QAAc,uBAAwB,CAAEx8D,KAAM,KAAMC,MAAO,KAAMC,OAAQ,KAAsBC,QAAS,MAAwB,KAAa,sBAAuB,qDAC1Ls8D,GAA0B,QAAc,2BAA4B,CAAEz8D,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAgBC,QAAS,MAAkB,KAAa,0BAA2B,4C,kDCZ1M,MAAMu8D,UAAyB,KAClC,WAAA5yD,GACIyM,QACAxM,KAAK4yD,eAAgB,CACzB,CACA,YAAAC,GACI,OAAO7yD,KAAK4yD,aAChB,CACA,iBAAAE,GACI9yD,KAAK4yD,eAAgB,CACzB,CACA,eAAAG,GACI/yD,KAAK4yD,eAAgB,CACzB,CACA,WAAAI,GACIhzD,KAAK4yD,eAAgB,CACzB,CAEA,kBAAAK,CAAmBh3D,GACf,OAAO,CACX,CACA,gBAAAi3D,CAAiBj3D,GACb,OAAO,CACX,CACA,sBAAAk3D,CAAuBl3D,GACnB,OAAO,CACX,CACA,oBAAAm3D,CAAqBn3D,GACjB,OAAO,CACX,CACA,oBAAAmK,CAAqBnK,GACjB,OAAO,CACX,CACA,SAAAo3D,CAAUp3D,GACN,OAAO,CACX,CACA,cAAAq3D,CAAer3D,GACX,OAAO,CACX,CACA,8BAAAs3D,CAA+Bt3D,GAC3B,OAAO,CACX,CACA,oBAAAu3D,CAAqBv3D,GACjB,OAAO,CACX,CACA,cAAAw3D,CAAex3D,GACX,OAAO,CACX,CACA,cAAAy3D,CAAez3D,GACX,OAAO,CACX,CACA,eAAA03D,CAAgB13D,GACZ,OAAO,CACX,CACA,oBAAA23D,CAAqB33D,GACjB,OAAO,CACX,CACA,eAAA43D,CAAgB53D,GACZ,OAAO,CACX,CACA,cAAA63D,CAAe73D,GACX,OAAO,CACX,CACA,eAAAkK,CAAgBlK,GACZ,OAAO,CACX,CACA,qBAAA83D,CAAsB93D,GAClB,OAAO,CACX,CACA,cAAA+3D,CAAe/3D,GACX,OAAO,CACX,CAEA,YAAAg4D,CAAaC,GACT,IAAIrB,GAAe,EACnB,IAAK,IAAIz5D,EAAI,EAAGC,EAAM66D,EAAOz7D,OAAQW,EAAIC,EAAKD,IAAK,CAC/C,MAAM6C,EAAIi4D,EAAO96D,GACjB,OAAQ6C,EAAEsgC,MACN,KAAK,EACGv8B,KAAKizD,mBAAmBh3D,KACxB42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKkzD,iBAAiBj3D,KACtB42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKmzD,uBAAuBl3D,KAC5B42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKozD,qBAAqBn3D,KAC1B42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKoG,qBAAqBnK,KAC1B42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKqzD,UAAUp3D,KACf42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKszD,eAAer3D,KACpB42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKuzD,+BAA+Bt3D,KACpC42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKwzD,qBAAqBv3D,KAC1B42D,GAAe,GAEnB,MACJ,KAAK,EACG7yD,KAAKyzD,eAAex3D,KACpB42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAK0zD,eAAez3D,KACpB42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAK2zD,gBAAgB13D,KACrB42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAK4zD,qBAAqB33D,KAC1B42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAK6zD,gBAAgB53D,KACrB42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAKmG,gBAAgBlK,KACrB42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAK8zD,eAAe73D,KACpB42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAK+zD,sBAAsB93D,KAC3B42D,GAAe,GAEnB,MACJ,KAAK,GACG7yD,KAAKg0D,eAAe/3D,KACpB42D,GAAe,GAEnB,MACJ,QACIroD,QAAQ2pD,KAAK,iCACb3pD,QAAQ2pD,KAAKl4D,GAEzB,CACI42D,IACA7yD,KAAK4yD,eAAgB,EAE7B,E,y0BCnKG,MAAM,eAAEwB,EAAc,UAAEC,EAAS,YAAEC,EAAW,WAAEC,EAAU,gBAAEC,EAAe,YAAEvI,EAAW,cAAEwI,EAAa,UAAEC,EAAS,oBAAEC,EAAmB,uBAAEC,EAAsB,sBAAEC,GAA0B,WAC9L,MAAMC,EAAU,IAAI3gC,KACpB,OAAiB,IAAY,GAC7B,MAAM4gC,EAAyB,CAAEl/D,OAAQ,IAAYm/D,YAAa,IAAI,MACtEF,EAAQnlD,IAAI,IAAWna,eAAgBu/D,GACvC,MAAMJ,EAAsB,IAAI,KAC1BE,EAAwB,IAAI,KAC5BD,EAAyB,IAAI,KAKnC,MAAO,CACHD,oBAAqBA,EAAoB9pC,MACzC+pC,uBAAwBA,EAAuB/pC,MAC/CgqC,sBAAuBA,EAAsBhqC,MAC7C,cAAAupC,CAAev+D,GACX,GAAIi/D,EAAQj4D,IAAIhH,EAAOL,gBACnB,OAAO,KAAWy/D,KAEtB,MAAMD,EAAc,IAAI,KAClBE,EAAmB,CACrBr/D,SACAm/D,YAAaA,EAAYl4D,IAAI,IAAI,OAWrC,OATAg4D,EAAQnlD,IAAI9Z,EAAOL,eAAgB0/D,GACnCF,EAAYl4D,KAAI,OAAa,KACzBg4D,EAAQnoC,OAAO92B,EAAOL,gBACtBq/D,EAAsB7pC,KAAKn1B,MAE/Bm/D,EAAYl4D,IAAIq4D,EAAsBt/D,EAAQu/D,GAAUC,cAAe,KACnET,EAAuB5pC,KAAKn1B,MAEhC8+D,EAAoB3pC,KAAKkqC,GAClBF,CACX,EACAT,WAAU,IACCO,EAAQ7pC,SAEnBupC,gBAAe,IACJM,EAAQQ,KAEnBrJ,YAAY52D,GACDA,EAAaG,eAExBk/D,UAAUa,GACCT,EAAQj4D,IAAI04D,GAEvBd,cAxCJ,SAAuBc,EAAUC,GAE7B,OADmC,iBAAbD,EAAwBT,EAAQn/D,IAAI4/D,QAAY55D,KACpD65D,EAAiBT,OAAyBp5D,EAChE,EAsCI,SAAA04D,CAAUp4D,GACN,MAAMw5D,EAAgBx5D,EACtB,GAAIw5D,GAAe9hD,eAAe+hD,YAC9B,OAAOD,EAAc9hD,cAAc+hD,YAAY7/D,OAEnD,MAAM8/D,EAAiB15D,EACvB,OAAI05D,GAAgB7G,KACT6G,EAAe7G,KAAKj5D,OAExB,GACX,EACAy+D,YAAYr4D,GAEDo4D,EADep4D,GACUoG,SAG3C,CAjEiM,GAmE3L,SAASuzD,EAAUz8C,GACtB,KAAOA,EAAKhV,YACRgV,EAAKhV,WAAWkP,QAExB,CACA,MAAMwiD,EACF,WAAA91D,CAAYoZ,EAAMojB,EAAMnX,EAASvgB,GAC7B7E,KAAK81D,MAAQ38C,EACbnZ,KAAK+1D,MAAQx5B,EACbv8B,KAAKg2D,SAAW5wC,EAChBplB,KAAK6F,SAAYhB,IAAW,EAC5B7E,KAAK81D,MAAM1J,iBAAiBpsD,KAAK+1D,MAAO/1D,KAAKg2D,SAAUh2D,KAAK6F,SAChE,CACA,OAAAmZ,GACShf,KAAKg2D,WAIVh2D,KAAK81D,MAAMG,oBAAoBj2D,KAAK+1D,MAAO/1D,KAAKg2D,SAAUh2D,KAAK6F,UAE/D7F,KAAK81D,MAAQ,KACb91D,KAAKg2D,SAAW,KACpB,EAEG,SAASb,EAAsBh8C,EAAMojB,EAAMnX,EAAS8wC,GACvD,OAAO,IAAIL,EAAY18C,EAAMojB,EAAMnX,EAAS8wC,EAChD,CACA,SAASC,EAA0B9gE,EAAc+vB,GAC7C,OAAO,SAAUnpB,GACb,OAAOmpB,EAAQ,IAAI,IAAmB/vB,EAAc4G,GACxD,CACJ,CAMO,MAAMm6D,EAAgC,SAAuCj9C,EAAMojB,EAAMnX,EAASixC,GACrG,IAAIC,EAAclxC,EAOlB,MANa,UAATmX,GAA6B,cAATA,GAAiC,gBAATA,EAC5C+5B,EAAcH,EAA0B9B,EAAUl7C,GAAOiM,GAE3C,YAATmX,GAA+B,aAATA,GAAgC,UAATA,IAClD+5B,EAXR,SAAsClxC,GAClC,OAAO,SAAUnpB,GACb,OAAOmpB,EAAQ,IAAI,IAAsBnpB,GAC7C,CACJ,CAOsBs6D,CAA6BnxC,IAExC+vC,EAAsBh8C,EAAMojB,EAAM+5B,EAAaD,EAC1D,EACaG,EAAgD,SAAuCr9C,EAAMiM,EAASixC,GAE/G,OAMG,SAA+Cl9C,EAAMiM,EAASixC,GACjE,OAAOlB,EAAsBh8C,EAAM,MAAkB,IAAgBmH,cAAgB80C,GAAUtiC,aAAesiC,GAAUxiC,WAAYxN,EAASixC,EACjJ,CARWI,CAAsCt9C,EADzBg9C,EAA0B9B,EAAUl7C,GAAOiM,GACCixC,EACpE,EA8BO,SAASK,EAAkBrhE,EAAc6sB,EAAUuC,GACtD,OAAO,QAAapvB,EAAc6sB,EAAUuC,EAChD,CAKO,MAAMkyC,UAAwB,KACjC,WAAA52D,CAAY1K,EAAcwyB,GACtBrb,MAAMnX,EAAcwyB,EACxB,EAQG,IAAI+uC,EAOAC,EACJ,MAAMC,UAA4B,KAKrC,WAAA/2D,CAAYoZ,GACR3M,QACAxM,KAAK+2D,cAAgB59C,GAAQk7C,EAAUl7C,EAC3C,CACA,YAAA+M,CAAaJ,EAAQM,EAAU/wB,GAC3B,OAAOmX,MAAM0Z,aAAaJ,EAAQM,EAAU/wB,GAAgB2K,KAAK+2D,cACrE,EAEJ,MAAMC,EACF,WAAAj3D,CAAY+lB,EAAQmxC,EAAW,GAC3Bj3D,KAAKk3D,QAAUpxC,EACf9lB,KAAKi3D,SAAWA,EAChBj3D,KAAKm3D,WAAY,CACrB,CACA,OAAAn4C,GACIhf,KAAKm3D,WAAY,CACrB,CACA,OAAAC,GACI,IAAIp3D,KAAKm3D,UAGT,IACIn3D,KAAKk3D,SACT,CACA,MAAOj7D,IACH,QAAkBA,EACtB,CACJ,CAEA,WAAOX,CAAKpC,EAAGC,GACX,OAAOA,EAAE89D,SAAW/9D,EAAE+9D,QAC1B,EAgEG,SAAS5vB,EAAiBP,GAC7B,OAAOutB,EAAUvtB,GAAIO,iBAAiBP,EAAI,KAC9C,CACO,SAASuwB,EAAch8D,EAASi8D,GACnC,MAAMnwB,EAAWktB,EAAUh5D,GACrBk8D,EAAapwB,EAAS9kC,SAE5B,GAAIhH,IAAYk8D,EAAWl9C,KACvB,OAAO,IAAIm9C,EAAUn8D,EAAQo8D,YAAap8D,EAAQq8D,cAGtD,GAAI,MAAkBvwB,GAAUwwB,eAC5B,OAAO,IAAIH,EAAUrwB,EAASwwB,eAAep0D,MAAO4jC,EAASwwB,eAAe9oC,QAGhF,GAAIsY,GAAUywB,YAAczwB,EAAS0wB,YACjC,OAAO,IAAIL,EAAUrwB,EAASywB,WAAYzwB,EAAS0wB,aAGvD,GAAIN,EAAWl9C,MAAQk9C,EAAWl9C,KAAKo9C,aAAeF,EAAWl9C,KAAKq9C,aAClE,OAAO,IAAIF,EAAUD,EAAWl9C,KAAKo9C,YAAaF,EAAWl9C,KAAKq9C,cAGtE,GAAIH,EAAWr9C,iBAAmBq9C,EAAWr9C,gBAAgBu9C,aAAeF,EAAWr9C,gBAAgBw9C,aACnG,OAAO,IAAIF,EAAUD,EAAWr9C,gBAAgBu9C,YAAaF,EAAWr9C,gBAAgBw9C,cAE5F,GAAIJ,EACA,OAAOD,EAAcC,GAEzB,MAAM,IAAI1+D,MAAM,gDACpB,EA5FA,WAII,MAAMk/D,EAAa,IAAI3jC,IAIjB4jC,EAAgB,IAAI5jC,IAIpB6jC,EAAqB,IAAI7jC,IAIzB8jC,EAAyB,IAAI9jC,IAcnC0iC,EAA+B,CAACxhE,EAAcywB,EAAQmxC,EAAW,KAC7D,MAAMiB,EAAiBjM,EAAY52D,GAC7BqG,EAAO,IAAIs7D,EAAwBlxC,EAAQmxC,GACjD,IAAIkB,EAAYL,EAAWniE,IAAIuiE,GAU/B,OATKC,IACDA,EAAY,GACZL,EAAWnoD,IAAIuoD,EAAgBC,IAEnCA,EAAUl9D,KAAKS,GACVs8D,EAAmBriE,IAAIuiE,KACxBF,EAAmBroD,IAAIuoD,GAAgB,GACvC7iE,EAAa+iE,sBAAsB,IAxBd,CAACF,IAC1BF,EAAmBroD,IAAIuoD,GAAgB,GACvC,MAAMG,EAAeP,EAAWniE,IAAIuiE,IAAmB,GAIvD,IAHAH,EAAcpoD,IAAIuoD,EAAgBG,GAClCP,EAAWnoD,IAAIuoD,EAAgB,IAC/BD,EAAuBtoD,IAAIuoD,GAAgB,GACpCG,EAAa5/D,OAAS,GACzB4/D,EAAa/8D,KAAK07D,EAAwB17D,MAC9B+8D,EAAansC,QACrBkrC,UAERa,EAAuBtoD,IAAIuoD,GAAgB,IAaEI,CAAqBJ,KAE3Dx8D,GAEXk7D,EAA0C,CAACvhE,EAAcywB,EAAQmxC,KAC7D,MAAMiB,EAAiBjM,EAAY52D,GACnC,GAAI4iE,EAAuBtiE,IAAIuiE,GAAiB,CAC5C,MAAMx8D,EAAO,IAAIs7D,EAAwBlxC,EAAQmxC,GACjD,IAAIoB,EAAeN,EAAcpiE,IAAIuiE,GAMrC,OALKG,IACDA,EAAe,GACfN,EAAcpoD,IAAIuoD,EAAgBG,IAEtCA,EAAap9D,KAAKS,GACXA,CACX,CAEI,OAAOm7D,EAA6BxhE,EAAcywB,EAAQmxC,GAGrE,CA7DD,GA6FA,MAAMsB,EAGF,sBAAOC,CAAgBn9D,EAASN,GAC5B,OAAO09D,WAAW19D,IAAU,CAChC,CACA,mBAAO29D,CAAar9D,EAASs9D,EAAiBC,GAC1C,MAAMC,EAAgBxxB,EAAiBhsC,GACjCN,EAAQ89D,EAAgBA,EAAcvxB,iBAAiBqxB,GAAmB,IAChF,OAAOJ,EAAUC,gBAAgBn9D,EAASN,EAC9C,CACA,yBAAO+9D,CAAmBz9D,GACtB,OAAOk9D,EAAUG,aAAar9D,EAAS,oBAAqB,kBAChE,CACA,0BAAO09D,CAAoB19D,GACvB,OAAOk9D,EAAUG,aAAar9D,EAAS,qBAAsB,mBACjE,CACA,wBAAO29D,CAAkB39D,GACrB,OAAOk9D,EAAUG,aAAar9D,EAAS,mBAAoB,iBAC/D,CACA,2BAAO49D,CAAqB59D,GACxB,OAAOk9D,EAAUG,aAAar9D,EAAS,sBAAuB,oBAClE,CACA,qBAAO69D,CAAe79D,GAClB,OAAOk9D,EAAUG,aAAar9D,EAAS,eAAgB,cAC3D,CACA,sBAAO89D,CAAgB99D,GACnB,OAAOk9D,EAAUG,aAAar9D,EAAS,gBAAiB,eAC5D,CACA,oBAAO+9D,CAAc/9D,GACjB,OAAOk9D,EAAUG,aAAar9D,EAAS,cAAe,aAC1D,CACA,uBAAOg+D,CAAiBh+D,GACpB,OAAOk9D,EAAUG,aAAar9D,EAAS,iBAAkB,gBAC7D,CACA,oBAAOi+D,CAAcj+D,GACjB,OAAOk9D,EAAUG,aAAar9D,EAAS,cAAe,aAC1D,CACA,mBAAOk+D,CAAal+D,GAChB,OAAOk9D,EAAUG,aAAar9D,EAAS,aAAc,YACzD,CACA,qBAAOm+D,CAAen+D,GAClB,OAAOk9D,EAAUG,aAAar9D,EAAS,eAAgB,cAC3D,CACA,sBAAOo+D,CAAgBp+D,GACnB,OAAOk9D,EAAUG,aAAar9D,EAAS,gBAAiB,eAC5D,EAEG,MAAMm8D,SACAx3D,KAAKi1D,KAAO,IAAIuC,EAAU,EAAG,EAAI,CAC1C,WAAAz3D,CAAYwD,EAAOsrB,GACf7uB,KAAKuD,MAAQA,EACbvD,KAAK6uB,OAASA,CAClB,CACA,KAAKtrB,EAAQvD,KAAKuD,MAAOsrB,EAAS7uB,KAAK6uB,QACnC,OAAItrB,IAAUvD,KAAKuD,OAASsrB,IAAW7uB,KAAK6uB,OACjC,IAAI2oC,EAAUj0D,EAAOsrB,GAGrB7uB,IAEf,CACA,SAAO05D,CAAGr9D,GACN,MAAsB,iBAARA,GAA0C,iBAAfA,EAAIwyB,QAA4C,iBAAdxyB,EAAIkH,KACnF,CACA,WAAOo2D,CAAKt9D,GACR,OAAIA,aAAem7D,EACRn7D,EAGA,IAAIm7D,EAAUn7D,EAAIkH,MAAOlH,EAAIwyB,OAE5C,CACA,aAAO/1B,CAAOI,EAAGC,GACb,OAAID,IAAMC,MAGLD,IAAMC,IAGJD,EAAEqK,QAAUpK,EAAEoK,OAASrK,EAAE21B,SAAW11B,EAAE01B,MACjD,EAEG,SAAS+qC,EAAiBv+D,GAG7B,IAAIw+D,EAAex+D,EAAQw+D,aACvBprC,EAAMpzB,EAAQy+D,UACdx2D,EAAOjI,EAAQ0+D,WACnB,KAA0C,QAAlC1+D,EAAUA,EAAQ2gB,aACnB3gB,IAAYA,EAAQsY,cAAc0G,MAClChf,IAAYA,EAAQsY,cAAcuG,iBAAiB,CACtDuU,GAAOpzB,EAAQmzB,UACf,MAAM9F,EAAIsxC,EAAa3+D,GAAW,KAAOgsC,EAAiBhsC,GACtDqtB,IACAplB,GAAwB,QAAhBolB,EAAEuxC,UAAsB5+D,EAAQqzB,YAAcrzB,EAAQqzB,YAE9DrzB,IAAYw+D,IACZv2D,GAAQi1D,EAAUO,mBAAmBz9D,GACrCozB,GAAO8pC,EAAUS,kBAAkB39D,GACnCozB,GAAOpzB,EAAQy+D,UACfx2D,GAAQjI,EAAQ0+D,WAChBF,EAAex+D,EAAQw+D,aAE/B,CACA,MAAO,CACHv2D,KAAMA,EACNmrB,IAAKA,EAEb,CACO,SAAS6mC,EAAKj6D,EAASkI,EAAOsrB,GACZ,iBAAVtrB,IACPlI,EAAQw8B,MAAMt0B,MAAQ,GAAGA,OAEP,iBAAXsrB,IACPxzB,EAAQw8B,MAAMhJ,OAAS,GAAGA,MAElC,CAIO,SAASqrC,EAAuBp2D,GACnC,MAAMq2D,EAAKr2D,EAAQkiC,wBACbnwC,EAASw+D,EAAUvwD,GACzB,MAAO,CACHR,KAAM62D,EAAG72D,KAAOzN,EAAO86B,QACvBlC,IAAK0rC,EAAG1rC,IAAM54B,EAAO+6B,QACrBrtB,MAAO42D,EAAG52D,MACVsrB,OAAQsrC,EAAGtrC,OAEnB,CAIO,SAASurC,EAAoBt2D,GAChC,IAAIu2D,EAAcv2D,EACdw2D,EAAO,EACX,EAAG,CACC,MAAMC,EAAmBlzB,EAAiBgzB,GAAaC,KACnDC,SAAoF,MAArBA,IAC/DD,GAAQC,GAEZF,EAAcA,EAAY16C,aAC9B,OAAyB,OAAhB06C,GAAwBA,IAAgBA,EAAY1mD,cAAcuG,iBAC3E,OAAOogD,CACX,CAGO,SAASE,EAAcn/D,GAC1B,MAAMo/D,EAASlC,EAAUe,cAAcj+D,GAAWk9D,EAAUiB,eAAen+D,GAC3E,OAAOA,EAAQ+O,YAAcqwD,CACjC,CACO,SAASC,EAAgBr/D,GAC5B,MAAMs/D,EAASpC,EAAUO,mBAAmBz9D,GAAWk9D,EAAUQ,oBAAoB19D,GAC/Eu/D,EAAUrC,EAAUW,eAAe79D,GAAWk9D,EAAUY,gBAAgB99D,GAC9E,OAAOA,EAAQ+O,YAAcuwD,EAASC,CAC1C,CAGO,SAASC,EAAiBx/D,GAC7B,MAAMs/D,EAASpC,EAAUS,kBAAkB39D,GAAWk9D,EAAUU,qBAAqB59D,GAC/Eu/D,EAAUrC,EAAUa,cAAc/9D,GAAWk9D,EAAUc,iBAAiBh+D,GAC9E,OAAOA,EAAQw2B,aAAe8oC,EAASC,CAC3C,CAGO,SAASE,EAAez/D,GAC3B,MAAMo/D,EAASlC,EAAUgB,aAAal+D,GAAWk9D,EAAUkB,gBAAgBp+D,GAC3E,OAAOA,EAAQw2B,aAAe4oC,CAClC,CAEO,SAASM,EAAWC,EAAWC,GAClC,OAAO5+C,QAAQ4+C,GAAcC,SAASF,GAC1C,CAsBO,SAASG,EAAmBhiD,EAAMiiD,EAAOC,GAC5C,QAtBG,SAA6BliD,EAAMiiD,EAAOC,GAC7C,KAAOliD,GAAQA,EAAK9G,WAAa8G,EAAKuG,cAAc,CAChD,GAAIvG,EAAKugB,UAAUwhC,SAASE,GACxB,OAAOjiD,EAEX,GAAIkiD,EACA,GAAiC,iBAAtBA,GACP,GAAIliD,EAAKugB,UAAUwhC,SAASG,GACxB,OAAO,UAIX,GAAIliD,IAASkiD,EACT,OAAO,KAInBliD,EAAOA,EAAK6C,UAChB,CACA,OAAO,IACX,CAEas/C,CAAoBniD,EAAMiiD,EAAOC,EAC9C,CACO,SAASrB,EAAa7gD,GACzB,OAAQA,KAAUA,EAAKw2B,QAAUx2B,EAAKoiD,IAC1C,CACO,SAASC,GAAc13D,GAC1B,QAAS23D,GAAc33D,EAC3B,CACO,SAAS23D,GAAc33D,GAC1B,KAAOA,EAAQkY,YAAY,CACvB,GAAIlY,IAAYA,EAAQ6P,eAAe0G,KAEnC,OAAO,KAEXvW,EAAUA,EAAQkY,UACtB,CACA,OAAOg+C,EAAal2D,GAAWA,EAAU,IAC7C,CAMO,SAAS43D,KACZ,IAAIvgE,EAASwgE,KAAoBC,cACjC,KAAOzgE,GAAQyrC,YACXzrC,EAASA,EAAOyrC,WAAWg1B,cAE/B,OAAOzgE,CACX,CAMO,SAAS0gE,GAAgBxgE,GAC5B,OAAOqgE,OAAuBrgE,CAClC,CAKO,SAASygE,GAA0BC,GACtC,OAAOhB,EAAWW,KAAoBK,EAC1C,CAMO,SAASJ,KACZ,OAAInH,KAAqB,EACd,IAAWnyD,SAEJ/F,MAAMa,KAAKo3D,KAActzD,IAAI,EAAGpL,YAAaA,EAAOwM,UACrD25D,KAAKniD,GAAOA,EAAIoiD,aAAe,IAAW55D,QAC/D,CAMO,SAAS65D,KACZ,MAAM75D,EAAWs5D,KACjB,OAAQt5D,EAASqzD,aAAa7/D,QAAU,GAC5C,CACA,MAAMsmE,GAAoB,IAAIhoC,IAIvB,SAASioC,KACZ,OAAO,IAAIC,EACf,CACA,MAAMA,GACF,WAAAt8D,GACIC,KAAKs8D,iBAAmB,GACxBt8D,KAAKu8D,iBAAc5gE,CACvB,CACA,QAAA6gE,CAASC,GACDA,IAAaz8D,KAAKs8D,mBAGtBt8D,KAAKs8D,iBAAmBG,EACnBz8D,KAAKu8D,YAINv8D,KAAKu8D,YAAYh1B,UAAYk1B,EAH7Bz8D,KAAKu8D,YAAcG,GAAiB,IAAWr6D,SAASs6D,KAAOjqB,GAAMA,EAAEnL,UAAYk1B,GAK3F,CACA,OAAAz9C,GACQhf,KAAKu8D,cACLv8D,KAAKu8D,YAAYlpD,SACjBrT,KAAKu8D,iBAAc5gE,EAE3B,EAEG,SAAS+gE,GAAiBE,EAAY,IAAWv6D,SAASs6D,KAAME,EAAcC,GACjF,MAAMjlC,EAAQx1B,SAASqR,cAAc,SAUrC,GATAmkB,EAAM0E,KAAO,WACb1E,EAAMklC,MAAQ,SACdF,IAAehlC,GACf+kC,EAAU/+C,YAAYga,GAClBilC,GACAA,EAAgBhgE,KAAI,OAAa,IAAM+6B,EAAMxkB,WAI7CupD,IAAc,IAAWv6D,SAASs6D,KAAM,CACxC,MAAMK,EAAyB,IAAIpgE,IACnCu/D,GAAkBxsD,IAAIkoB,EAAOmlC,GAC7B,IAAK,MAAQnnE,OAAQR,EAAY,YAAE2/D,KAAiBT,IAAc,CAC9D,GAAIl/D,IAAiB,IACjB,SAEJ,MAAM4nE,EAAkBjI,EAAYl4D,IAAIogE,GAAsBrlC,EAAOmlC,EAAwB3nE,IAC7FynE,GAAiBhgE,IAAImgE,EACzB,CACJ,CACA,OAAOplC,CACX,CACA,SAASqlC,GAAsBC,EAAkBH,EAAwB3nE,GACrE,MAAM2/D,EAAc,IAAI,KAClBhlD,EAAQmtD,EAAiB/pD,WAAU,GACzC/d,EAAagN,SAASs6D,KAAK9+C,YAAY7N,GACvCglD,EAAYl4D,KAAI,OAAa,IAAMkT,EAAMqD,WACzC,IAAK,MAAMkhB,KAAQ6oC,GAA0BD,GACzCntD,EAAMqtD,OAAOC,WAAW/oC,EAAKgpC,QAASvtD,EAAMqtD,OAAOG,SAAS/kE,QAOhE,OALAu8D,EAAYl4D,IAAI2gE,GAAuBC,QAAQP,EAAkBnI,EAAa,CAAE2I,WAAW,GAA3EF,CAAmF,KAC/FztD,EAAM3L,YAAc84D,EAAiB94D,eAEzC24D,EAAuBlgE,IAAIkT,GAC3BglD,EAAYl4D,KAAI,OAAa,IAAMkgE,EAAuBrwC,OAAO3c,KAC1DglD,CACX,CACO,MAAMyI,GAAyB,IAAI,MACtC,WAAA19D,GACIC,KAAK49D,kBAAoB,IAAIzpC,GACjC,CACA,OAAAupC,CAAQrgE,EAAQ23D,EAAanwD,GACzB,IAAIg5D,EAA6B79D,KAAK49D,kBAAkBjoE,IAAI0H,GACvDwgE,IACDA,EAA6B,IAAI1pC,IACjCn0B,KAAK49D,kBAAkBjuD,IAAItS,EAAQwgE,IAEvC,MAAMC,GAAc,QAAKj5D,GACzB,IAAIk5D,EAA6BF,EAA2BloE,IAAImoE,GAChE,GAAKC,EAuBDA,EAA2BC,OAAS,MAvBP,CAC7B,MAAMC,EAAc,IAAI,KAClBC,EAAW,IAAIC,iBAAiBC,GAAaH,EAAYjzC,KAAKozC,IACpEF,EAASR,QAAQrgE,EAAQwH,GACzB,MAAMw5D,EAAqCN,EAA6B,CACpEC,MAAO,EACPE,WACAD,YAAaA,EAAYpzC,OAE7BmqC,EAAYl4D,KAAI,OAAa,KACzBuhE,EAAmCL,OAAS,EACK,IAA7CK,EAAmCL,QACnCC,EAAYj/C,UACZk/C,EAASI,aACTT,GAA4BlxC,OAAOmxC,GACM,IAArCD,GAA4BvI,MAC5Bt1D,KAAK49D,kBAAkBjxC,OAAOtvB,OAI1CwgE,EAA2BluD,IAAImuD,EAAaC,EAChD,CAIA,OAAOA,EAA2BE,WACtC,GAEJ,IAAIM,GAAoB,KACxB,SAASC,KAIL,OAHKD,KACDA,GAAoB7B,MAEjB6B,EACX,CACA,SAASnB,GAA0BvlC,GAC/B,OAAIA,GAAOwlC,OAAOoB,MAEP5mC,EAAMwlC,MAAMoB,MAEnB5mC,GAAOwlC,OAAOG,SAEP3lC,EAAMwlC,MAAMG,SAEhB,EACX,CACO,SAASkB,GAAc3/D,EAAUw+D,EAAS1lC,EAAQ2mC,MACrD,GAAK3mC,GAAU0lC,EAAf,CAGA1lC,EAAMwlC,OAAOC,WAAW,GAAGv+D,MAAaw+D,KAAY,GAEpD,IAAK,MAAMoB,KAA0BxC,GAAkBxmE,IAAIkiC,IAAU,GACjE6mC,GAAc3/D,EAAUw+D,EAASoB,EAJrC,CAMJ,CACO,SAASC,GAAiCC,EAAUhnC,EAAQ2mC,MAC/D,IAAK3mC,EACD,OAEJ,MAAM4mC,EAAQrB,GAA0BvlC,GAClCinC,EAAW,GACjB,IAAK,IAAI1lE,EAAI,EAAGA,EAAIqlE,EAAMhmE,OAAQW,IAAK,CACnC,MAAMm7B,EAAOkqC,EAAMrlE,GACf2lE,GAAexqC,KAAkD,IAAzCA,EAAKyqC,aAAaphE,QAAQihE,IAClDC,EAAS7jE,KAAK7B,EAEtB,CACA,IAAK,IAAIA,EAAI0lE,EAASrmE,OAAS,EAAGW,GAAK,EAAGA,IACtCy+B,EAAMwlC,OAAO4B,WAAWH,EAAS1lE,IAGrC,IAAK,MAAMulE,KAA0BxC,GAAkBxmE,IAAIkiC,IAAU,GACjE+mC,GAAiCC,EAAUF,EAEnD,CACA,SAASI,GAAexqC,GACpB,MAAoC,iBAAtBA,EAAKyqC,YACvB,CACO,SAASE,GAAcjjE,GAE1B,OAAOA,aAAakjE,aAAeljE,aAAao4D,EAAUp4D,GAAGkjE,WACjE,CACO,SAASC,GAAoBnjE,GAEhC,OAAOA,aAAaojE,mBAAqBpjE,aAAao4D,EAAUp4D,GAAGojE,iBACvE,CACO,SAASC,GAAarjE,GAEzB,OAAOA,aAAasjE,YAActjE,aAAao4D,EAAUp4D,GAAGsjE,UAChE,CACO,SAASC,GAAavjE,GAEzB,OAAOA,aAAawjE,YAAcxjE,aAAao4D,EAAUp4D,GAAGwjE,UAChE,CACO,SAASC,GAAgBzjE,GAE5B,OAAOA,aAAa0jE,eAAiB1jE,aAAao4D,EAAUp4D,GAAG0jE,aACnE,CACO,MAAMvK,GAAY,CAErBwK,MAAO,QACPC,SAAU,WACVC,SAAU,WACVC,SAAU,UACVntC,WAAY,YACZotC,WAAY,YACZC,WAAY,YACZC,UAAW,WACXC,YAAa,aACbntC,YAAa,aACbotC,YAAa,QACbt+C,WAAY,YACZgR,aAAc,cACdnR,aAAc,cACd0R,cAAe,eACfgtC,aAAc,cACdC,MAAO,QAEPC,SAAU,UACVC,UAAW,WACXC,OAAQ,QAERC,KAAM,OACNrL,cAAe,eACfsL,OAAQ,SACRC,UAAW,WACXC,UAAW,WACXC,MAAO,QACPC,MAAO,QACPC,MAAO,QACPC,OAAQ,SACRC,OAAQ,SACRC,kBAAmB,mBACnBC,qBAAsB,yBAEtBC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,QACPC,MAAO,QACPC,SAAU,UACVC,UAAW,WACXC,KAAM,OACNC,MAAO,QAEPC,QAAS,UAETC,WAAY,YACZC,KAAM,OACNC,WAAY,YACZC,WAAY,YACZC,UAAW,WACXC,KAAM,OACNC,SAAU,UAEVC,gBAAiB,KAAmB,uBAAyB,iBAC7DC,cAAe,KAAmB,qBAAuB,eACzDC,oBAAqB,KAAmB,2BAA6B,sBAElE,SAASC,GAAYpmE,GACxB,MAAM0+C,EAAY1+C,EAClB,SAAU0+C,GAAiD,mBAA7BA,EAAUl5B,gBAAsE,mBAA9Bk5B,EAAU5e,gBAC9F,CACO,MAAMumC,GAAc,CACvBC,KAAM,CAAC1mE,EAAG2mE,KACN3mE,EAAE4lB,iBACE+gD,GACA3mE,EAAEkgC,kBAEClgC,IAGR,SAAS4mE,GAAqB1pD,GACjC,MAAM7N,EAAI,GACV,IAAK,IAAIlS,EAAI,EAAG+f,GAAQA,EAAK9G,WAAa8G,EAAKuG,aAActmB,IACzDkS,EAAElS,GAAK+f,EAAKqV,UACZrV,EAAOA,EAAK6C,WAEhB,OAAO1Q,CACX,CACO,SAASw3D,GAAwB3pD,EAAM4pD,GAC1C,IAAK,IAAI3pE,EAAI,EAAG+f,GAAQA,EAAK9G,WAAa8G,EAAKuG,aAActmB,IACrD+f,EAAKqV,YAAcu0C,EAAM3pE,KACzB+f,EAAKqV,UAAYu0C,EAAM3pE,IAE3B+f,EAAOA,EAAK6C,UAEpB,CACA,MAAMgnD,WAAqB,KACvB,qBAAOC,CAAe5nE,GAClB,GAAI6jE,GAAc7jE,GAAU,CACxB,MAAMurC,EAAa60B,GAAcpgE,GAEjC,OAAO0/D,EADgBn0B,EAAaA,EAAWg1B,cAAgBvgE,EAAQsY,cAAcioD,cACpDvgE,EACrC,CACK,CACD,MAAMxF,EAASwF,EACf,OAAO0/D,EAAWllE,EAAOwM,SAASu5D,cAAe/lE,EAAOwM,SAC5D,CACJ,CACA,WAAAtC,CAAY1E,GACRmR,QACAxM,KAAKkjE,YAAcljE,KAAKyzB,UAAU,IAAI,MACtCzzB,KAAKmjE,WAAanjE,KAAKkjE,YAAYr4C,MACnC7qB,KAAKojE,WAAapjE,KAAKyzB,UAAU,IAAI,MACrCzzB,KAAKqjE,UAAYrjE,KAAKojE,WAAWv4C,MACjC,IAAIoxC,EAAW+G,GAAaC,eAAe5nE,GACvCioE,GAAe,EACnB,MAAMC,EAAU,KACZD,GAAe,EACVrH,IACDA,GAAW,EACXj8D,KAAKkjE,YAAYl4C,SAGnBw4C,EAAS,KACPvH,IACAqH,GAAe,GACdpE,GAAc7jE,GAAWg5D,EAAUh5D,GAAWA,GAASspB,WAAW,KAC3D2+C,IACAA,GAAe,EACfrH,GAAW,EACXj8D,KAAKojE,WAAWp4C,SAErB,KAGXhrB,KAAKyjE,qBAAuB,KACIT,GAAaC,eAAe5nE,KAC5B4gE,IACpBA,EACAuH,IAGAD,MAIZvjE,KAAKyzB,UAAU0hC,EAAsB95D,EAAS+5D,GAAUqM,MAAO8B,GAAS,IACxEvjE,KAAKyzB,UAAU0hC,EAAsB95D,EAAS+5D,GAAUwM,KAAM4B,GAAQ,IAClEtE,GAAc7jE,KACd2E,KAAKyzB,UAAU0hC,EAAsB95D,EAAS+5D,GAAUsM,SAAU,IAAM1hE,KAAKyjE,yBAC7EzjE,KAAKyzB,UAAU0hC,EAAsB95D,EAAS+5D,GAAUuM,UAAW,IAAM3hE,KAAKyjE,yBAEtF,EAQG,SAASC,GAAWroE,GACvB,OAAO,IAAI2nE,GAAa3nE,EAC5B,CACO,SAASoC,GAAMkmE,EAASnkD,GAE3B,OADAmkD,EAAQlmE,MAAM+hB,GACPA,CACX,CACO,SAASokD,GAAOznD,KAAWjY,GAE9B,GADAiY,EAAOynD,UAAU1/D,GACO,IAApBA,EAASzL,QAAuC,iBAAhByL,EAAS,GACzC,OAAOA,EAAS,EAExB,CACO,SAAS2/D,GAAQ1nD,EAAQqD,GAE5B,OADArD,EAAO7B,aAAakF,EAAOrD,EAAOhY,YAC3Bqb,CACX,CAIO,SAASskD,GAAM3nD,KAAWjY,GAC7BiY,EAAOorB,UAAY,GACnBq8B,GAAOznD,KAAWjY,EACtB,CACA,MAAM6/D,GAAiB,0CAChB,IAAIC,GAKX,SAASC,GAAGC,EAAWC,EAAaC,KAAUlgE,GAC1C,MAAMsK,EAAQu1D,GAAe1sB,KAAK8sB,GAClC,IAAK31D,EACD,MAAM,IAAI5V,MAAM,oBAEpB,MAAMgjB,EAAUpN,EAAM,IAAM,MAC5B,IAAIrT,EAgCJ,OA9BIA,EADA+oE,IAAcF,GAAUK,KACfhiE,SAASiiE,gBAAgBJ,EAAWtoD,GAGpCvZ,SAASqR,cAAckI,GAEhCpN,EAAM,KACNrT,EAAOy6B,GAAKpnB,EAAM,IAElBA,EAAM,KACNrT,EAAOu5B,UAAYlmB,EAAM,GAAGE,QAAQ,MAAO,KAAKG,QAEhDu1D,GACA3uE,OAAOsX,QAAQq3D,GAAOp2D,QAAQ,EAAEsL,EAAMve,WACb,IAAVA,IAGP,UAAU4Q,KAAK2N,GACfne,EAAOme,GAAQve,EAED,aAATue,EACDve,GACAI,EAAOue,aAAaJ,EAAM,QAI9Bne,EAAOue,aAAaJ,EAAMve,MAItCI,EAAOyoE,UAAU1/D,GACV/I,CACX,CACO,SAASopE,GAAEJ,EAAaC,KAAUlgE,GACrC,OAAO+/D,GAAGD,GAAUK,KAAMF,EAAaC,KAAUlgE,EACrD,CAIO,SAAS61B,GAAcyqC,KAAYC,GAClCD,EACAE,MAAQD,GAGRE,MAAQF,EAEhB,CACO,SAASC,MAAQD,GACpB,IAAK,MAAMppE,KAAWopE,EAClBppE,EAAQw8B,MAAMgC,QAAU,GACxBx+B,EAAQoe,gBAAgB,cAEhC,CACO,SAASkrD,MAAQF,GACpB,IAAK,MAAMppE,KAAWopE,EAClBppE,EAAQw8B,MAAMgC,QAAU,OACxBx+B,EAAQqe,aAAa,cAAe,OAE5C,CASO,SAASkrD,GAAuB/uE,EAAQgvE,GAC3C,MAAMC,EAAWjvE,EAAO25D,iBAAmBqV,EAC3C,OAAOpqE,KAAKkE,IAAI,EAAGlE,KAAKC,MAAMoqE,IAAajvE,EAAO25D,gBACtD,CAYO,SAASuV,GAAmB1zB,GAO/B,IAAW2zB,KAAK3zB,EAAK,SAAU,WACnC,CACO,SAAS4zB,GAAQ5vE,EAAc+uB,GAClC,MAAMojB,EAAO,KACTpjB,IACA8gD,EAAiBrO,EAA6BxhE,EAAcmyC,IAEhE,IAAI09B,EAAiBrO,EAA6BxhE,EAAcmyC,GAChE,OAAO,OAAa,IAAM09B,EAAelmD,UAC7C,CAKO,SAASmmD,GAAS11B,GACrB,OAAKA,EAGE,QAAQ,KAAWY,gBAAgBZ,GAAKnhC,UAAS,GAAMI,QAAQ,KAAM,WAFjE,SAGf,CACO,SAAS02D,GAAmBrqE,GAC/B,MAAO,IAAIA,EAAM2T,QAAQ,KAAM,SACnC,CACO,SAAS22D,GAAsBC,EAAkBC,GACpD,QAAyB5pE,IAArB2pE,EAAgC,CAChC,MAAME,EAAgBF,EAAiB92D,MAAM,oBAC7C,GAAIg3D,EAAe,CACf,MAAMC,EAAeD,EAAc,GAAGpsB,MAAM,IAAK,GAIjD,OAH4B,IAAxBqsB,EAAahtE,SACb8sE,EAAOF,GAAsBI,EAAa,GAAG52D,OAAQ02D,IAElD,OAAOE,EAAa,OAAOF,IACtC,CACA,OAAOD,CACX,CACA,OAAOC,CACX,CAMO,SAASG,GAAiCC,EAAkBC,GAAkB,GAGjF,MAAMC,EAASxjE,SAASqR,cAAc,KAoBtC,OAnBA,KAAkB,0BAA4ByF,IAE1C,IAAK,MAAM8D,IAAQ,CAAC,OAAQ,OACxB,GAAI9D,EAAKX,aAAayE,GAAO,CACzB,MAAMH,EAAY3D,EAAKV,aAAawE,GACpC,GAAa,SAATA,GAAmBH,EAAUuiC,WAAW,KAExC,SAGJ,GADAwmB,EAAOC,KAAOhpD,GACT6oD,EAAiBI,SAASF,EAAOG,SAASt3D,QAAQ,KAAM,KAAM,CAC/D,GAAIk3D,GAA4B,QAAT3oD,GAAkB4oD,EAAOC,KAAKzmB,WAAW,SAC5D,SAEJlmC,EAAKM,gBAAgBwD,EACzB,CACJ,KAGD,OAAa,KAChB,KAAqB,4BAE7B,EAxKA,SAAW+mD,GACPA,EAAgB,KAAI,+BACpBA,EAAe,IAAI,4BACtB,CAHD,CAGGA,KAAcA,GAAY,CAAC,IA4C9BO,GAAE0B,IAAM,SAAU9B,EAAaC,KAAUlgE,GACrC,OAAO+/D,GAAGD,GAAUiC,IAAK9B,EAAaC,KAAUlgE,EACpD,EA6DA,KAAkBkrC,sBAAsB,UAAUzjC,KAAK,IAAWyhD,SAAS0Y,MAAQ,QAAU,QA8DtF,MAAMI,GAAsBzwE,OAAO2X,OAAO,CAC7C,IACA,OACA,IACA,MACA,aACA,KACA,UACA,OACA,OACA,MACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,aACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,MACA,QACA,MACA,MACA,QACA,KACA,OACA,KACA,IACA,MACA,IACA,KACA,KACA,OACA,OACA,QACA,QACA,SACA,OACA,SACA,SACA,MACA,UACA,MACA,QACA,QACA,KACA,QACA,KACA,QACA,OACA,KACA,KACA,IACA,KACA,MACA,QACA,QAE2B3X,OAAO2X,OAAO,CACzCkH,aAAc,CAAC,IAAK,SAAU,aAAc,OAAQ,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAS,QAAS,KAAM,IAAK,MAAO,SAAU,QAAS,OAAQ,SAAU,WAAY,KAAM,MAChME,aAAc,CAAC,OAAQ,YAAa,eAAgB,SAAU,QAAS,OAAQ,MAAO,MAAO,QAAS,KAAM,OAAQ,WAAY,QAAS,YAAa,QAAS,SAAU,QAAS,aAAc,WAAY,UAAW,cAAe,OAAQ,SAC9OoB,YAAY,EACZC,qBAAqB,EACrBC,qBAAqB,IAElB,MAAMqwD,WAA2B,KACpC,WAAApmE,GACIyM,QACAxM,KAAKomE,eAAiB,IAAI,KAC1BpmE,KAAKqmE,WAAa,CACdlrC,QAAQ,EACRD,UAAU,EACVD,SAAS,EACTG,SAAS,GAEbp7B,KAAKomE,eAAetpE,IAAI,KAAYwpE,gBAAgB3R,EAAqB,EAAG9+D,SAAQm/D,iBAAkBh1D,KAAKumE,kBAAkB1wE,EAAQm/D,GAAc,CAAEn/D,OAAQ,IAAYm/D,YAAah1D,KAAKomE,iBAC/L,CACA,iBAAAG,CAAkB1wE,EAAQm/D,GACtBA,EAAYl4D,IAAIq4D,EAAsBt/D,EAAQ,UAAWoG,IACrD,GAAIA,EAAEuqE,iBACF,OAEJ,MAAM37C,EAAQ,IAAI,IAAsB5uB,GAGxC,GAAsB,IAAlB4uB,EAAM0Q,UAAmCt/B,EAAEwqE,OAA/C,CAGA,GAAIxqE,EAAEk/B,SAAWn7B,KAAKqmE,WAAWlrC,OAC7Bn7B,KAAKqmE,WAAWK,eAAiB,WAEhC,GAAIzqE,EAAEg/B,UAAYj7B,KAAKqmE,WAAWprC,QACnCj7B,KAAKqmE,WAAWK,eAAiB,YAEhC,GAAIzqE,EAAEm/B,UAAYp7B,KAAKqmE,WAAWjrC,QACnCp7B,KAAKqmE,WAAWK,eAAiB,YAEhC,GAAIzqE,EAAEi/B,WAAal7B,KAAKqmE,WAAWnrC,SACpCl7B,KAAKqmE,WAAWK,eAAiB,YAEhC,IAAsB,IAAlB77C,EAAM0Q,QAIX,OAHAv7B,KAAKqmE,WAAWK,oBAAiB/qE,CAIrC,CACAqE,KAAKqmE,WAAWlrC,OAASl/B,EAAEk/B,OAC3Bn7B,KAAKqmE,WAAWprC,QAAUh/B,EAAEg/B,QAC5Bj7B,KAAKqmE,WAAWjrC,QAAUn/B,EAAEm/B,QAC5Bp7B,KAAKqmE,WAAWnrC,SAAWj/B,EAAEi/B,SACzBl7B,KAAKqmE,WAAWK,iBAChB1mE,KAAKqmE,WAAWx7C,MAAQ5uB,EACxB+D,KAAKgrB,KAAKhrB,KAAKqmE,YAzBnB,IA2BD,IACHrR,EAAYl4D,IAAIq4D,EAAsBt/D,EAAQ,QAASoG,IAC/CA,EAAEuqE,oBAGDvqE,EAAEk/B,QAAUn7B,KAAKqmE,WAAWlrC,OAC7Bn7B,KAAKqmE,WAAWM,gBAAkB,OAE5B1qE,EAAEg/B,SAAWj7B,KAAKqmE,WAAWprC,QACnCj7B,KAAKqmE,WAAWM,gBAAkB,QAE5B1qE,EAAEm/B,SAAWp7B,KAAKqmE,WAAWjrC,QACnCp7B,KAAKqmE,WAAWM,gBAAkB,QAE5B1qE,EAAEi/B,UAAYl7B,KAAKqmE,WAAWnrC,SACpCl7B,KAAKqmE,WAAWM,gBAAkB,QAGlC3mE,KAAKqmE,WAAWM,qBAAkBhrE,EAElCqE,KAAKqmE,WAAWK,iBAAmB1mE,KAAKqmE,WAAWM,kBACnD3mE,KAAKqmE,WAAWK,oBAAiB/qE,GAErCqE,KAAKqmE,WAAWlrC,OAASl/B,EAAEk/B,OAC3Bn7B,KAAKqmE,WAAWprC,QAAUh/B,EAAEg/B,QAC5Bj7B,KAAKqmE,WAAWjrC,QAAUn/B,EAAEm/B,QAC5Bp7B,KAAKqmE,WAAWnrC,SAAWj/B,EAAEi/B,SACzBl7B,KAAKqmE,WAAWM,kBAChB3mE,KAAKqmE,WAAWx7C,MAAQ5uB,EACxB+D,KAAKgrB,KAAKhrB,KAAKqmE,gBAEpB,IACHrR,EAAYl4D,IAAIq4D,EAAsBt/D,EAAOwM,SAASgY,KAAM,YAAa,KACrEra,KAAKqmE,WAAWK,oBAAiB/qE,IAClC,IACHq5D,EAAYl4D,IAAIq4D,EAAsBt/D,EAAOwM,SAASgY,KAAM,UAAW,KACnEra,KAAKqmE,WAAWK,oBAAiB/qE,IAClC,IACHq5D,EAAYl4D,IAAIq4D,EAAsBt/D,EAAOwM,SAASgY,KAAM,YAAape,IACjEA,EAAE2lB,UACF5hB,KAAKqmE,WAAWK,oBAAiB/qE,KAEtC,IACHq5D,EAAYl4D,IAAIq4D,EAAsBt/D,EAAQ,OAAQ,KAClDmK,KAAK4mE,mBAEb,CACA,aAAIC,GACA,OAAO7mE,KAAKqmE,UAChB,CAIA,cAAAO,GACI5mE,KAAK8mE,mBACL9mE,KAAKgrB,KAAKhrB,KAAKqmE,WACnB,CACA,gBAAAS,GACI9mE,KAAKqmE,WAAa,CACdlrC,QAAQ,EACRD,UAAU,EACVD,SAAS,EACTG,SAAS,EAEjB,CACA,kBAAOwM,GAIH,OAHKu+B,GAAmBY,WACpBZ,GAAmBY,SAAW,IAAIZ,IAE/BA,GAAmBY,QAC9B,CACA,OAAA/nD,GACIxS,MAAMwS,UACNhf,KAAKomE,eAAepnD,SACxB,EAEG,MAAMgoD,WAA4B,KACrC,WAAAjnE,CAAY1E,EAAS4rE,GACjBz6D,QACAxM,KAAK3E,QAAUA,EACf2E,KAAKinE,UAAYA,EAKjBjnE,KAAK+0B,QAAU,EAEf/0B,KAAKknE,cAAgB,EACrBlnE,KAAKumE,mBACT,CACA,iBAAAA,GACQvmE,KAAKinE,UAAUE,aACfnnE,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAU2M,WAAa9lE,IACtE+D,KAAKinE,UAAUE,cAAclrE,MAGjC+D,KAAKinE,UAAUG,QACfpnE,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAU4M,KAAO/lE,IAChE+D,KAAKinE,UAAUG,SAASnrE,MAGhC+D,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAU6M,WAAahmE,IACtE+D,KAAK+0B,UACL/0B,KAAKknE,cAAgBjrE,EAAEorE,UACvBrnE,KAAKinE,UAAUK,cAAcrrE,MAEjC+D,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAU+M,UAAYlmE,IACrEA,EAAE4lB,iBACF7hB,KAAKinE,UAAUM,aAAatrE,EAAGA,EAAEorE,UAAYrnE,KAAKknE,kBAEtDlnE,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAU8M,WAAajmE,IACtE+D,KAAK+0B,UACgB,IAAjB/0B,KAAK+0B,UACL/0B,KAAKknE,cAAgB,EACrBlnE,KAAKinE,UAAUO,cAAcvrE,OAGrC+D,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAUiN,SAAWpmE,IACpE+D,KAAK+0B,QAAU,EACf/0B,KAAKknE,cAAgB,EACrBlnE,KAAKinE,UAAUQ,YAAYxrE,MAE/B+D,KAAKyzB,UAAU0hC,EAAsBn1D,KAAK3E,QAAS+5D,GAAUgN,KAAOnmE,IAChE+D,KAAK+0B,QAAU,EACf/0B,KAAKknE,cAAgB,EACrBlnE,KAAKinE,UAAUS,SAASzrE,KAEhC,EAEJ,MAAM0rE,GAAU,6FACT,SAASvf,GAAE7pC,KAAQ5Q,GACtB,IAAIwN,EACAjX,EACA5H,MAAMC,QAAQoR,EAAK,KACnBwN,EAAa,CAAC,EACdjX,EAAWyJ,EAAK,KAGhBwN,EAAaxN,EAAK,IAAM,CAAC,EACzBzJ,EAAWyJ,EAAK,IAEpB,MAAMa,EAAQm5D,GAAQtwB,KAAK94B,GAC3B,IAAK/P,IAAUA,EAAMo5D,OACjB,MAAM,IAAIhvE,MAAM,gBAEpB,MAAMgjB,EAAUpN,EAAMo5D,OAAY,KAAK,MACjC9gC,EAAKzkC,SAASqR,cAAckI,GAC9BpN,EAAMo5D,OAAW,KACjB9gC,EAAGlR,GAAKpnB,EAAMo5D,OAAW,IAE7B,MAAM1W,EAAa,GACnB,GAAI1iD,EAAMo5D,OAAc,MACpB,IAAK,MAAMlzC,KAAalmB,EAAMo5D,OAAc,MAAExuB,MAAM,KAC9B,KAAd1kB,GACAw8B,EAAWj2D,KAAKy5B,GAI5B,QAA6B/4B,IAAzBwf,EAAWuZ,UACX,IAAK,MAAMA,KAAavZ,EAAWuZ,UAAU0kB,MAAM,KAC7B,KAAd1kB,GACAw8B,EAAWj2D,KAAKy5B,GAIxBw8B,EAAWz4D,OAAS,IACpBquC,EAAGpS,UAAYw8B,EAAW3hB,KAAK,MAEnC,MAAMp0C,EAAS,CAAC,EAIhB,GAHIqT,EAAMo5D,OAAa,OACnBzsE,EAAOqT,EAAMo5D,OAAa,MAAK9gC,GAE/B5iC,EACA,IAAK,MAAMwkB,KAAKxkB,EACRg7D,GAAcx2C,GACdoe,EAAGjpB,YAAY6K,GAEG,iBAANA,EACZoe,EAAG88B,OAAOl7C,GAEL,SAAUA,IACfjzB,OAAOoyE,OAAO1sE,EAAQutB,GACtBoe,EAAGjpB,YAAY6K,EAAExW,OAI7B,IAAK,MAAOvY,EAAKoB,KAAUtF,OAAOsX,QAAQoO,GACtC,GAAY,cAARxhB,EAGC,GAAY,UAARA,EACL,IAAK,MAAOmuE,EAAQnyC,KAAalgC,OAAOsX,QAAQhS,GAC5C+rC,EAAGjP,MAAMkwC,YAAYC,GAAsBF,GAA6B,iBAAbnyC,EAAwBA,EAAW,KAAO,GAAKA,OAGjG,aAARh8B,EACLmtC,EAAGmhC,SAAWltE,EAGd+rC,EAAGptB,aAAasuD,GAAsBruE,GAAMoB,EAAMuT,YAI1D,OADAnT,EAAa,KAAI2rC,EACV3rC,CACX,CACO,SAAS+sE,GAAQ3pD,KAAQ5Q,GAC5B,IAAIwN,EACAjX,EACA5H,MAAMC,QAAQoR,EAAK,KACnBwN,EAAa,CAAC,EACdjX,EAAWyJ,EAAK,KAGhBwN,EAAaxN,EAAK,IAAM,CAAC,EACzBzJ,EAAWyJ,EAAK,IAEpB,MAAMa,EAAQm5D,GAAQtwB,KAAK94B,GAC3B,IAAK/P,IAAUA,EAAMo5D,OACjB,MAAM,IAAIhvE,MAAM,gBAEpB,MAAMgjB,EAAUpN,EAAMo5D,OAAY,KAAK,MACjC9gC,EAAKzkC,SAASiiE,gBAAgB,6BAA8B1oD,GAC9DpN,EAAMo5D,OAAW,KACjB9gC,EAAGlR,GAAKpnB,EAAMo5D,OAAW,IAE7B,MAAM1W,EAAa,GACnB,GAAI1iD,EAAMo5D,OAAc,MACpB,IAAK,MAAMlzC,KAAalmB,EAAMo5D,OAAc,MAAExuB,MAAM,KAC9B,KAAd1kB,GACAw8B,EAAWj2D,KAAKy5B,GAI5B,QAA6B/4B,IAAzBwf,EAAWuZ,UACX,IAAK,MAAMA,KAAavZ,EAAWuZ,UAAU0kB,MAAM,KAC7B,KAAd1kB,GACAw8B,EAAWj2D,KAAKy5B,GAIxBw8B,EAAWz4D,OAAS,IACpBquC,EAAGpS,UAAYw8B,EAAW3hB,KAAK,MAEnC,MAAMp0C,EAAS,CAAC,EAIhB,GAHIqT,EAAMo5D,OAAa,OACnBzsE,EAAOqT,EAAMo5D,OAAa,MAAK9gC,GAE/B5iC,EACA,IAAK,MAAMwkB,KAAKxkB,EACRg7D,GAAcx2C,GACdoe,EAAGjpB,YAAY6K,GAEG,iBAANA,EACZoe,EAAG88B,OAAOl7C,GAEL,SAAUA,IACfjzB,OAAOoyE,OAAO1sE,EAAQutB,GACtBoe,EAAGjpB,YAAY6K,EAAExW,OAI7B,IAAK,MAAOvY,EAAKoB,KAAUtF,OAAOsX,QAAQoO,GACtC,GAAY,cAARxhB,EAGC,GAAY,UAARA,EACL,IAAK,MAAOmuE,EAAQnyC,KAAalgC,OAAOsX,QAAQhS,GAC5C+rC,EAAGjP,MAAMkwC,YAAYC,GAAsBF,GAA6B,iBAAbnyC,EAAwBA,EAAW,KAAO,GAAKA,OAGjG,aAARh8B,EACLmtC,EAAGmhC,SAAWltE,EAGd+rC,EAAGptB,aAAasuD,GAAsBruE,GAAMoB,EAAMuT,YAI1D,OADAnT,EAAa,KAAI2rC,EACV3rC,CACX,CACA,SAAS6sE,GAAsBtyC,GAC3B,OAAOA,EAAIhnB,QAAQ,kBAAmB,SAASN,aACnD,C,6JCz+CO,MAAM+5D,GAAuB,QAAc,wBAAyB,KAAwB,KAAa,mBAAoB,kHACvHC,GAAuB,QAAc,wBAAyB,KAAwB,KAAa,mBAAoB,kHACvHC,GAA4B,QAAc,6BAA8B,CAAEpyE,KAAM,IAAI,KAAM,IAAI,KAAK,IAAK,IAAK,IAAK,OAASC,MAAO,IAAI,KAAM,IAAI,KAAK,EAAG,EAAG,EAAG,MAAQC,OAAQ,UAAWC,QAAS,KAAMM,OAAS,KAAa,wBAAyB,wHACvP4xE,GAAwB,QAAc,yBAA0B,CAAEryE,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMO,MAAON,QAAS,WAAa,KAAa,wBAAyB,4CACtLmyE,GAAoB,QAAc,qBAAsB,CAAEtyE,KAAM,UAAWC,MAAO,UAAWC,OAAQ,KAAMO,MAAON,QAAS,WAAa,KAAa,oBAAqB,6CAC1KoyE,GAA2C,QAAc,kCAAmC,KAAM,QAAI7sE,EAAW,KAAa,8CAA+C,sDAC7K8sE,GAAgC,QAAc,iCAAkC,KAA+B,KAAa,iCAAkC,wDAC9JC,GAAoC,QAAc,qCAAsC,KAAmC,KAAa,qCAAsC,6DAC9KC,GAAgC,QAAc,iCAAkC,CAAE1yE,MAAM,QAAMuyE,EAA0C,MAAgCtyE,OAAO,QAAMsyE,EAA0C,MAAgCryE,OAAQ,KAAMC,QAAS,MAAQ,KAAa,iCAAkC,uD,8ECdnV,SAASwyE,EAAiBC,EAAYC,GACzC,GAA0B,iBAAfD,EAAyB,CAChC,GAAmB,IAAfA,EACA,OAAO,KAEX,MAAME,GAA2B,MAAbF,KAA6B,EAC3CG,GAA4B,WAAbH,KAA6B,GAClD,OACW,IAAII,EADK,IAAhBD,EACsB,CAClBE,EAAuBH,EAAYD,GACnCI,EAAuBF,EAAaF,IAGtB,CAACI,EAAuBH,EAAYD,IAC9D,CACK,CACD,MAAMK,EAAS,GACf,IAAK,IAAI/vE,EAAI,EAAGA,EAAIyvE,EAAWpwE,OAAQW,IACnC+vE,EAAOluE,KAAKiuE,EAAuBL,EAAWzvE,GAAI0vE,IAEtD,OAAO,IAAIG,EAAWE,EAC1B,CACJ,CACO,SAASD,EAAuBL,EAAYC,GAC/C,MAAMM,KAAwB,KAAbP,GACXQ,KAAwB,IAAbR,GAMjB,OAAO,IAAIS,EALa,IAAPR,EAA2CO,EAAUD,KACvC,KAAbP,MACW,IAAbA,GACQ,IAAPC,EAA2CM,EAAUC,EACxC,IAAbR,EAErB,CAKO,MAAMS,EACT,WAAAvpE,CAAYk7B,EAASC,EAAUC,EAAQC,EAASG,GAC5Cv7B,KAAKi7B,QAAUA,EACfj7B,KAAKk7B,SAAWA,EAChBl7B,KAAKm7B,OAASA,EACdn7B,KAAKo7B,QAAUA,EACfp7B,KAAKu7B,QAAUA,CACnB,CACA,MAAAziC,CAAOE,GACH,OAAQA,aAAiBswE,GAClBtpE,KAAKi7B,UAAYjiC,EAAMiiC,SACvBj7B,KAAKk7B,WAAaliC,EAAMkiC,UACxBl7B,KAAKm7B,SAAWniC,EAAMmiC,QACtBn7B,KAAKo7B,UAAYpiC,EAAMoiC,SACvBp7B,KAAKu7B,UAAYviC,EAAMuiC,OAClC,CACA,aAAA3H,GACI,OAAyB,IAAjB5zB,KAAKu7B,SACW,IAAjBv7B,KAAKu7B,SACY,KAAjBv7B,KAAKu7B,SACY,IAAjBv7B,KAAKu7B,SACY,IAAjBv7B,KAAKu7B,OAChB,CAIA,uBAAAguC,GACI,OAASvpE,KAAKi7B,SAA4B,IAAjBj7B,KAAKu7B,SACtBv7B,KAAKk7B,UAA6B,IAAjBl7B,KAAKu7B,SACtBv7B,KAAKm7B,QAA2B,IAAjBn7B,KAAKu7B,SACpBv7B,KAAKo7B,SAA4B,KAAjBp7B,KAAKu7B,OACjC,EA2BG,MAAM0tC,EACT,WAAAlpE,CAAYopE,GACR,GAAsB,IAAlBA,EAAO1wE,OACP,MAAM,QAAgB,UAE1BuH,KAAKmpE,OAASA,CAClB,EAEG,MAAMK,EACT,WAAAzpE,CAAYk7B,EAASC,EAAUC,EAAQC,EAASquC,EAAUC,GACtD1pE,KAAKi7B,QAAUA,EACfj7B,KAAKk7B,SAAWA,EAChBl7B,KAAKm7B,OAASA,EACdn7B,KAAKo7B,QAAUA,EACfp7B,KAAKypE,SAAWA,EAChBzpE,KAAK0pE,aAAeA,CACxB,EAKG,MAAMC,G,kDCpHN,MAAMC,EAOT,8BAAOC,CAAwBxgE,EAAasmB,EAAU3nB,GAClD,MAAMsoD,EAAajnD,EAAY5Q,OAC/B,IAAI0qD,EAAgB,EAChB2mB,GAAuB,EACvBC,GAA4B,EAChC,IAAK,IAAI3wE,EAAI,EAAGA,EAAIk3D,EAAYl3D,IAAK,CACjC,GAAIA,IAAMu2B,EACN,MAAO,CAACm6C,EAAqBC,EAA0B5mB,GAO3D,OALIA,EAAgBn7C,IAAY,IAC5B8hE,EAAsB1wE,EACtB2wE,EAA2B5mB,GAEhB95C,EAAYspC,WAAWv5C,IAElC,KAAK,GACD+pD,GAAiB,EACjB,MACJ,KAAK,EAEDA,EAAgB,IAAc6mB,kBAAkB7mB,EAAen7C,GAC/D,MACJ,QACI,MAAO,EAAE,GAAI,GAAI,GAE7B,CACA,OAAI2nB,IAAa2gC,EACN,CAACwZ,EAAqBC,EAA0B5mB,GAEpD,EAAE,GAAI,GAAI,EACrB,CAUA,qBAAOva,CAAev/B,EAAasmB,EAAU3nB,EAASiyD,GAClD,MAAM3J,EAAajnD,EAAY5Q,QAGxBqxE,EAAqBC,EAA0B5mB,GAAiBymB,EAAwBC,wBAAwBxgE,EAAasmB,EAAU3nB,GAC9I,IAAuB,IAAnBm7C,EACA,OAAQ,EAIZ,IAAI7/C,EACJ,OAAQ22D,GACJ,KAAK,EACD32D,GAAO,EACP,MACJ,KAAK,EACDA,GAAO,EACP,MACJ,KAAK,EAGD,GAAI6/C,EAAgBn7C,IAAY,EAC5B,OAAO2nB,EAGXrsB,EAAO6/C,EAAgBn7C,GAAYA,EAAU,EAKrD,GAAI1E,EAAM,CACN,IAA6B,IAAzBwmE,EACA,OAAQ,EAOZ,IAAIG,EAAuBF,EAC3B,IAAK,IAAI3wE,EAAI0wE,EAAqB1wE,EAAIk3D,IAAcl3D,EAAG,CACnD,GAAI6wE,IAAyBF,EAA2B/hE,EAEpD,OAAO8hE,EAGX,OADezgE,EAAYspC,WAAWv5C,IAElC,KAAK,GACD6wE,GAAwB,EACxB,MACJ,KAAK,EACDA,EAAuB,IAAcD,kBAAkBC,EAAsBjiE,GAC7E,MACJ,QACI,OAAQ,EAEpB,CACA,OAAIiiE,IAAyBF,EAA2B/hE,EAC7C8hE,GAGH,CACZ,CAEA,MAAMI,EAAsB,IAAcF,kBAAkB7mB,EAAen7C,GAE3E,IAAIiiE,EAAuB9mB,EAC3B,IAAK,IAAI/pD,EAAIu2B,EAAUv2B,EAAIk3D,EAAYl3D,IAAK,CACxC,GAAI6wE,IAAyBC,EACzB,OAAO9wE,EAGX,OADeiQ,EAAYspC,WAAWv5C,IAElC,KAAK,GACD6wE,GAAwB,EACxB,MACJ,KAAK,EACDA,EAAuB,IAAcD,kBAAkBC,EAAsBjiE,GAC7E,MACJ,QACI,OAAQ,EAEpB,CAEA,OAAIiiE,IAAyBC,EAClB5Z,GAEH,CACZ,E,2QC9HG,MAAM6Z,EAAuB,EAK7B,MAAMC,EAIT,WAAArqE,CAAYkrB,GACRjrB,KAAKqqE,QAAUp/C,CACnB,CACA,UAAAq/C,CAAW10C,GACP,OAAO51B,KAAKqqE,QAAQz0C,EACxB,EAKG,MAAM20C,EACT,WAAAxqE,GACIC,KAAKwqE,yBAA2B,KAChCxqE,KAAKyqE,yBAA2B,EAChCzqE,KAAK0qE,wBAA0B,CACnC,EAKJ,MAAMC,EACF,WAAA5qE,CAAY61B,EAAItc,EAAM0J,EAAcqsB,GAChCrvC,KAAK41B,GAAKA,EACV51B,KAAKsZ,KAAOA,EACZtZ,KAAKgjB,aAAeA,EACpBhjB,KAAKqvC,OAASA,CAClB,CACA,WAAAu7B,CAAY7vE,EAAOy5C,GACf,OAAOo2B,EAAY7vE,EAAOy5C,EAC9B,CACA,OAAAq2B,CAAQC,EAAKjmE,EAAS9J,GAClB,OAAOA,CACX,EAEG,MAAMgwE,EACT,WAAAhrE,CAAYirE,EAAUC,GAClBjrE,KAAKgrE,SAAWA,EAChBhrE,KAAKirE,UAAYA,CACrB,EAEJ,SAASL,EAAY7vE,EAAOy5C,GACxB,GAAqB,iBAAVz5C,GAAwC,iBAAXy5C,IAAwBz5C,IAAUy5C,EACtE,OAAO,IAAIu2B,EAAkBv2B,EAAQz5C,IAAUy5C,GAEnD,GAAIl4C,MAAMC,QAAQxB,IAAUuB,MAAMC,QAAQi4C,GAAS,CAC/C,MAAM02B,EAAc5uE,MAAMC,QAAQxB,IAAUuB,MAAMC,QAAQi4C,IAAW,KAAcz5C,EAAOy5C,GAC1F,OAAO,IAAIu2B,EAAkBv2B,GAAS02B,EAC1C,CACA,IAAID,GAAY,EAChB,IAAK,MAAMtxE,KAAO66C,EACd,GAAIA,EAAOzlC,eAAepV,GAAM,CAC5B,MAAMwB,EAASyvE,EAAY7vE,EAAMpB,GAAM66C,EAAO76C,IAC1CwB,EAAO8vE,YACPlwE,EAAMpB,GAAOwB,EAAO6vE,SACpBC,GAAY,EAEpB,CAEJ,OAAO,IAAIF,EAAkBhwE,EAAOkwE,EACxC,CAIA,MAAME,EACF,WAAAprE,CAAY61B,GACR51B,KAAKqvC,YAAS1zC,EACdqE,KAAK41B,GAAKA,EACV51B,KAAKsZ,KAAO,UACZtZ,KAAKgjB,kBAAernB,CACxB,CACA,WAAAivE,CAAY7vE,EAAOy5C,GACf,OAAOo2B,EAAY7vE,EAAOy5C,EAC9B,CACA,QAAA42B,CAASjjE,GACL,OAAOnI,KAAKgjB,YAChB,EAEJ,MAAMqoD,EACF,WAAAtrE,CAAY61B,EAAItc,EAAM0J,EAAcqsB,GAChCrvC,KAAK41B,GAAKA,EACV51B,KAAKsZ,KAAOA,EACZtZ,KAAKgjB,aAAeA,EACpBhjB,KAAKqvC,OAASA,CAClB,CACA,WAAAu7B,CAAY7vE,EAAOy5C,GACf,OAAOo2B,EAAY7vE,EAAOy5C,EAC9B,CACA,QAAA42B,CAASjjE,GACL,YAAqB,IAAVA,EACAnI,KAAKgjB,aAET7a,CACX,CACA,OAAA0iE,CAAQC,EAAKjmE,EAAS9J,GAClB,OAAOA,CACX,EAKG,SAASuwE,EAAQvwE,EAAOioB,GAC3B,YAAqB,IAAVjoB,EACAioB,EAEG,UAAVjoB,GAIGshB,QAAQthB,EACnB,CACA,MAAMwwE,UAA4BF,EAC9B,WAAAtrE,CAAY61B,EAAItc,EAAM0J,EAAcqsB,OAAS1zC,QACnB,IAAX0zC,IACPA,EAAO9S,KAAO,UACd8S,EAAOm8B,QAAUxoD,GAErBxW,MAAMopB,EAAItc,EAAM0J,EAAcqsB,EAClC,CACA,QAAA+7B,CAASjjE,GACL,OAAOmjE,EAAQnjE,EAAOnI,KAAKgjB,aAC/B,EAKG,SAASyoD,EAAW1wE,EAAOioB,EAAc0oD,EAASC,GACrD,QAAqB,IAAV5wE,EACP,OAAOioB,EAEX,IAAI1X,EAAIgU,SAASvkB,EAAO,IACxB,OAAI68C,MAAMtsC,GACC0X,GAEX1X,EAAI7Q,KAAKkE,IAAI+sE,EAASpgE,GACtBA,EAAI7Q,KAAKmE,IAAI+sE,EAASrgE,GACX,EAAJA,EACX,CACA,MAAMsgE,UAAwBP,EAC1B,iBAAOI,CAAW1wE,EAAOioB,EAAc0oD,EAASC,GAC5C,OAAOF,EAAW1wE,EAAOioB,EAAc0oD,EAASC,EACpD,CACA,WAAA5rE,CAAY61B,EAAItc,EAAM0J,EAAc0oD,EAASC,EAASt8B,OAAS1zC,QACrC,IAAX0zC,IACPA,EAAO9S,KAAO,UACd8S,EAAOm8B,QAAUxoD,EACjBqsB,EAAOq8B,QAAUA,EACjBr8B,EAAOs8B,QAAUA,GAErBn/D,MAAMopB,EAAItc,EAAM0J,EAAcqsB,GAC9BrvC,KAAK0rE,QAAUA,EACf1rE,KAAK2rE,QAAUA,CACnB,CACA,QAAAP,CAASjjE,GACL,OAAOyjE,EAAgBH,WAAWtjE,EAAOnI,KAAKgjB,aAAchjB,KAAK0rE,QAAS1rE,KAAK2rE,QACnF,EAKG,SAASE,EAAa9wE,EAAOioB,EAAc0oD,EAASC,GACvD,QAAqB,IAAV5wE,EACP,OAAOioB,EAEX,MAAM1X,EAAIwgE,EAAkBC,MAAMhxE,EAAOioB,GACzC,OAAO8oD,EAAkBE,MAAM1gE,EAAGogE,EAASC,EAC/C,CACA,MAAMG,UAA0BT,EAC5B,YAAOW,CAAMxzE,EAAGoG,EAAKD,GACjB,OAAInG,EAAIoG,EACGA,EAEPpG,EAAImG,EACGA,EAEJnG,CACX,CACA,YAAOuzE,CAAMhxE,EAAOioB,GAChB,GAAqB,iBAAVjoB,EACP,OAAOA,EAEX,QAAqB,IAAVA,EACP,OAAOioB,EAEX,MAAM1X,EAAImtD,WAAW19D,GACrB,OAAQ68C,MAAMtsC,GAAK0X,EAAe1X,CACtC,CACA,WAAAvL,CAAY61B,EAAItc,EAAM0J,EAAcipD,EAAc58B,QACxB,IAAXA,IACPA,EAAO9S,KAAO,SACd8S,EAAOm8B,QAAUxoD,GAErBxW,MAAMopB,EAAItc,EAAM0J,EAAcqsB,GAC9BrvC,KAAKisE,aAAeA,CACxB,CACA,QAAAb,CAASjjE,GACL,OAAOnI,KAAKisE,aAAaH,EAAkBC,MAAM5jE,EAAOnI,KAAKgjB,cACjE,EAEJ,MAAMkpD,UAA2Bb,EAC7B,aAAOc,CAAOpxE,EAAOioB,GACjB,MAAqB,iBAAVjoB,EACAioB,EAEJjoB,CACX,CACA,WAAAgF,CAAY61B,EAAItc,EAAM0J,EAAcqsB,OAAS1zC,QACnB,IAAX0zC,IACPA,EAAO9S,KAAO,SACd8S,EAAOm8B,QAAUxoD,GAErBxW,MAAMopB,EAAItc,EAAM0J,EAAcqsB,EAClC,CACA,QAAA+7B,CAASjjE,GACL,OAAO+jE,EAAmBC,OAAOhkE,EAAOnI,KAAKgjB,aACjD,EAKG,SAASopD,EAAUrxE,EAAOioB,EAAcqpD,EAAeC,GAC1D,MAAqB,iBAAVvxE,EACAioB,EAEPspD,GAAiBvxE,KAASuxE,EACnBA,EAAcvxE,IAEa,IAAlCsxE,EAAczuE,QAAQ7C,GACfioB,EAEJjoB,CACX,CACA,MAAMwxE,UAA+BlB,EACjC,WAAAtrE,CAAY61B,EAAItc,EAAM0J,EAAcqpD,EAAeh9B,OAAS1zC,QAClC,IAAX0zC,IACPA,EAAO9S,KAAO,SACd8S,EAAOm9B,KAAOH,EACdh9B,EAAOm8B,QAAUxoD,GAErBxW,MAAMopB,EAAItc,EAAM0J,EAAcqsB,GAC9BrvC,KAAKysE,eAAiBJ,CAC1B,CACA,QAAAjB,CAASjjE,GACL,OAAOikE,EAAUjkE,EAAOnI,KAAKgjB,aAAchjB,KAAKysE,eACpD,EAEJ,MAAMC,UAAyB/B,EAC3B,WAAA5qE,CAAY61B,EAAItc,EAAM0J,EAAc2pD,EAAoBN,EAAeO,EAASv9B,OAAS1zC,QAC/D,IAAX0zC,IACPA,EAAO9S,KAAO,SACd8S,EAAOm9B,KAAOH,EACdh9B,EAAOm8B,QAAUmB,GAErBngE,MAAMopB,EAAItc,EAAM0J,EAAcqsB,GAC9BrvC,KAAKysE,eAAiBJ,EACtBrsE,KAAK6sE,SAAWD,CACpB,CACA,QAAAxB,CAASjjE,GACL,MAAqB,iBAAVA,IAGiC,IAAxCnI,KAAKysE,eAAe7uE,QAAQuK,GAFrBnI,KAAKgjB,aAKThjB,KAAK6sE,SAAS1kE,EACzB,EA0FG,IAAI2kE,EAozBAC,GAnzBX,SAAWD,GAIPA,EAAsBA,EAA4B,KAAI,GAAK,OAI3DA,EAAsBA,EAA6B,MAAI,GAAK,QAI5DA,EAAsBA,EAAiC,UAAI,GAAK,YAIhEA,EAAsBA,EAAgC,SAAI,GAAK,WAI/DA,EAAsBA,EAAoC,aAAI,GAAK,eAInEA,EAAsBA,EAAqC,cAAI,GAAK,eACvE,CAzBD,CAyBGA,IAA0BA,EAAwB,CAAC,IAkI/C,MAAME,UAA4BrC,SAC5B3qE,KAAKkI,IAAM,wBAA0B,QACrClI,KAAKitE,GAAK,sBAAwB,CAC3C,WAAAltE,GACIyM,MAAM,GAAqC,gBAAiBwgE,EAAoB9kE,IAAK,CACjFglE,MAAO,CACH,CACI3wC,KAAM,UACN4nC,YAAa,KAAa,gBAAiB,qKAE/C,CACI5nC,KAAM,SACN4nC,YAAa,KAAa,sBAAuB,gIAGzDA,YAAa,KAAa,uBAAwB,0KAClDqH,SAAS,GAEjB,CACA,QAAAJ,CAASjjE,GACL,YAAqB,IAAVA,EACAnI,KAAKgjB,aAEK,iBAAV7a,EACO,UAAVA,GAAsC,IAAjBA,EAAM1P,OACpBu0E,EAAoB9kE,IAEjB,SAAVC,EACO6kE,EAAoBC,GAExB9kE,EAEPkU,QAAQlU,GACD6kE,EAAoBC,GAExBD,EAAoB9kE,GAC/B,EAOG,MAAMilE,UAA6BxC,SAE7B3qE,KAAKkI,IAAM,QAAU,QAErBlI,KAAKotE,UAAY,WAAa,CACvC,WAAArtE,GACIyM,MAAM,GAAsC,iBAAkB2gE,EAAqBjlE,IAAK,CACpFglE,MAAO,CACH,CACI3wC,KAAM,UACN4nC,YAAa,KAAa,iBAAkB,kLAEhD,CACI5nC,KAAM,SACN4nC,YAAa,KAAa,wBAAyB,6JAG3DA,YAAa,KAAa,wBAAyB,8MACnDqH,SAAS,GAEjB,CACA,QAAAJ,CAASjjE,GACL,YAAqB,IAAVA,EACAnI,KAAKgjB,aAEK,iBAAV7a,EACO,UAAVA,EACOglE,EAAqBjlE,IAElB,SAAVC,EACOglE,EAAqBC,UAEzBjlE,EAEPkU,QAAQlU,GACDglE,EAAqBC,UAEzBD,EAAqBjlE,GAChC,CACA,OAAA2iE,CAAQC,EAAKjmE,EAAS9J,GAGlB,OAAO+vE,EAAIhmE,SAASm0B,qBACxB,EAuCJ,MAAMo0C,UAAyB1C,SAClB3qE,KAAKstE,kBAAoB,CAAC,SAAU,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAQ,QAC5GttE,KAAKutE,cAAgB,CAAG,QACxBvtE,KAAKwtE,cAAgB,GAAM,CACpC,WAAAztE,GACIyM,MAAM,GAAkC,aAAcihE,EAAqBh1C,WAAY,CACnFy0C,MAAO,CACH,CACI3wC,KAAM,SACNmvC,QAAS2B,EAAiBE,cAC1B5B,QAAS0B,EAAiBG,cAC1BE,aAAc,KAAa,yBAA0B,iFAEzD,CACInxC,KAAM,SACNkc,QAAS,wCAEb,CACI+zB,KAAMa,EAAiBC,oBAG/B9B,QAASiC,EAAqBh1C,WAC9B0rC,YAAa,KAAa,aAAc,kGAEhD,CACA,QAAAiH,CAASjjE,GACL,MAAc,WAAVA,GAAgC,SAAVA,EACfA,EAEJE,OAAOujE,EAAgBH,WAAWtjE,EAAOslE,EAAqBh1C,WAAY40C,EAAiBE,cAAeF,EAAiBG,eACtI,EAqKG,MAAMG,UAAiCxC,EAC1C,WAAAprE,GACIyM,MAAM,IACV,CACA,OAAAq+D,CAAQC,EAAKjmE,EAAS9C,GAClB,OAAO4rE,EAAyBC,cAAc/oE,EAAS,CACnDgpE,OAAQ/C,EAAI+C,OACZC,WAAYhD,EAAIgD,WAChBC,YAAajD,EAAIiD,YACjBC,uBAAwBlD,EAAIkD,uBAC5BxoE,WAAYslE,EAAIhmE,SAASU,WACzByoE,cAAenD,EAAImD,cACnBC,sBAAuBpD,EAAIoD,sBAC3B7uC,+BAAgCyrC,EAAIhmE,SAASu6B,+BAC7C8uC,cAAerD,EAAIhmE,SAASqpE,cAC5BC,WAAYtD,EAAIsD,WAChBC,+BAAgCvD,EAAIuD,gCAE5C,CACA,uCAAOC,CAAiCnmE,GACpC,MAAMomE,EAA2BpmE,EAAM0mB,OAAS1mB,EAAM3C,WAChDgpE,EAA4B/zE,KAAKC,MAAMyN,EAAMsmE,WAAatmE,EAAM3C,YACtE,IAAIkpE,EAA2Bj0E,KAAKC,MAAMyN,EAAMwmE,cAAgBxmE,EAAM3C,YAClE2C,EAAMymE,uBACNF,EAA2Bj0E,KAAKkE,IAAI+vE,EAA0BH,EAA2B,IAE7F,MAAMM,GAAgBL,EAA4BrmE,EAAM8lE,cAAgBS,IAA6BvmE,EAAMimE,WAAajmE,EAAM0mB,QAE9H,MAAO,CAAE0/C,2BAA0BC,4BAA2BE,2BAA0BG,eAAcC,iBAD7Er0E,KAAKC,MAAMyN,EAAM8lE,cAAgBY,GAE9D,CACA,4BAAOE,CAAsB5mE,EAAO0lE,GAChC,MAAMC,EAAa3lE,EAAM2lE,WACnBC,EAAc5lE,EAAM4lE,YACpBK,EAAajmE,EAAMimE,WACzB,IAAKjmE,EAAM6mE,QAAQC,QACf,MAAO,CACHC,cAAe,EACfC,YAAa,EACbC,aAAc,EACdC,6BAA6B,EAC7BC,mBAAmB,EACnBC,aAAc,EACdC,kBAAmB,EACnBC,wBAAyB,EACzBC,yBAA0Bj1E,KAAKC,MAAM0zE,EAAaL,GAClD4B,wBAAyB,EACzBC,yBAA0B7B,GAIlC,MAAMvD,EAA2BqD,EAAOrD,yBAClCqF,EAAkBrF,GAEjBriE,EAAM4lE,cAAgBvD,EAAyBuD,aAC/C5lE,EAAM3C,aAAeglE,EAAyBhlE,YAC9C2C,EAAMk3B,iCAAmCmrC,EAAyBnrC,gCAClEl3B,EAAMimE,aAAe5D,EAAyB4D,YAC9CjmE,EAAMymE,uBAAyBpE,EAAyBoE,sBACxDzmE,EAAMsmE,aAAejE,EAAyBiE,YAC9CtmE,EAAMwmE,gBAAkBnE,EAAyBmE,eACjDxmE,EAAM6mE,QAAQC,UAAYzE,EAAyBwE,QAAQC,SAC3D9mE,EAAM6mE,QAAQc,OAAStF,EAAyBwE,QAAQc,MACxD3nE,EAAM6mE,QAAQ1Z,OAASkV,EAAyBwE,QAAQ1Z,MACxDntD,EAAM6mE,QAAQe,aAAevF,EAAyBwE,QAAQe,YAC9D5nE,EAAM6mE,QAAQgB,mBAAqBxF,EAAyBwE,QAAQgB,kBACpE7nE,EAAM6mE,QAAQ9nE,YAAcsjE,EAAyBwE,QAAQ9nE,WAC7DiB,EAAM6mE,QAAQiB,QAAUzF,EAAyBwE,QAAQiB,OACzD9nE,EAAM+nE,yBAA2B1F,EAAyB0F,wBAG1D/nE,EAAMgoE,qBAAuB3F,EAAyB2F,mBACvD3qE,EAAa2C,EAAM3C,WACnB65B,EAAiCl3B,EAAMk3B,+BACvCuvC,EAAuBzmE,EAAMymE,qBAC7BwB,EAA0BjoE,EAAM6mE,QAAQgB,iBAC9C,IAAIT,EAAgBnB,GAAc,EAAI3zE,KAAKyP,MAA4B,EAAtB/B,EAAM6mE,QAAQiB,OAAa9nE,EAAM6mE,QAAQiB,MAC1F,MAAMI,EAAmBloE,EAAM6mE,QAAQ9nE,UACjCopE,EAAcnoE,EAAM6mE,QAAQ1Z,KAC5Bib,EAAcpoE,EAAM6mE,QAAQc,KAC5BI,EAAyB/nE,EAAM+nE,uBAC/BjC,EAAgB9lE,EAAM8lE,cACtBuC,EAAiBroE,EAAMqoE,eACvBL,EAAqBhoE,EAAMgoE,mBAC3BM,EAAiBL,EAA0B,EAAI,EACrD,IAAIV,EAA2Bj1E,KAAKC,MAAM0zE,EAAaL,GACvD,MAAM6B,EAA2BF,EAA2BtB,EAC5D,IAAIiB,GAA8B,EAC9BC,GAAoB,EACpBE,EAAoBiB,EAAiBlB,EACrCmB,EAAmBnB,EAAenB,EAClCuC,EAAyB,EAC7B,GAAoB,SAAhBL,GAA0C,QAAhBA,EAAuB,CACjD,MAAM,yBAAE/B,EAAwB,0BAAEC,EAAyB,yBAAEE,EAAwB,aAAEG,EAAY,iBAAEC,GAAqBnB,EAAyBW,iCAAiC,CAChLL,cAAeA,EACfW,qBAAsBA,EACtBH,WAAYtmE,EAAMsmE,WAClBE,cAAexmE,EAAMwmE,cACrB9/C,OAAQk/C,EACRvoE,WAAYA,EACZ4oE,WAAYA,IAKhB,GADcH,EAAgBa,EAClB,EACRO,GAA8B,EAC9BC,GAAoB,EACpBC,EAAe,EACfC,EAAoB,EACpBkB,EAAmBnB,EAAenB,MAEjC,CACD,IAAIwC,GAAiB,EACjBC,EAAkBtB,EAAe,EACrC,GAAoB,QAAhBe,EAAuB,CACvB,MAAMQ,EAAyBr2E,KAAK++C,MAAMg1B,EAA4BP,EAAgBS,GAA4Bc,GAC9GW,GAAsBN,GAAkBW,GAAkB3C,EAAOnD,yBAMjEkG,GAAiB,EACjBC,EAAkBhD,EAAOpD,0BAGzBmG,EAAkBE,EAAyBpB,CAEnD,CACA,GAAoB,SAAhBY,GAA0BM,EAAgB,CAC1CvB,GAA8B,EAC9B,MAAM0B,EAAyBxB,EAC/BC,EAAoB/0E,KAAKmE,IAAI4G,EAAa4oE,EAAY3zE,KAAKkE,IAAI,EAAGlE,KAAKC,MAAM,EAAIm0E,KAC7EsB,GAAsBN,GAAkBW,GAAkB3C,EAAOnD,0BAMjEmG,EAAkBhD,EAAOpD,0BAE7B8E,EAAe90E,KAAKmE,IAAIiyE,EAAiBp2E,KAAKkE,IAAI,EAAGlE,KAAKC,MAAM80E,EAAoBiB,KAChFlB,EAAewB,IACfJ,EAAyBl2E,KAAKmE,IAAI,EAAG2wE,EAAewB,IAExDL,EAAmBnB,EAAenB,EAAauC,EAC/CjB,EAA2Bj1E,KAAK++C,KAAM/+C,KAAKkE,IAAI4vE,EAA0BC,EAA4BP,EAAgBS,GAA6Bc,GAC9IW,GAEAtC,EAAOrD,yBAA2BriE,EAClC0lE,EAAOnD,wBAA0B8F,EACjC3C,EAAOpD,yBAA2B8E,IAGlC1B,EAAOrD,yBAA2B,KAClCqD,EAAOnD,wBAA0B,EAEzC,CACJ,CACJ,CAYA,MAAMsG,EAAkBv2E,KAAKC,MAAM21E,EAAmBK,GAChDtB,EAAe30E,KAAKmE,IAAIoyE,EAAiBv2E,KAAKkE,IAAI,EAAGlE,KAAKC,OAAQ81E,EAAiBN,EAAyB,GAAKQ,GAAqBrxC,EAAiCqxC,KAAsBvG,GACnM,IAAIsF,EAA0Bh1E,KAAKC,MAAM0zE,EAAagB,GACtD,MAAMO,EAA0BF,EAA0BrB,EAI1D,OAHAqB,EAA0Bh1E,KAAKC,MAAM+0E,EAA0BkB,GAGxD,CACHzB,cAHmBkB,EAA0B,EAA6B,EAI1EjB,YAHiC,SAAhBoB,EAAyB,EAAKzC,EAAasB,EAAec,EAI3Ed,eACAC,8BACAC,oBACAC,eACAC,oBACAC,0BACAC,2BACAC,0BACAC,2BAER,CACA,oBAAOhC,CAAc/oE,EAASimE,GAC1B,MAAMgD,EAA8B,EAAjBhD,EAAIgD,WACjBC,EAAgC,EAAlBjD,EAAIiD,YAClBvoE,EAA8B,EAAjBslE,EAAItlE,WACjB0oE,EAAoD,EAA5BpD,EAAIoD,sBAC5B7uC,EAAiCyrC,EAAIzrC,+BACrC8uC,EAAgBrD,EAAIqD,cACpBC,EAAatD,EAAIsD,WACjBH,EAAgBnD,EAAImD,cACpBgD,EAAoBpsE,EAAQlP,IAAI,KAChCu7E,EAA2C,YAAtBD,EAAkCpsE,EAAQlP,IAAI,KAA4Cs7E,EAC/GE,EAAkC,YAAtBD,EAAkCrsE,EAAQlP,IAAI,KAAmCu7E,EAC7FE,EAAiBvsE,EAAQlP,IAAI,KAC7Bq4E,EAAyBlD,EAAIkD,uBAC7BqD,EAAkBxsE,EAAQlP,IAAI,IAC9B27E,EAAiF,IAA9DzsE,EAAQlP,IAAI,IAAmC47E,WAClEC,EAAsB3sE,EAAQlP,IAAI,IAClCi5E,EAAuB/pE,EAAQlP,IAAI,KACnCilE,EAAU/1D,EAAQlP,IAAI,IACtBq5E,EAAUnqE,EAAQlP,IAAI,IACtB87E,EAAY5sE,EAAQlP,IAAI,KACxBu6E,EAAyBuB,EAAUC,sBACnCC,EAA6BF,EAAUG,kBACvCC,EAAqBJ,EAAUK,UAC/BC,EAA4BN,EAAUO,wBACtCC,EAAUptE,EAAQlP,IAAI,IACtBu8E,EAAoF,UAA5DrtE,EAAQlP,IAAI,KAC1C,IAAIw8E,EAAuBttE,EAAQlP,IAAI,IACnCs8E,GAAWC,IACXC,GAAwB,IAE5B,IAAIrtC,EAAmB,EACvB,GAAIwsC,EAAiB,CACjB,MAAMc,EAAa33E,KAAKkE,IAAIuvE,EAAuBsD,GACnD1sC,EAAmBrqC,KAAKyP,MAAMkoE,EAAajE,EAC/C,CACA,IAAItpC,EAAmB,EACnBwsC,IACAxsC,EAAmBr/B,EAAaslE,EAAIuD,gCAExC,IAAIltC,EAAkB,EAClBkxC,EAAkBlxC,EAAkB0D,EACpCytC,EAAkBD,EAAkBvtC,EACpC7D,EAAcqxC,EAAkBH,EACpC,MAAM3B,EAAiB1C,EAAajpC,EAAmBC,EAAmBqtC,EAC1E,IAAII,GAAqB,EACrBpC,GAAqB,EACrBqC,GAAkB,EACI,YAAtBtB,GAAmClD,GAEnCuE,GAAqB,EACrBpC,GAAqB,GAEH,OAAbgB,GAAkC,YAAbA,EAC1BhB,GAAqB,EAEH,mBAAbgB,IACLqB,EAAiBpB,GAErB,MAAMqB,EAAgB9E,EAAyBoB,sBAAsB,CACjEjB,WAAYA,EACZC,YAAaA,EACbvoE,WAAYA,EACZ65B,+BAAgCA,EAChC+uC,WAAYA,EACZQ,qBAAsBA,EACtBH,WAAY7T,EAAQnsC,IACpBkgD,cAAe/T,EAAQ3iC,OACvB+2C,QAASA,EACTkB,uBAAwBA,EACxBjC,cAAeA,EACfuC,eAAgBA,EAChBL,mBAAoBA,GACrBrF,EAAI+C,QAAU,IAAItD,GACe,IAAhCkI,EAAcvD,eAA8E,IAA9BuD,EAActD,cAE5EhuC,GAAmBsxC,EAAcrD,aACjCiD,GAAmBI,EAAcrD,aACjCkD,GAAmBG,EAAcrD,aACjCnuC,GAAewxC,EAAcrD,cAEjC,MAAMsD,EAAelC,EAAiBiC,EAAcrD,aAE9CuD,EAAiBl4E,KAAKkE,IAAI,EAAGlE,KAAKC,OAAOg4E,EAAexC,EAAyB,GAAK7wC,IACtFuzC,EAAqBjB,EAA6BE,EAAqB,EAQ7E,OAPI1B,IAEAqC,EAAiB/3E,KAAKkE,IAAI,EAAGg0E,GACZ,YAAbxB,IACAqB,EAAiB/3E,KAAKmE,IAAI4zE,EAAgBpB,KAG3C,CACH7tE,MAAOuqE,EACPj/C,OAAQk/C,EACR5sC,gBAAiBA,EACjB0D,iBAAkBA,EAClBwpC,+BAAgCvD,EAAIuD,+BACpCgE,gBAAiBA,EACjBvtC,iBAAkBA,EAClBwtC,gBAAiBA,EACjBO,iBAAkBV,EAClBlxC,YAAaA,EACbyxC,aAAcA,EACd1D,QAASyD,EACTE,eAAgBA,EAChBJ,mBAAoBA,EACpBpC,mBAAoBA,EACpBqC,eAAgBA,EAChBtC,uBAAwBA,EACxB6B,0BAA2BA,EAC3Be,cAAe,CACXrkD,IAAKmkD,EACLrvE,MAAO2sE,EACPrhD,OAASk/C,EAAc,EAAI6E,EAC3Bz6C,MAAO,GAGnB,EAkhBG,SAAS46C,EAA4BluE,GACxC,MAAMmuE,EAA8BnuE,EAAQlP,IAAI,IAChD,MAAoC,aAAhCq9E,EACOnuE,EAAQlP,IAAI,IAEgB,OAAhCq9E,CACX,CAsEA,SAASC,EAA+Bj5C,EAAYhX,GAChD,GAA0B,iBAAfgX,EACP,OAAOhX,EAEX,OAAQgX,GACJ,IAAK,SAAU,OAAO,EACtB,IAAK,UAAW,OAAO,EACvB,QAAS,OAAO,EAExB,EApkBA,SAAW+yC,GACPA,EAA2B,IAAI,MAC/BA,EAA8B,OAAI,SAClCA,EAA0B,GAAI,IACjC,CAJD,CAIGA,IAA0BA,EAAwB,CAAC,IA4pB/C,MAAMmG,EAAuB,uBAIvBC,EAA6B,CACtCC,kBAAmB,4CACnBC,oBAAqB,8CACrBC,cAAe,wCACfC,oBAAqB,8CACrBC,gBAAiB,0CACjBC,eAAgB,yCAChBC,eAAgB,0CAoUpB,SAASC,EAAa54E,EAAOioB,EAAcqpD,GACvC,MAAM10B,EAAM00B,EAAczuE,QAAQ7C,GAClC,OAAa,IAAT48C,EACO30B,EAEJqpD,EAAc10B,EACzB,CAkgBA,MAMa81B,EAAuB,CAChCl1C,WAAa,KANe,0CAMmC,KALjC,4CAFE,qCAQhCE,WAAY,SACZE,SAAW,KAAuB,GAAK,GACvCnzB,WAAY,EACZ8zB,cAAe,GAKNs6C,EAAwB,GACrC,SAASC,EAASC,GAEd,OADAF,EAAsBE,EAAOl+C,IAAMk+C,EAC5BA,CACX,CACO,MAAMC,EAAgB,CACzBC,kCAAmCH,EAAS,IAAItI,EAAoB,EAAwD,qCAAqC,EAAM,CAAE0I,oBAAqB,KAAa,oCAAqC,2MAChPC,wBAAyBL,EAAS,IAAItH,EAAuB,EAA8C,0BAA2B,KAAM,CAAC,KAAM,QAAS,OAAQ,CAChK4H,yBAA0B,CACtB,GACA,KAAa,+BAAgC,yEAC7C,IAEJF,oBAAqB,KAAa,0BAA2B,uKAEjEG,qBAAsBP,EAAS,IAt5EnC,cAAyClJ,EACrC,WAAA5qE,GACIyM,MAAM,EAA2C,uBAAwB,EAAsC,CAC3G+vB,KAAM,SACNiwC,KAAM,CAAC,OAAQ,KAAM,OACrB6H,iBAAkB,CACd,KAAa,4BAA6B,iEAC1C,KAAa,0BAA2B,4CACxC,KAAa,2BAA4B,4CAE7C7I,QAAS,OACT8I,KAAM,CAAC,iBACPnQ,YAAa,KAAa,uBAAwB,sFAE1D,CACA,QAAAiH,CAASjjE,GACL,OAAQA,GACJ,IAAK,OAAQ,OAAO,EACpB,IAAK,MAAO,OAAO,EACnB,IAAK,KAAM,OAAO,EAEtB,OAAOnI,KAAKgjB,YAChB,CACA,OAAA6nD,CAAQC,EAAKjmE,EAAS9J,GAClB,OAAc,IAAVA,EAEO+vE,EAAIsJ,qBAERr5E,CACX,IA03EAw5E,sBAAuBV,EAAS,IAAIjI,EAAgB,EAA4C,wBAAyB,GAAI,EAAG,WAAmD,CAC/KzH,YAAa,KAAa,wBAAyB,2PACnDmQ,KAAM,CAAC,oBAEXE,UAAWX,EAAS,IAAI3H,EAAmB,EAAgC,YAAa,KAAa,4BAA6B,oBAClIuI,aAAcZ,EAAS,IAAItI,EAAoB,EAAmC,gBAAgB,OAAO5vE,IACzG+4E,qCAAsCb,EAAS,IAAItI,EAAoB,EAA2D,wCAAwC,EAAM,CAC5KpH,YAAa,KAAa,uCAAwC,wEAClEmQ,KAAM,CAAC,oBAEXK,oBAAqBd,EAAS,IAAItH,EAAuB,EAA0C,sBAAuB,kBAAmB,CAAC,SAAU,kBAAmB,mBAAoB,SAAU,CACrM8H,iBAAkB,CACd,GACA,KAAa,6CAA8C,wEAC3D,KAAa,8CAA+C,yEAC5D,IAEJlQ,YAAa,KAAa,sBAAuB,8GAErDyQ,oBAAqBf,EAAS,IAAItH,EAAuB,EAA0C,sBAAuB,kBAAmB,CAAC,SAAU,kBAAmB,mBAAoB,SAAU,CACrM8H,iBAAkB,CACd,GACA,KAAa,6CAA8C,wEAC3D,KAAa,8CAA+C,yEAC5D,IAEJlQ,YAAa,KAAa,sBAAuB,8GAErD0Q,kBAAmBhB,EAAS,IAAItH,EAAuB,EAAwC,oBAAqB,OAAQ,CAAC,SAAU,OAAQ,SAAU,CACrJ8H,iBAAkB,CACd,GACA,KAAa,gCAAiC,wFAC9C,IAEJlQ,YAAa,KAAa,oBAAqB,mGAEnD2Q,oBAAqBjB,EAAS,IAAItH,EAAuB,GAA2C,sBAAuB,OAAQ,CAAC,SAAU,OAAQ,SAAU,CAC5J8H,iBAAkB,CACd,GACA,KAAa,kCAAmC,kFAChD,IAEJlQ,YAAa,KAAa,sBAAuB,+EAErD4Q,kBAAmBlB,EAAS,IAAItH,EAAuB,GAAyC,oBAAqB,kBAAmB,CAAC,SAAU,kBAAmB,mBAAoB,SAAU,CAChM8H,iBAAkB,CACd,GACA,KAAa,2CAA4C,sEACzD,KAAa,4CAA6C,uEAC1D,IAEJlQ,YAAa,KAAa,oBAAqB,0GAEnD6Q,WAAYnB,EAAS,IAAInH,EAAiB,GAAkC,aAAc,EAAuC,OAAQ,CAAC,OAAQ,OAAQ,WAAY,WAAY,QAv9EtL,SAA+BsI,GAC3B,OAAQA,GACJ,IAAK,OAAQ,OAAO,EACpB,IAAK,OAAQ,OAAO,EACpB,IAAK,WAAY,OAAO,EACxB,IAAK,WAAY,OAAO,EACxB,IAAK,OAAQ,OAAO,EAE5B,EA+8EsN,CAC9MX,iBAAkB,CACd,KAAa,yBAA0B,yDACvC,KAAa,yBAA0B,wDACvC,KAAa,6BAA8B,4FAC3C,KAAa,6BAA8B,8IAC3C,KAAa,yBAA0B,6LAE3ClQ,YAAa,KAAa,aAAc,4HAE5C8Q,gBAAiBpB,EAAS,IAAItI,EAAoB,GAAuC,mBAAmB,IAC5G2J,aAAcrB,EAAS,IAAItH,EAAuB,GAAoC,eAAgB,kBAAmB,CAAC,kBAAmB,SAAU,WAAY,SAAU,CACzK8H,iBAAkB,CACd,KAAa,sCAAuC,uFACpD,KAAa,6BAA8B,0CAC3C,KAAa,+BAAgC,0CAC7C,IAEJlQ,YAAa,KAAa,eAAgB,2GAE9CgR,wBAAyBtB,EAAS,IAvtBtC,cAAsClJ,EAClC,WAAA5qE,GACI,MAAMq1E,EAAW,CACbnG,QAAS,IAAsBoG,+BAA+BpG,QAC9DqG,mCAAoC,IAAsBD,+BAA+BC,oCAE7F9oE,MAAM,GAA+C,0BAA2B4oE,EAAU,CACtF,yCAA0C,CACtC74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClBgF,oBAAqB,KAAa,kCAAmC,kHAAmH,sCAE5L,oEAAqE,CACjE13C,KAAM,UACNivC,QAAS4J,EAASE,mCAClBnR,YAAa,KAAa,6DAA8D,4EAGpG,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClDqG,mCAAoChK,EAAQnjE,EAAMmtE,mCAAoCt1E,KAAKgjB,aAAasyD,oCAEhH,IA4rBAE,kBAAmB3B,EAAS,IAvrBhC,cAA2BlJ,EACvB,WAAA5qE,GACI,MAAMq1E,EAAW,CACbK,cAAc,EACdC,uBAAwB,SACxBC,4BAA4B,EAC5BC,aAAa,EACbC,4BAA4B,GAEhCrpE,MAAM,GAA8B,SAAU4oE,EAAU,CACpD,6BAA8B,CAC1B74C,KAAM,CAAC,UAAW,UAClBiwC,KAAM,EAAC,EAAM,UAAU,GACvB6H,iBAAkB,CACd,KAAa,kCAAmC,gCAChD,KAAa,oCAAqC,iEAClD,KAAa,mCAAoC,kCAErD7I,QAAS4J,EAASK,aAClBtR,YAAa,KAAa,6BAA8B,6DAE5D,uCAAwC,CACpC5nC,KAAM,CAAC,UAAW,UAClBiwC,KAAM,EAAC,EAAM,UAAU,GACvB6H,iBAAkB,CACd,KAAa,4CAA6C,0EAC1D,KAAa,8CAA+C,+DAC5D,KAAa,6CAA8C,6CAE/D7I,QAAS4J,EAASM,uBAClBvR,YAAa,KAAa,uCAAwC,wEAEtE,2CAA4C,CACxC5nC,KAAM,UACNivC,QAAS4J,EAASO,2BAClBxR,YAAa,KAAa,2CAA4C,0EAE1E,4BAA6B,CACzB5nC,KAAM,UACNivC,QAAS4J,EAASQ,YAClBzR,YAAa,KAAa,4BAA6B,6DAE3D,2CAA4C,CACxC5nC,KAAM,CAAC,UAAW,UAClBiwC,KAAM,EAAC,EAAM,UAAU,GACvB6H,iBAAkB,CACd,KAAa,gDAAiD,uCAC9D,KAAa,kDAAmD,8EAChE,KAAa,iDAAkD,8CAEnE7I,QAAS4J,EAASS,2BAClB1R,YAAa,KAAa,2CAA4C,2EAGlF,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHE,aAAc9B,EAAaxrE,EAAMstE,aAAcz1E,KAAKgjB,aAAayyD,aAAc,EAAC,GAAM,EAAO,WAC7FC,uBAAwB/B,EAAaxrE,EAAMutE,uBAAwB11E,KAAKgjB,aAAa0yD,uBAAwB,EAAC,GAAM,EAAO,WAC3HC,2BAA4BrK,EAAQnjE,EAAMwtE,2BAA4B31E,KAAKgjB,aAAa2yD,4BACxFC,YAAatK,EAAQnjE,EAAMytE,YAAa51E,KAAKgjB,aAAa4yD,aAC1DC,2BAA4BlC,EAAaxrE,EAAM0tE,2BAA4B71E,KAAKgjB,aAAa6yD,2BAA4B,EAAC,GAAM,EAAO,WAE/I,IAqnBAz2C,eAAgBy0C,EAAS,IAAItI,EAAoB,IAAuC,kBAAkB,EAAO,CAAEpH,YAAa,KAAa,iBAAkB,yHAC/J2R,SAAUjC,EAAS,IAAItI,EAAoB,GAAgC,YAAY,EAAM,CAAEpH,YAAa,KAAa,WAAY,kDACrI4R,mBAAoBlC,EAAS,IAAI3H,EAAmB,GAA0C,qBAAsB,GAAI,CAAE/H,YAAa,KAAa,qBAAsB,6CAC1K6R,iBAAkBnC,EAAS,IAAIjI,EAAgB,GAAwC,mBAAoB,EAAG,EAAG,IAAK,CAClHrvC,KAAM,SACNivC,QAAS,EACTE,QAAS,EACTC,QAAS,IACTsI,oBAAqB,KAAa,mBAAoB,wGAE1DgC,gBAAiBpC,EAAS,IAAItI,EAAoB,GAAuC,mBAAmB,EAAM,CAAEpH,YAAa,KAAa,kBAAmB,8FACjK+R,0BAA2BrC,EAAS,IAAItH,EAAuB,IAAmD,6BAA8B,gBAAiB,CAAC,gBAAiB,QAAS,SAAU,CAClM8H,iBAAkB,CACd,KAAa,iDAAkD,+EAC/D,KAAa,yCAA0C,gEACvD,KAAa,yCAA0C,iEAE3DlQ,YAAa,KAAa,4BAA6B,kFAE3DgS,qBAAsBtC,EAAS,IAAIjI,EAAgB,GAA4C,uBAAwB,IAAK,EAAG,IAAS,CACpIqI,oBAAqB,KAAa,uBAAwB,6FAE9DmC,gBAAiBvC,EAAS,IAAItI,EAAoB,GAAuC,mBAAmB,EAAO,CAAEpH,YAAa,KAAa,kBAAmB,mFAClKkS,SAAUxC,EAAS,IA19EvB,cAA6BlJ,EACzB,WAAA5qE,GACI,MAAMq1E,EAAW,CACbkB,aAAa,EACbC,kBAAkB,GAEtB/pE,MAAM,GAAgC,WAAY4oE,EAAU,CACxD,8BAA+B,CAC3B74C,KAAM,UACNivC,QAAS4J,EAASkB,YAClBnS,YAAa,KAAa,uBAAwB,oEAEtD,mCAAoC,CAChC5nC,KAAM,UACNivC,QAAS4J,EAASmB,iBAClBpS,YAAa,KAAa,4BAA6B,qGAGnE,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHe,YAAahL,EAAQnjE,EAAMmuE,YAAat2E,KAAKgjB,aAAaszD,aAC1DC,iBAAkBjL,EAAQnjE,EAAMouE,iBAAkBv2E,KAAKgjB,aAAauzD,kBAE5E,IA+7EAC,YAAa3C,EAAS,IAAItI,EAAoB,GAAmC,eAAe,IAChGkL,2BAA4B5C,EAAS,IAAItI,EAAoB,GAAkD,8BAA8B,EAAM,CAAEpH,YAAa,KAAa,6BAA8B,gFAC7MuS,eAAgB7C,EAAS,IAAInH,EAAiB,GAAsC,iBAAkB,EAA6C,QAAS,CAAC,QAAS,SAAU,QAAS,SAAU,SA/7EvM,SAAwCiK,GACpC,OAAQA,GACJ,IAAK,QAAS,OAAO,EACrB,IAAK,SAAU,OAAO,EACtB,IAAK,QAAS,OAAO,EACrB,IAAK,SAAU,OAAO,EACtB,IAAK,QAAS,OAAO,EAE7B,EAu7EiP,CAAExS,YAAa,KAAa,iBAAkB,0CAC3RyS,2BAA4B/C,EAAS,IAAItH,EAAuB,GAAkD,6BAA8B,MAAO,CAAC,MAAO,WAAY,MAAO,CAC9K8H,iBAAkB,CACd,KAAa,iCAAkC,uCAC/C,KAAa,sCAAuC,mGACpD,KAAa,gCAAiC,8CAElDlQ,YAAa,KAAa,6BAA8B,qEAE5D0S,YAAahD,EAAS,IAAInH,EAAiB,GAAmC,cAAeI,EAAsBgK,KAAM,OAAQ,CAAC,OAAQ,QAAS,YAAa,YAAa,gBAAiB,kBA/5ElM,SAAgCD,GAC5B,OAAQA,GACJ,IAAK,OAAQ,OAAO/J,EAAsBgK,KAC1C,IAAK,QAAS,OAAOhK,EAAsBiK,MAC3C,IAAK,YAAa,OAAOjK,EAAsBkK,UAC/C,IAAK,YAAa,OAAOlK,EAAsBmK,SAC/C,IAAK,gBAAiB,OAAOnK,EAAsBoK,aACnD,IAAK,iBAAkB,OAAOpK,EAAsBqK,cAE5D,EAs5E6O,CAAEhT,YAAa,KAAa,cAAe,iCACpRiT,uBAAwBvD,EAAS,IAAIjI,EAAgB,GAA8C,yBAA0B,EAAG,EAAG,WAAmD,CAAEzH,YAAa,KAAa,yBAA0B,4LAC5OkT,4BAA6BxD,EAAS,IAAItH,EAAuB,GAAmD,8BAA+B,UAAW,CAAC,UAAW,OAAQ,CAC9K8H,iBAAkB,CACd,KAAa,sCAAuC,qFACpD,KAAa,kCAAmC,iDAEpDJ,oBAAqB,KAAa,8BAA+B,0EAErEqD,YAAazD,EAAS,IAAIjI,EAAgB,GAAmC,cAAe,EAAG,EAAG,WAAmD,CAAEqI,oBAAqB,KAAa,cAAe,qFACxMsD,oBAAqB1D,EAAS,IAAItI,EAAoB,GAA2C,uBAAuB,IACxHiM,8BAA+B3D,EAAS,IAAItI,EAAoB,GAAqD,iCAAiC,IACtJkM,YAAa5D,EAAS,IAAItI,EAAoB,GAAmC,eAAe,IAChGmM,YAAa7D,EAAS,IAAItI,EAAoB,GAAmC,eAAe,EAAM,CAAEpH,YAAa,KAAa,cAAe,oFACjJwT,wBAAyB9D,EAAS,IAp4EtC,cAA4CtI,EACxC,WAAAxrE,GACIyM,MAAM,GAA+C,2BAA2B,EAAM,CAAE23D,YAAa,KAAa,0BAA2B,0EACjJ,CACA,OAAA0G,CAAQC,EAAKjmE,EAAS9J,GAClB,OAAOA,GAAS+vE,EAAI6M,uBACxB,IA+3EAC,eAAgB/D,EAAS,IApO7B,cAAmClJ,EAC/B,WAAA5qE,GACI,MAAMq1E,EAAW,CAAEnG,SAAS,EAAM4I,iBAAkB,aACpDrrE,MAAM,GAAsC,iBAAkB4oE,EAAU,CACpE,gCAAiC,CAC7B74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClBgF,oBAAqB,KAAa,yBAA0B,iJAEhE,yCAA0C,CACtC13C,KAAM,SACN03C,oBAAqB,KAAa,kCAAmC,4HACrEzH,KAAM,CACF,YACA,SAEJ6H,iBAAkB,CACd,KAAa,4CAA6C,0EAC1D,KAAa,wCAAyC,2FAE1D7I,QAAS,cAGrB,CACA,QAAAJ,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClD4I,iBAAkBzL,EAAUjkE,EAAM0vE,iBAAkB73E,KAAKgjB,aAAa60D,iBAAkB,CAAC,YAAa,UAE9G,IAoMAC,aAAcjE,EAAS,IApnD3B,cAAiClJ,EAC7B,WAAA5qE,GACI,MAAMq1E,EAAW,CAAEnG,SAAS,EAAM8I,aAAc,EAAGC,aAAc,eAAgBC,kBAAkB,GACnGzrE,MAAM,IAAqC,eAAgB4oE,EAAU,CACjE,8BAA+B,CAC3B74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,8BAA+B,+EACzDmQ,KAAM,CAAC,iBAEX,mCAAoC,CAChC/3C,KAAM,SACNivC,QAAS4J,EAAS2C,aAClBrM,QAAS,EACTC,QAAS,GACTxH,YAAa,KAAa,mCAAoC,wDAElE,mCAAoC,CAChC5nC,KAAM,SACNiwC,KAAM,CAAC,eAAgB,uBAAwB,oBAC/ChB,QAAS4J,EAAS4C,aAClB7T,YAAa,KAAa,mCAAoC,+OAElE,uCAAwC,CACpC5nC,KAAM,UACNivC,QAAS4J,EAAS6C,iBAClB9T,YAAa,KAAa,uCAAwC,+EAG9E,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClD8I,aAAcnM,EAAgBH,WAAWtjE,EAAM4vE,aAAc/3E,KAAKgjB,aAAa+0D,aAAc,EAAG,IAChGC,aAAc5L,EAAUjkE,EAAM6vE,aAAch4E,KAAKgjB,aAAag1D,aAAc,CAAC,eAAgB,uBAAwB,qBACrHC,iBAAkB3M,EAAQnjE,EAAM8vE,iBAAkBj4E,KAAKgjB,aAAai1D,kBAE5E,IA4kDAlzE,gCAAiC8uE,EAAS,IAAItH,EAAuB,GAAuD,kCAAmC,MAAO,CAAC,MAAO,OAAQ,OAAQ,CAC1L8H,iBAAkB,CACd,KAAa,sCAAuC,yCACpD,KAAa,uCAAwC,oDACrD,KAAa,sCAAuC,qCAExDlQ,YAAa,KAAa,kCAAmC,+EAEjE+T,qBAAsBrE,EAAS,IAAI3H,EAAmB,GAA4C,uBAAwB,KAC1HiM,sBAAuBtE,EAAS,IAAI/H,EAAkB,GAA6C,wBAAyB,EAAG5tE,GAAMA,GAAK,EAAI,EAAIA,EAAI,CAAE+1E,oBAAqB,KAAa,wBAAyB,sDACnNjY,KAAM6X,EAAS,IAz4EnB,cAAyBlJ,EACrB,WAAA5qE,GACI,MAAMq1E,EAAW,CACbgD,kBAAkB,EAClBC,8BAA+B,SAC/BC,oBAAqB,QACrBC,qBAAqB,EACrBC,oBAAoB,EACpB7yD,MAAM,GAEVnZ,MAAM,GAA4B,OAAQ4oE,EAAU,CAChD,+BAAgC,CAC5B74C,KAAM,UACNivC,QAAS4J,EAASgD,iBAClBjU,YAAa,KAAa,wBAAyB,0EAEvD,4CAA6C,CACzC5nC,KAAM,SACNiwC,KAAM,CAAC,QAAS,SAAU,aAC1BhB,QAAS4J,EAASiD,8BAClBhE,iBAAkB,CACd,KAAa,kDAAmD,uDAChE,KAAa,mDAAoD,2FACjE,KAAa,sDAAuD,uDAExElQ,YAAa,KAAa,qCAAsC,+FAEpE,kCAAmC,CAC/B5nC,KAAM,SACNiwC,KAAM,CAAC,QAAS,SAAU,aAC1BhB,QAAS4J,EAASkD,oBAClBjE,iBAAkB,CACd,KAAa,wCAAyC,4DACtD,KAAa,yCAA0C,mDACvD,KAAa,4CAA6C,yFAE9DlQ,YAAa,KAAa,2BAA4B,2EAE1D,kCAAmC,CAC/B5nC,KAAM,UACNivC,QAAS4J,EAASmD,oBAClBpU,YAAa,KAAa,2BAA4B,8FACtDsU,SAAU,MAEd,iCAAkC,CAC9Bl8C,KAAM,UACNivC,QAAS4J,EAASoD,mBAClBrU,YAAa,KAAa,0BAA2B,mKAEzD,mBAAoB,CAChB5nC,KAAM,UACNivC,QAAS4J,EAASzvD,KAClBw+C,YAAa,KAAa,YAAa,8HAGnD,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACH6C,iBAAkB9M,EAAQnjE,EAAMiwE,iBAAkBp4E,KAAKgjB,aAAao1D,kBACpEC,8BAA+E,kBAAzC9C,EAAO8C,8BACtC9C,EAAO8C,8BAAgC,SAAW,QACnDjM,EAAUjkE,EAAMkwE,8BAA+Br4E,KAAKgjB,aAAaq1D,8BAA+B,CAAC,QAAS,SAAU,cAC1HC,oBAA2D,kBAA/B/C,EAAO+C,oBAC5B/C,EAAO+C,oBAAsB,SAAW,QACzClM,EAAUjkE,EAAMmwE,oBAAqBt4E,KAAKgjB,aAAas1D,oBAAqB,CAAC,QAAS,SAAU,cACtGC,oBAAqBjN,EAAQnjE,EAAMowE,oBAAqBv4E,KAAKgjB,aAAau1D,qBAC1EC,mBAAoBlN,EAAQnjE,EAAMqwE,mBAAoBx4E,KAAKgjB,aAAaw1D,oBACxE7yD,KAAM2lD,EAAQnjE,EAAMwd,KAAM3lB,KAAKgjB,aAAa2C,MAEpD,IAi0EA+yD,qBAAsB7E,EAAS,IAAItI,EAAoB,GAA4C,wBAAwB,IAC3H0G,QAAS4B,EAAS,IAAItI,EAAoB,GAA+B,WAAW,EAAM,CAAEpH,YAAa,KAAa,UAAW,4DACjIwU,gBAAiB9E,EAAS,IAAItH,EAAuB,GAAuC,kBAAmB,OAAQ,CAAC,OAAQ,eAAgB,CAC5I8H,iBAAkB,CACd,KAAa,uBAAwB,0FACrC,KAAa,8BAA+B,gDAEhDlQ,YAAa,KAAa,kBAAmB,0DAEjDyU,iBAAkB/E,EAAS,IAAItI,EAAoB,GAAwC,oBAAoB,EAAM,CAAEpH,YAAa,KAAa,mBAAoB,kEACrK0U,wBAAyBhF,EAAS,IAAItI,EAAoB,GAA+C,2BAA2B,EAAO,CAAEpH,YAAa,KAAa,0BAA2B,yEAClM2U,sBAAuBjF,EAAS,IAAIjI,EAAgB,GAA6C,wBAAyB,IAAM,GAAI,KACpI,CAAEzH,YAAa,KAAa,wBAAyB,sLACrD4U,4BAA6BlF,EAAS,IAAItI,EAAoB,GAAmD,+BAA+B,EAAO,CAAEpH,YAAa,KAAa,8BAA+B,+FAClN5rC,WAAYs7C,EAAS,IAAI3H,EAAmB,GAAkC,aAAcuB,EAAqBl1C,WAAY,CAAE4rC,YAAa,KAAa,aAAc,gCACvKr/D,SAAU+uE,EAAS,IA/uEvB,cAA6B1I,EACzB,WAAAprE,GACIyM,MAAM,GACV,CACA,OAAAq+D,CAAQC,EAAKjmE,EAAS9C,GAClB,OAAO+oE,EAAIhmE,QACf,IA0uEAk0E,eAAgBnF,EAAS,IAAI7G,GAC7Br0C,SAAUk7C,EAAS,IAvuEvB,cAA6BxI,EACzB,WAAAtrE,GACIyM,MAAM,GAAgC,WAAYihE,EAAqB90C,SAAU,CAC7E4D,KAAM,SACNmvC,QAAS,EACTC,QAAS,IACTH,QAASiC,EAAqB90C,SAC9BwrC,YAAa,KAAa,WAAY,sCAE9C,CACA,QAAAiH,CAASjjE,GACL,MAAMmD,EAAIwgE,EAAkBC,MAAM5jE,EAAOnI,KAAKgjB,cAC9C,OAAU,IAAN1X,EACOmiE,EAAqB90C,SAEzBmzC,EAAkBE,MAAM1gE,EAAG,EAAG,IACzC,CACA,OAAAu/D,CAAQC,EAAKjmE,EAAS9J,GAGlB,OAAO+vE,EAAIhmE,SAAS6zB,QACxB,IAmtEAF,WAAYo7C,EAAS,IAAIxG,GACzB4L,eAAgBpF,EAAS,IAAI1G,GAC7B+L,cAAerF,EAAS,IAAItI,EAAoB,GAAqC,iBAAiB,EAAO,CAAEpH,YAAa,KAAa,gBAAiB,kLAC1JgV,aAActF,EAAS,IAAItI,EAAoB,GAAoC,gBAAgB,EAAO,CAAEpH,YAAa,KAAa,eAAgB,qFACtJiV,YAAavF,EAAS,IAAItI,EAAoB,GAAmC,eAAe,EAAM,CAAEpH,YAAa,KAAa,cAAe,sHACjJkV,aAAcxF,EAAS,IAprE3B,cAAiClJ,EAC7B,WAAA5qE,GACI,MAAMq1E,EAAW,CACbkE,SAAU,OACVC,oBAAqB,OACrBC,wBAAyB,OACzBC,qBAAsB,OACtBC,wBAAyB,OACzBC,mBAAoB,OACpBC,cAAe,OACfC,6BAA8B,+BAC9BC,iCAAkC,+BAClCC,8BAA+B,+BAC/BC,iCAAkC,GAClCC,4BAA6B,GAC7BC,wBAAyB,IAEvBC,EAAa,CACf59C,KAAM,SACNiwC,KAAM,CAAC,OAAQ,cAAe,QAC9BhB,QAAS4J,EAASkE,SAClBjF,iBAAkB,CACd,KAAa,oCAAqC,2CAClD,KAAa,2CAA4C,iDACzD,KAAa,oCAAqC,wEAGpD+F,EAA4B,CAAC,GAAI,wCAAyC,+BAAgC,mCAAoC,mCAAoC,mCAAoC,mCAAoC,gCAAiC,kCAAmC,+BAAgC,sCAAuC,kCAC3Y5tE,MAAM,GAAoC,eAAgB4oE,EAAU,CAChE,+BAAgC,CAC5BiF,mBAAoB,KAAa,0CAA2C,oLAEhF,0CAA2C,CACvClW,YAAa,KAAa,iDAAkD,iGACzEgW,GAEP,8CAA+C,CAC3ChW,YAAa,KAAa,qDAAsD,sGAC7EgW,GAEP,2CAA4C,CACxChW,YAAa,KAAa,kDAAmD,kGAC1EgW,GAEP,8CAA+C,CAC3ChW,YAAa,KAAa,qDAAsD,sGAC7EgW,GAEP,yCAA0C,CACtChW,YAAa,KAAa,gDAAiD,iGACxEgW,GAEP,mDAAoD,CAChD59C,KAAM,SACNivC,QAAS4J,EAASyE,6BAClBrN,KAAM4N,EACNjW,YAAa,KAAa,+BAAgC,iHAE9D,uDAAwD,CACpD5nC,KAAM,SACNivC,QAAS4J,EAAS0E,iCAClBtN,KAAM4N,EACNjW,YAAa,KAAa,mCAAoC,sHAElE,oDAAqD,CACjD5nC,KAAM,SACNivC,QAAS4J,EAAS2E,8BAClBvN,KAAM4N,EACNjW,YAAa,KAAa,gCAAiC,kHAE/D,uDAAwD,CACpD5nC,KAAM,SACNivC,QAAS4J,EAAS4E,iCAClBxN,KAAM4N,EACNjW,YAAa,KAAa,mCAAoC,qHAElE,kDAAmD,CAC/C5nC,KAAM,SACNivC,QAAS4J,EAAS6E,4BAClBzN,KAAM4N,EACNjW,YAAa,KAAa,8BAA+B,iHAGrE,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACH+D,SAAUlN,EAAUjkE,EAAMmxE,SAAUt5E,KAAKgjB,aAAas2D,SAAU,CAAC,OAAQ,cAAe,SACxFC,oBAAqBpxE,EAAMoxE,qBAAuBnN,EAAUjkE,EAAMoxE,oBAAqB,OAAQ,CAAC,OAAQ,cAAe,SACvHC,wBAAyBrxE,EAAMqxE,yBAA2BpN,EAAUjkE,EAAMqxE,wBAAyB,OAAQ,CAAC,OAAQ,cAAe,SACnIC,qBAAsBtxE,EAAMsxE,sBAAwBrN,EAAUjkE,EAAMsxE,qBAAsB,OAAQ,CAAC,OAAQ,cAAe,SAC1HC,wBAAyBvxE,EAAMuxE,yBAA2BtN,EAAUjkE,EAAMuxE,wBAAyB,OAAQ,CAAC,OAAQ,cAAe,SACnIC,mBAAoBxxE,EAAMwxE,oBAAsBvN,EAAUjkE,EAAMwxE,mBAAoB,OAAQ,CAAC,OAAQ,cAAe,SACpHC,cAAezxE,EAAMyxE,eAAiBxN,EAAUjkE,EAAMyxE,cAAe,OAAQ,CAAC,OAAQ,cAAe,SACrGC,6BAA8B3N,EAAmBC,OAAOhkE,EAAM0xE,6BAA8B75E,KAAKgjB,aAAa62D,8BAC9GC,iCAAkC5N,EAAmBC,OAAOhkE,EAAM2xE,iCAAkC95E,KAAKgjB,aAAa82D,kCACtHC,8BAA+B7N,EAAmBC,OAAOhkE,EAAM4xE,8BAA+B/5E,KAAKgjB,aAAa+2D,+BAChHC,iCAAkC9N,EAAmBC,OAAOhkE,EAAM6xE,iCAAkCh6E,KAAKgjB,aAAag3D,kCACtHC,4BAA6B/N,EAAmBC,OAAOhkE,EAAM8xE,4BAA6Bj6E,KAAKgjB,aAAai3D,6BAC5GC,wBAAyBhO,EAAmBC,OAAOhkE,EAAM+xE,wBAAyBl6E,KAAKgjB,aAAak3D,yBAE5G,IA6kEAI,0BAA2BzG,EAAS,IAAItI,EAAoB,GAAiD,6BAA6B,EAAO,CAAEpH,YAAa,KAAa,4BAA6B,0EAC1MoW,MAAO1G,EAAS,IA5kEpB,cAA0BlJ,EACtB,WAAA5qE,GACI,MAAMq1E,EAAW,CACbnG,SAAS,EACT/qD,MAAO,IACPs2D,YAAa,IACbC,QAAQ,EACRC,OAAO,GAEXluE,MAAM,GAA6B,QAAS4oE,EAAU,CAClD,uBAAwB,CACpB74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,gBAAiB,yCAE/C,qBAAsB,CAClB5nC,KAAM,SACNivC,QAAS4J,EAASlxD,MAClBwnD,QAAS,EACTC,QAAS,IACTxH,YAAa,KAAa,cAAe,uEAE7C,sBAAuB,CACnB5nC,KAAM,UACNivC,QAAS4J,EAASqF,OAClBtW,YAAa,KAAa,eAAgB,kFAE9C,2BAA4B,CACxB5nC,KAAM,UACNmvC,QAAS,EACTF,QAAS4J,EAASoF,YAClBrW,YAAa,KAAa,oBAAqB,sHAEnD,qBAAsB,CAClB5nC,KAAM,UACNivC,QAAS4J,EAASsF,MAClBvW,YAAa,KAAa,cAAe,6DAGrD,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClD/qD,MAAO0nD,EAAgBH,WAAWtjE,EAAM+b,MAAOlkB,KAAKgjB,aAAakB,MAAO,EAAG,KAC3Eu2D,OAAQnP,EAAQnjE,EAAMsyE,OAAQz6E,KAAKgjB,aAAay3D,QAChDD,YAAa5O,EAAgBH,WAAWtjE,EAAMqyE,YAAax6E,KAAKgjB,aAAaw3D,YAAa,EAAG,KAC7FE,MAAOpP,EAAQnjE,EAAMuyE,MAAO16E,KAAKgjB,aAAa03D,OAEtD,IAyhEAC,aAAc9G,EAAS,IAAItI,EAAoB,GAAoC,gBAAgB,IACnGjyC,cAAeu6C,EAAS,IAAI/H,EAAkB,GAAqC,gBAAiB2B,EAAqBn0C,cAAep7B,GAAK4tE,EAAkBE,MAAM9tE,GAAI,EAAG,IAAK,CAAEimE,YAAa,KAAa,gBAAiB,6CAC9NyW,UAAW/G,EAAS,IAxrDxB,cAA8BlJ,EAC1B,WAAA5qE,GACI,MAAMq1E,EAAW,CAAEnG,QAASlC,EAAsB8N,QAClDruE,MAAM,GAAiC,YAAa4oE,EAAU,CAC1D,2BAA4B,CACxB74C,KAAM,SACN+3C,KAAM,CAAC,gBACP9H,KAAM,CAACO,EAAsB+N,IAAK/N,EAAsB8N,OAAQ9N,EAAsBgO,IACtFvP,QAAS4J,EAASnG,QAClBoF,iBAAkB,CACd,KAAa,+BAAgC,iCAC7C,KAAa,kCAAmC,oEAChD,KAAa,8BAA+B,uFAEhDlQ,YAAa,KAAa,UAAW,sDAGjD,CACA,QAAAiH,CAASmK,GACL,OAAKA,GAA4B,iBAAXA,EAIf,CACHtG,QAAS7C,EAFCmJ,EAEetG,QAASjvE,KAAKgjB,aAAaisD,QAAS,CAAClC,EAAsB+N,IAAK/N,EAAsB8N,OAAQ9N,EAAsBgO,MAJtI/6E,KAAKgjB,YAMpB,IA+pDAmvD,qBAAsB0B,EAAS,IA/jDnC,cAAyClJ,EACrC,WAAA5qE,GACIyM,MAAM,GAA4C,uBAAwB,GAC9E,CACA,QAAA4+D,CAASjjE,GACL,MAAqB,iBAAVA,GAAsB,kBAAkBwD,KAAKxD,IACnCswD,WAAWtwD,EAAMwuC,UAAU,EAAGxuC,EAAM1P,OAAS,IAIvDmzE,EAAgBH,WAAWtjE,EAAOnI,KAAKgjB,aAAc,EAAG,IAEvE,CACA,OAAA6nD,CAAQC,EAAKjmE,EAAS9J,GAClB,OAAIA,EAAQ,EAED6wE,EAAgBH,YAAY1wE,EAAQ+vE,EAAIhmE,SAASu6B,+BAAgCr/B,KAAKgjB,aAAc,EAAG,KAGvGjoB,CAEf,IA2iDAyK,WAAYquE,EAAS,IAviDzB,cAA+B/H,EAC3B,WAAA/rE,GACIyM,MAAM,GAAkC,aAAcihE,EAAqBjoE,WAAYtH,GAAK4tE,EAAkBE,MAAM9tE,EAAG,EAAG,KAAM,CAAE+1E,oBAAqB,KAAa,aAAc,0PACtL,CACA,OAAApJ,CAAQC,EAAKjmE,EAAS9J,GAIlB,OAAO+vE,EAAIhmE,SAASU,UACxB,IA+hDAw1E,YAAanH,EAAS,IAhwC1B,cAA4ClJ,EACxC,WAAA5qE,GACIyM,MAAM,GAAmC,cAAe,CAAE+kE,WAAY,EAAkC0J,SAAU,MAAQ,CACtH1+C,KAAM,SACNiwC,KAAM,CAAC,MAAO,KAAM,WAAY,YAChC6H,iBAAkB,CACd,KAAa,kBAAmB,kCAChC,KAAa,iBAAkB,iDAC/B,KAAa,uBAAwB,sEACrC,KAAa,uBAAwB,8CAEzC7I,QAAS,KACTrH,YAAa,KAAa,cAAe,0CAEjD,CACA,QAAAiH,CAAS4P,GACL,IAAIzJ,EAAavxE,KAAKgjB,aAAauuD,WAC/B0J,EAAWj7E,KAAKgjB,aAAai4D,SAmBjC,YAlB2B,IAAhBD,IACoB,mBAAhBA,GACPzJ,EAAa,EACb0J,EAAWD,GAGXzJ,EADqB,aAAhByJ,EACQ,EAEQ,aAAhBA,EACQ,EAEQ,OAAhBA,EACQ,EAGA,GAGd,CACHzJ,aACA0J,WAER,IAytCAzJ,oBAAqBqC,EAAS,IAAIjI,EAAgB,GAA2C,sBAAuB,EAAG,EAAG,MAC1HsP,cAAerH,EAAS,IAAItI,EAAoB,GAAqC,iBAAiB,EAAO,CAAEpH,YAAa,KAAa,gBAAiB,uJAC1JgX,MAAOtH,EAAS,IAAItI,EAAoB,GAA6B,SAAS,EAAM,CAAEpH,YAAa,KAAa,QAAS,+EACzHiX,cAAevH,EAAS,IAAItH,EAAuB,GAAqC,gBAAiB,SAAU,CAAC,SAAU,OAAQ,SAAU,CAAEpI,YAAa,KAAa,gBAAiB,mCAC7L6K,QAAS6E,EAAS,IAliDtB,cAA4BlJ,EACxB,WAAA5qE,GACI,MAAMq1E,EAAW,CACbnG,SAAS,EACT3Z,KAAM,eACNwa,KAAM,QACNC,WAAY,YACZsL,UAAU,EACVrL,kBAAkB,EAClB9oE,UAAW,IACX+oE,MAAO,EACPqL,0BAA0B,EAC1BC,wBAAwB,EACxBC,sBAAuB,EACvBC,2BAA4B,GAEhCjvE,MAAM,GAA+B,UAAW4oE,EAAU,CACtD,yBAA0B,CACtB74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,kBAAmB,2CAEjD,0BAA2B,CACvB5nC,KAAM,UACNivC,QAAS4J,EAASiG,SAClBlX,YAAa,KAAa,mBAAoB,0DAElD,sBAAuB,CACnB5nC,KAAM,SACNiwC,KAAM,CAAC,eAAgB,OAAQ,OAC/B6H,iBAAkB,CACd,KAAa,4BAA6B,4EAC1C,KAAa,oBAAqB,oGAClC,KAAa,mBAAoB,4FAErC7I,QAAS4J,EAAS9f,KAClB6O,YAAa,KAAa,eAAgB,sCAE9C,sBAAuB,CACnB5nC,KAAM,SACNiwC,KAAM,CAAC,OAAQ,SACfhB,QAAS4J,EAAStF,KAClB3L,YAAa,KAAa,eAAgB,mDAE9C,4BAA6B,CACzB5nC,KAAM,SACNiwC,KAAM,CAAC,SAAU,aACjBhB,QAAS4J,EAASrF,WAClB5L,YAAa,KAAa,qBAAsB,+CAEpD,uBAAwB,CACpB5nC,KAAM,SACNivC,QAAS4J,EAASnF,MAClBvE,QAAS,EACTC,QAAS,EACTa,KAAM,CAAC,EAAG,EAAG,GACbrI,YAAa,KAAa,gBAAiB,sDAE/C,kCAAmC,CAC/B5nC,KAAM,UACNivC,QAAS4J,EAASpF,iBAClB7L,YAAa,KAAa,2BAA4B,uEAE1D,2BAA4B,CACxB5nC,KAAM,SACNivC,QAAS4J,EAASluE,UAClBi9D,YAAa,KAAa,oBAAqB,kFAEnD,0CAA2C,CACvC5nC,KAAM,UACNivC,QAAS4J,EAASkG,yBAClBnX,YAAa,KAAa,mCAAoC,gFAElE,wCAAyC,CACrC5nC,KAAM,UACNivC,QAAS4J,EAASmG,uBAClBpX,YAAa,KAAa,iCAAkC,iFAEhE,uCAAwC,CACpC5nC,KAAM,SACNivC,QAAS4J,EAASoG,sBAClBrX,YAAa,KAAa,gCAAiC,8DAE/D,4CAA6C,CACzC5nC,KAAM,SACNivC,QAAS4J,EAASqG,2BAClBtX,YAAa,KAAa,qCAAsC,kJAG5E,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClDoM,SAAU/P,EAAQnjE,EAAMkzE,SAAUr7E,KAAKgjB,aAAaq4D,UACpD/lB,KAAM8W,EAAUjkE,EAAMmtD,KAAMt1D,KAAKgjB,aAAasyC,KAAM,CAAC,eAAgB,OAAQ,QAC7Ewa,KAAM1D,EAAUjkE,EAAM2nE,KAAM9vE,KAAKgjB,aAAa8sD,KAAM,CAAC,QAAS,SAC9DC,WAAY3D,EAAUjkE,EAAM4nE,WAAY/vE,KAAKgjB,aAAa+sD,WAAY,CAAC,SAAU,cACjFC,iBAAkB1E,EAAQnjE,EAAM6nE,iBAAkBhwE,KAAKgjB,aAAagtD,kBACpEC,MAAOrE,EAAgBH,WAAWtjE,EAAM8nE,MAAO,EAAG,EAAG,GACrD/oE,UAAW0kE,EAAgBH,WAAWtjE,EAAMjB,UAAWlH,KAAKgjB,aAAa9b,UAAW,EAAG,KACvFo0E,yBAA0BhQ,EAAQnjE,EAAMmzE,yBAA0Bt7E,KAAKgjB,aAAas4D,0BACpFC,uBAAwBjQ,EAAQnjE,EAAMozE,uBAAwBv7E,KAAKgjB,aAAau4D,wBAChFC,sBAAuB1P,EAAkBE,MAAM7jE,EAAMqzE,uBAAyBx7E,KAAKgjB,aAAaw4D,sBAAuB,EAAG,IAC1HC,2BAA4B3P,EAAkBE,MAAM7jE,EAAMszE,4BAA8Bz7E,KAAKgjB,aAAay4D,2BAA4B,EAAG,GAEjJ,IAs7CAC,WAAY7H,EAAS,IAAItH,EAAuB,GAAkC,aAAc,OAAQ,CAAC,OAAQ,UAAW,UAC5HoP,4BAA6B9H,EAAS,IAAI/H,EAAkB,GAAmD,8BAA+B,EAAG5tE,GAAY,IAANA,EAAU,EAAIA,EAAI,CAAE+1E,oBAAqB,KAAa,8BAA+B,yFAC5O2H,eAAgB/H,EAAS,IAAItI,EAAoB,GAAsC,kBAAkB,EAAO,CAC5G0I,oBAAqB,KACf,KAAa,qBAAsB,yEACnC,KAAa,iBAAkB,6EAEzC4H,4BAA6BhI,EAAS,IAAItI,EAAoB,GAAmD,+BAA+B,EAAM,CAAEpH,YAAa,KAAa,8BAA+B,wDACjN2X,oBAAqBjI,EAAS,IAAInH,EAAiB,GAA2C,sBAAuB,SAAU,MAAO,CAAC,UAAW,OA17CtJ,SAAwCoP,GACpC,MAA4B,YAAxBA,EACQ,KAAuB,UAAY,UAExC,QACX,EAq7C8L,CACtL3H,yBAA0B,CACtB,KAAa,8BAA+B,qEAC5C,KAAa,0BAA2B,iEAE5CF,oBAAqB,KAAa,CAC9Bt6E,IAAK,sBACLoiF,QAAS,CACL,kFACA,2GAEL,+QAEPC,iBAAkBnI,EAAS,IAAItH,EAAuB,GAAwC,mBAAoB,SAAU,CAAC,SAAU,QAAS,CAC5I4H,yBAA0B,CACtB,KAAa,0BAA2B,iDACxC,KAAa,wBAAyB,sCAE1CF,oBAAqB,KAAa,mBAAoB,wFAE1DgI,iBAAkBpI,EAAS,IAAIjI,EAAgB,GAAwC,mBAAoB,IAAO,EAAG,IAAQ,CACzHqI,oBAAqB,KAAa,mBAAoB,kFAE1DiI,qBAAsBrI,EAAS,IAAItH,EAAuB,GAA4C,uBAAwB,aAAc,CAAC,MAAO,aAAc,aAAc,CAC5K4H,yBAA0B,CACtB,KAAa,2BAA4B,mCACzC,KAAa,kCAAmC,oDAChD,KAAa,iCAAkC,sEAEnDF,oBAAqB,KAAa,uBAAwB,4EAE9DkI,oBAAqBtI,EAAS,IAAItI,EAAoB,GAA2C,uBAAuB,EAAM,CAAEpH,YAAa,KAAa,sBAAuB,2EACjLiY,mBAAoBvI,EAAS,IAAIjI,EAAgB,GAA0C,qBAAsB,EAAG,EAAG,IACvHhR,QAASiZ,EAAS,IAr9CtB,cAA4BlJ,EACxB,WAAA5qE,GACIyM,MAAM,GAA+B,UAAW,CAAEiiB,IAAK,EAAGwJ,OAAQ,GAAK,CACnE,qBAAsB,CAClBsE,KAAM,SACNivC,QAAS,EACTE,QAAS,EACTC,QAAS,IACTxH,YAAa,KAAa,cAAe,wFAE7C,wBAAyB,CACrB5nC,KAAM,SACNivC,QAAS,EACTE,QAAS,EACTC,QAAS,IACTxH,YAAa,KAAa,iBAAkB,2FAGxD,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACH9mD,IAAKm9C,EAAgBH,WAAWtjE,EAAMsmB,IAAK,EAAG,EAAG,KACjDwJ,OAAQ2zC,EAAgBH,WAAWtjE,EAAM8vB,OAAQ,EAAG,EAAG,KAE/D,IA07CAokD,QAASxI,EAAS,IA7RtB,cAA4BlJ,EACxB,WAAA5qE,GACI,MAAMq1E,EAAW,CAAEnG,SAAS,EAAMqN,kBAAmB,cACrD9vE,MAAM,GAA+B,UAAW4oE,EAAU,CACtD,yBAA0B,CACtB74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClBgF,oBAAqB,KAAa,kBAAmB,8DAEzD,mCAAoC,CAChC13C,KAAM,SACN03C,oBAAqB,KAAa,4BAA6B,6HAC/DzH,KAAM,CACF,aACA,SAEJ6H,iBAAkB,CACd,KAAa,uCAAwC,2EACrD,KAAa,kCAAmC,+FAEpD7I,QAAS,eAGrB,CACA,QAAAJ,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClDqN,kBAAmBlQ,EAAUjkE,EAAMm0E,kBAAmBt8E,KAAKgjB,aAAas5D,kBAAmB,CAAC,aAAc,UAElH,IA6PAC,eAAgB1I,EAAS,IAz7C7B,cAAmClJ,EAC/B,WAAA5qE,GACI,MAAMq1E,EAAW,CACbnG,SAAS,EACTuN,OAAO,GAEXhwE,MAAM,GAAsC,iBAAkB4oE,EAAU,CACpE,gCAAiC,CAC7B74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,yBAA0B,0FAExD,8BAA+B,CAC3B5nC,KAAM,UACNivC,QAAS4J,EAASoH,MAClBrY,YAAa,KAAa,uBAAwB,mGAG9D,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClDuN,MAAOlR,EAAQnjE,EAAMq0E,MAAOx8E,KAAKgjB,aAAaw5D,OAEtD,IA85CAC,uBAAwB5I,EAAS,IAAItH,EAAuB,GAA8C,yBAA0B,OAAQ,CAAC,OAAQ,UAAW,CAC5J8H,iBAAkB,CACd,KAAa,8BAA+B,oCAC5C,KAAa,gCAAiC,uCAElDlQ,YAAa,KAAa,yBAA0B,kFAExDuY,YAAa7I,EAAS,IAv5C1B,cAAgClJ,EAC5B,WAAA5qE,GACIyM,MAAM,GAAmC,mBAAe7Q,EAC5D,CACA,QAAAyvE,CAASjjE,GACL,YAAqB,IAAVA,EACAnI,KAAKgjB,aAEK,iBAAV7a,EACAA,EAEJnI,KAAKgjB,YAChB,IA44CA25D,0BAA2B9I,EAAS,IAAItI,EAAoB,GAAiD,6BAA6B,EAAO,CAAEpH,YAAa,KAAa,4BAA6B,wFAC1MyY,iBAAkB/I,EAAS,IA34C/B,cAAqClJ,EACjC,WAAA5qE,GACI,MAAMq1E,EAAW,CACbp8E,MAAO,KACPq9E,SAAU,MACV9xB,QAAS,OAEPs4B,EAAQ,CACV,CAAEtgD,KAAM,WACR,CACIA,KAAM,SACNiwC,KAAM,CAAC,KAAM,SAAU,OACvB6H,iBAAkB,CAAC,KAAa,KAAM,oDAAqD,KAAa,SAAU,wCAAyC,KAAa,MAAO,qCAGvL7nE,MAAM,GAAwC,mBAAoB4oE,EAAU,CACxE74C,KAAM,SACNugD,sBAAsB,EACtBloD,WAAY,CACR2vB,QAAS,CACL2oB,MAAO2P,EACPrR,QAAS4J,EAAS7wB,QAClB4f,YAAa,KAAa,2BAA4B,6CAE1DkS,SAAU,CACNnJ,MAAO2P,EACPrR,QAAS4J,EAASiB,SAClBlS,YAAa,KAAa,4BAA6B,8CAE3DnrE,MAAO,CACHk0E,MAAO2P,EACPrR,QAAS4J,EAASp8E,MAClBmrE,YAAa,KAAa,yBAA0B,+DAG5DqH,QAAS4J,EACTnB,oBAAqB,KAAa,mBAAoB,2UAA4U,2CAEtYj0E,KAAKgjB,aAAeoyD,CACxB,CACA,QAAAhK,CAASjjE,GACL,GAAqB,kBAAVA,EAAqB,CAE5B,MAAMpN,EAAQoN,EAAQ,KAAO,MAC7B,MAAO,CAAEkuE,SAAUt7E,EAAOwpD,QAASxpD,EAAO/B,MAAO+B,EACrD,CACA,IAAKoN,GAA0B,iBAAVA,EAEjB,OAAOnI,KAAKgjB,aAEhB,MAAM,MAAEhqB,EAAK,SAAEq9E,EAAQ,QAAE9xB,GAAYp8C,EAC/BkkE,EAAgB,CAAC,KAAM,SAAU,OACvC,IAAI0Q,EACAC,EACAC,EAmBJ,OAjBIF,EADiB,kBAAV/jF,EACUA,EAAQ,KAAO,MAGfozE,EAAUpzE,EAAOgH,KAAKgjB,aAAahqB,MAAOqzE,GAG3D2Q,EADoB,kBAAb3G,EACaA,EAAW,KAAO,MAGlBjK,EAAUiK,EAAUr2E,KAAKgjB,aAAaqzD,SAAUhK,GAGpE4Q,EADmB,kBAAZ14B,EACYA,EAAU,KAAO,MAGjB6nB,EAAU7nB,EAASvkD,KAAKgjB,aAAauhC,QAAS8nB,GAE9D,CACHrzE,MAAO+jF,EACP1G,SAAU2G,EACVz4B,QAAS04B,EAEjB,IA8zCAC,sBAAuBrJ,EAAS,IAAIjI,EAAgB,GAA6C,wBAAyB,GAAI,EAAG,WAAmD,CAAEzH,YAAa,KAAa,wBAAyB,qFACzOgZ,SAAUtJ,EAAS,IAAItI,EAAoB,GAAgC,YAAY,IACvF6R,gBAAiBvJ,EAAS,IA/sC9B,cAA8BlJ,EAC1B,WAAA5qE,GAEIyM,MAAM,GAAuC,uBAD5B7Q,EAErB,CACA,QAAAyvE,CAASmK,GACL,OAAKA,GAA4B,iBAAXA,EAGfA,EAFIv1E,KAAKgjB,YAGpB,IAssCAq6D,aAAcxJ,EAAS,IAAItI,EAAoB,GAAoC,gBAAgB,EAAO,CAAEpH,YAAa,KAAa,eAAgB,qDAAsDmZ,2BAA4B,KAAa,wBAAyB,sDAC9Qr4E,wBAAyB4uE,EAAS,IAAItI,EAAoB,GAA+C,2BAA2B,EAAM,CAAEpH,YAAa,KAAa,0BAA2B,iEAAkEoZ,YAAY,KAC/QC,mBAAoB3J,EAAS,IAAItH,EAAuB,GAA0C,qBAAuB,KAAmB,SAAW,KAAO,CAAC,MAAO,KAAM,UAAW,CAAEpI,YAAa,KAAa,qBAAsB,iEACzOsZ,oBAAqB5J,EAAS,IAAItH,EAAuB,GAA2C,sBAAuB,OAAQ,CAAC,OAAQ,SAAU,OAAQ,OAAQ,CAClK8H,iBAAkB,CACd,GACA,GACA,GACA,KAAa,0BAA2B,qDAE5ClQ,YAAa,KAAa,sBAAuB,wEAErDuZ,iCAAkC7J,EAAS,IAAItI,EAAoB,GAAwD,oCAAoC,EAAO,CAAEpH,YAAa,KAAa,mCAAoC,uGACtO6O,4BAA6Ba,EAAS,IAAItH,EAAuB,GAAmD,8BAA+B,WAAY,CAAC,WAAY,KAAM,SAClLvnE,iBAAkB6uE,EAAS,IAAItH,EAAuB,IAAyC,mBAAoB,YAAa,CAAC,OAAQ,WAAY,YAAa,WAAY,OAAQ,CAClL8H,iBAAkB,CACd,GACA,KAAa,4BAA6B,wEAC1C,KAAa,6BAA8B,uDAC3C,KAAa,4BAA6B,+CAC1C,IAEJlQ,YAAa,KAAa,mBAAoB,mEAElDwZ,6BAA8B9J,EAAS,IAAIjI,EAAgB,IAAqD,+BAAgC,GAAI,EAAG,MACvJgS,iBAAkB/J,EAAS,IAAItI,EAAoB,IAAyC,oBAAoB,EAAM,CAAEpH,YAAa,KAAa,mBAAoB,+DACtK0Z,OAAQhK,EAAS,IAnyCrB,cAA2BlJ,EACvB,WAAA5qE,GACI,MAAMq1E,EAAW,GACX0I,EAAe,CAAEvhD,KAAM,SAAU4nC,YAAa,KAAa,cAAe,2EAChF33D,MAAM,IAA+B,SAAU4oE,EAAU,CACrD74C,KAAM,QACN/gC,MAAO,CACH0xE,MAAO,CACH4Q,EACA,CACIvhD,KAAM,CACF,UAEJ3H,WAAY,CACR/pB,OAAQizE,EACR5jD,MAAO,CACHqC,KAAM,SACN4nC,YAAa,KAAa,eAAgB,+BAC1C1sB,OAAQ,iBAM5B+zB,QAAS4J,EACTjR,YAAa,KAAa,SAAU,2JAE5C,CACA,QAAAiH,CAASjjE,GACL,GAAI7L,MAAMC,QAAQ4L,GAAQ,CACtB,MAAM01E,EAAS,GACf,IAAK,MAAME,KAAY51E,EACnB,GAAwB,iBAAb41E,EACPF,EAAO5iF,KAAK,CACR4P,OAAQ+gE,EAAgBH,WAAWsS,EAAU,EAAG,EAAG,KACnD7jD,MAAO,YAGV,GAAI6jD,GAAgC,iBAAbA,EAAuB,CAC/C,MAAM1iF,EAAU0iF,EAChBF,EAAO5iF,KAAK,CACR4P,OAAQ+gE,EAAgBH,WAAWpwE,EAAQwP,OAAQ,EAAG,EAAG,KACzDqvB,MAAO7+B,EAAQ6+B,OAEvB,CAGJ,OADA2jD,EAAOviF,KAAK,CAACpC,EAAGC,IAAMD,EAAE2R,OAAS1R,EAAE0R,QAC5BgzE,CACX,CACA,OAAO79E,KAAKgjB,YAChB,IAkvCAyuD,UAAWoC,EAAS,IArtCxB,cAA8BlJ,EAC1B,WAAA5qE,GACI,MAAMq1E,EAAW,CACb4I,SAAU,EACVC,WAAY,EACZnM,UAAW,GACXoM,YAAY,EACZtM,mBAAmB,EACnBuM,qBAAqB,EACrBnM,wBAAyB,GACzBoM,qBAAsB,GACtB1M,sBAAuB,GACvB2M,mBAAoB,GACpBC,kBAAkB,EAClBC,yBAAyB,EACzBC,cAAc,EACdC,0CAA0C,GAE9CjyE,MAAM,IAAkC,YAAa4oE,EAAU,CAC3D,4BAA6B,CACzB74C,KAAM,SACNiwC,KAAM,CAAC,OAAQ,UAAW,UAC1B6H,iBAAkB,CACd,KAAa,0BAA2B,+DACxC,KAAa,6BAA8B,kDAC3C,KAAa,yBAA0B,kDAE3C7I,QAAS,OACTrH,YAAa,KAAa,qBAAsB,uDAEpD,8BAA+B,CAC3B5nC,KAAM,SACNiwC,KAAM,CAAC,OAAQ,UAAW,UAC1B6H,iBAAkB,CACd,KAAa,4BAA6B,iEAC1C,KAAa,+BAAgC,oDAC7C,KAAa,2BAA4B,oDAE7C7I,QAAS,OACTrH,YAAa,KAAa,uBAAwB,yDAEtD,yCAA0C,CACtC5nC,KAAM,SACNivC,QAAS4J,EAAS1D,sBAClBvN,YAAa,KAAa,kCAAmC,yCAEjE,2CAA4C,CACxC5nC,KAAM,SACNivC,QAAS4J,EAASpD,wBAClB7N,YAAa,KAAa,oCAAqC,4CAEnE,gCAAiC,CAC7B5nC,KAAM,UACNivC,QAAS4J,EAASoJ,aAClBra,YAAa,KAAa,yBAA0B,sEAExD,4DAA6D,CACzD5nC,KAAM,UACNivC,QAAS4J,EAASqJ,yCAClBta,YAAa,KAAa,qDAAsD,4FAG5F,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACRvD,EAA0BpG,EAAgBH,WAAWtjE,EAAM6pE,wBAAyBhyE,KAAKgjB,aAAagvD,wBAAyB,EAAG,KAClIN,EAAwB9F,EAAgBH,WAAWtjE,EAAMupE,sBAAuB1xE,KAAKgjB,aAAa0uD,sBAAuB,EAAG,KAClI,MAAO,CACHI,UAAWlG,EAAgBH,WAAWtjE,EAAM2pE,UAAW9xE,KAAKgjB,aAAa8uD,UAAW,EAAG,KACvFkM,SAAU/K,EAA+B9qE,EAAM61E,SAAUh+E,KAAKgjB,aAAag7D,UAC3EC,WAAYhL,EAA+B9qE,EAAM81E,WAAYj+E,KAAKgjB,aAAai7D,YAC/EC,WAAY5S,EAAQnjE,EAAM+1E,WAAYl+E,KAAKgjB,aAAak7D,YACxDtM,kBAAmBtG,EAAQnjE,EAAMypE,kBAAmB5xE,KAAKgjB,aAAa4uD,mBACtEuM,oBAAqB7S,EAAQnjE,EAAMg2E,oBAAqBn+E,KAAKgjB,aAAam7D,qBAC1EG,iBAAkBhT,EAAQnjE,EAAMm2E,iBAAkBt+E,KAAKgjB,aAAas7D,kBACpEC,wBAAyBjT,EAAQnjE,EAAMo2E,wBAAyBv+E,KAAKgjB,aAAau7D,yBAClFvM,wBAAyBA,EACzBoM,qBAAsBxS,EAAgBH,WAAWtjE,EAAMi2E,qBAAsBpM,EAAyB,EAAG,KACzGN,sBAAuBA,EACvB2M,mBAAoBzS,EAAgBH,WAAWtjE,EAAMk2E,mBAAoB3M,EAAuB,EAAG,KACnG8M,aAAclT,EAAQnjE,EAAMq2E,aAAcx+E,KAAKgjB,aAAaw7D,cAC5DC,yCAA0CnT,EAAQnjE,EAAMs2E,yCAA0Cz+E,KAAKgjB,aAAay7D,0CAE5H,IAgoCAC,uBAAwB7K,EAAS,IAAIjI,EAAgB,IAA+C,yBAA0B,EAAG,EAAG,WAAmD,CAAEzH,YAAa,KAAa,yBAA0B,gGAC7OyK,qBAAsBiF,EAAS,IAAItI,EAAoB,IAA6C,wBAAwB,EAAM,CAAEpH,YAAa,KAAa,uBAAwB,oEACtLwa,sBAAuB9K,EAAS,IAAItI,EAAoB,IAA8C,yBAAyB,EAAM,CAAEpH,YAAa,KAAa,wBAAyB,kLAC1Lya,mBAAoB/K,EAAS,IAAItI,EAAoB,IAA2C,sBAAsB,EAAM,CACxHpH,YAAa,KAAa,qBAAsB,qEAChDsU,SAAU,QAEdoG,mBAAoBhL,EAAS,IAAItI,EAAoB,IAA2C,sBAAsB,EAAM,CAAEpH,YAAa,KAAa,qBAAsB,qFAC9K2a,oBAAqBjL,EAAS,IAAItI,EAAoB,IAA4C,uBAAuB,IACzHwT,oBAAqBlL,EAAS,IAAItH,EAAuB,IAA4C,sBAAuB,YAAa,CAAC,SAAU,QAAS,aAAc,CACvK8H,iBAAkB,CACd,KAAa,6BAA8B,qCAC3C,KAAa,4BAA6B,+DAC1C,KAAa,gCAAiC,sEAElDlQ,YAAa,KAAa,sBAAuB,kEAErD6a,WAAYnL,EAAS,IAAItI,EAAoB,IAAmC,cAAc,EAAM,CAAEpH,YAAa,KAAa,aAAc,0CAC9I8a,eAAgBpL,EAAS,IAAItI,EAAoB,IAAuC,kBAAkB,EAAM,CAAEpH,YAAa,KAAa,iBAAkB,mDAC9J+a,WAAYrL,EAAS,IAluDzB,cAA+BlJ,EAC3B,WAAA5qE,GACI,MAAMq1E,EAAW,CAAEnG,QAAS,KAAMt2C,SAAU,EAAGJ,WAAY,GAAIqiC,SAAS,GACxEpuD,MAAM,IAAmC,aAAc4oE,EAAU,CAC7D,4BAA6B,CACzB74C,KAAM,SACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,oBAAqB,0CAC/CqI,KAAM,CAAC,KAAM,kBAAmB,mBAAoB,OACpD2H,yBAA0B,CACtB,KAAa,uBAAwB,2BACrC,KAAa,oCAAqC,+DAAgE,KAAuB,cAAgB,YACzJ,KAAa,qCAAsC,8DAA+D,KAAuB,cAAgB,YACzJ,KAAa,wBAAyB,8BAG9C,6BAA8B,CAC1B53C,KAAM,SACNivC,QAAS4J,EAASz8C,SAClBs7C,oBAAqB,KAAa,sBAAuB,+JAAgK,sBAAuB,QAEpP,+BAAgC,CAC5B13C,KAAM,SACNivC,QAAS4J,EAAS78C,WAClB07C,oBAAqB,KAAa,wBAAyB,yFAA0F,0BAEzJ,4BAA6B,CACzB13C,KAAM,UACNivC,QAAS4J,EAASxa,QAClBuJ,YAAa,KAAa,qBAAsB,+DAG5D,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EAId,MAH6B,kBAAlBptE,EAAM8mE,UACb9mE,EAAM8mE,QAAU9mE,EAAM8mE,QAAU,KAAO,OAEpC,CACHA,QAAS7C,EAAUjkE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,QAAS,CAAC,KAAM,MAAO,mBAAoB,oBAC/Ft2C,SAAUizC,EAAgBH,WAAWtjE,EAAMwwB,SAAU34B,KAAKgjB,aAAa2V,SAAU,EAAG,KACpFJ,WAAY2zC,EAAmBC,OAAOhkE,EAAMowB,WAAYv4B,KAAKgjB,aAAauV,YAC1EqiC,QAAS0Q,EAAQnjE,EAAMyyD,QAAS56D,KAAKgjB,aAAa43C,SAE1D,IAorDAukB,mBAAoBtL,EAAS,IAAItH,EAAuB,IAA2C,qBAAsB,SAAU,CAAC,MAAO,SAAU,SAAU,QAAS,CACpK8H,iBAAkB,CACd,KAAa,yBAA0B,yDACvC,KAAa,4BAA6B,qDAC1C,KAAa,4BAA6B,qDAC1C,KAAa,0BAA2B,qCAE5ClQ,YAAa,KAAa,qBAAsB,0FAEpDib,YAAavL,EAAS,IAtgB1B,cAA0BlJ,EACtB,WAAA5qE,GACIyM,MAAM,IAAoC,cAAe,CACrD6yE,oCAAoC,EACpCC,gBAAgB,GACjB,CACC,wDAAyD,CACrDnb,YAAa,KAAa,qCAAsC,sEAChEqH,SAAS,EACTjvC,KAAM,WAEV,oCAAqC,CACjC4nC,YAAa,KAAa,iBAAkB,8EAC5CqH,SAAS,EACTjvC,KAAM,YAGlB,CACA,QAAA6uC,CAASjjE,GACL,OAAKA,GAA0B,iBAAVA,EAGd,CACHk3E,mCAAoC/T,EAAQnjE,EAAMk3E,mCAAoCr/E,KAAKgjB,aAAaq8D,oCACxGC,eAAgBhU,EAAQnjE,EAAMm3E,eAAgBt/E,KAAKgjB,aAAas8D,iBAJzDt/E,KAAKgjB,YAMpB,IA6eAu8D,gBAAiB1L,EAAS,IAAItI,EAAoB,IAAwC,mBAAmB,EAAO,CAAEpH,YAAa,KAAa,kBAAmB,kEACnK1+D,uBAAwBouE,EAAS,IAAIjI,EAAgB,IAA+C,yBAA0B,KAAQ,EAAG,aACzI4T,QAAS3L,EAAS,IAr0BtB,cAA4BlJ,EACxB,WAAA5qE,GACI,MAAMq1E,EAAW,CACbqK,WAAY,SACZC,gBAAgB,EAChBC,iCAAiC,EACjCC,eAAe,EACfC,wBAAwB,EACxBC,cAAe,SACfC,WAAW,EACXC,eAAe,EACfC,SAAS,EACTC,YAAa,eACbC,mBAAmB,EACnBC,aAAa,EACbC,eAAe,EACfC,kBAAkB,EAClBrB,gBAAgB,EAChBsB,sBAAsB,EACtBC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZC,eAAe,EACfC,WAAW,EACXC,YAAY,EACZC,eAAe,EACfC,WAAW,EACXC,iBAAiB,EACjBC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,gBAAgB,EAChBC,aAAa,EACbC,oBAAoB,EACpBC,cAAc,EACdC,WAAW,EACXC,YAAY,GAEhBv1E,MAAM,IAAgC,UAAW4oE,EAAU,CACvD,4BAA6B,CACzB74C,KAAM,SACNiwC,KAAM,CAAC,SAAU,WACjB6H,iBAAkB,CACd,KAAa,4BAA6B,mEAC1C,KAAa,6BAA8B,8DAE/C7I,QAAS4J,EAASqK,WAClBtb,YAAa,KAAa,qBAAsB,sIAEpD,gCAAiC,CAC7B5nC,KAAM,UACNivC,QAAS4J,EAASsK,eAClBvb,YAAa,KAAa,yBAA0B,iFAExD,+BAAgC,CAC5B5nC,KAAM,UACNivC,QAAS4J,EAASwK,cAClBzb,YAAa,KAAa,wBAAyB,2EAEvD,wCAAyC,CACrC5nC,KAAM,UACNivC,QAAS4J,EAASyK,uBAClB5L,oBAAqB,KAAa,iCAAkC,8IAExE,+BAAgC,CAC5B13C,KAAM,SACNiwC,KAAM,CAAC,SAAU,QAAS,uBAAwB,uBAClD6H,iBAAkB,CACd,KAAa,4BAA6B,0EAC1C,KAAa,2BAA4B,yEACzC,KAAa,0CAA2C,mFACxD,KAAa,yCAA0C,uEAE3D7I,QAAS4J,EAAS0K,cAClB7L,oBAAqB,KAAa,wBAAyB,4OAA6O,8BAA+B,0CAE3U,iDAAkD,CAC9C13C,KAAM,UACNivC,QAAS4J,EAASuK,gCAClBxb,YAAa,KAAa,0CAA2C,mEAEzE,2BAA4B,CACxB5nC,KAAM,UACNivC,QAAS4J,EAAS2K,UAClB5b,YAAa,KAAa,oBAAqB,2DAEnD,+BAAgC,CAC5B5nC,KAAM,UACNivC,QAAS4J,EAAS4K,cAClB7b,YAAa,KAAa,wBAAyB,mFAEvD,yBAA0B,CACtB5nC,KAAM,UACNivC,QAAS4J,EAAS6K,QAClB9b,YAAa,KAAa,kBAAmB,sEAEjD,mCAAoC,CAChC5nC,KAAM,UACNivC,QAAS4J,EAAS+K,kBAClBhc,YAAa,KAAa,4BAA6B,+FAE3D,uCAAwC,CACpC5nC,KAAM,SACN89C,mBAAoB,KAAa,oCAAqC,uEAE1E,+BAAgC,CAC5B99C,KAAM,SACN89C,mBAAoB,KAAa,aAAc,0IAEnD,6BAA8B,CAC1B99C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,6BAA8B,0DAEpE,+BAAgC,CAC5B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,+BAAgC,4DAEtE,kCAAmC,CAC/B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,kCAAmC,+DAEzE,gCAAiC,CAC7B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,gCAAiC,8DAEvE,sCAAuC,CACnC13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,sCAAuC,sQAE7E,4BAA6B,CACzB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,4BAA6B,yDAEnE,+BAAgC,CAC5B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,+BAAgC,4DAEtE,6BAA8B,CAC1B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,4BAA6B,yDAEnE,6BAA8B,CAC1B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,6BAA8B,0DAEpE,gCAAiC,CAC7B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,gCAAiC,6DAEvE,6BAA8B,CAC1B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,6BAA8B,0DAEpE,gCAAiC,CAC7B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,+BAAgC,4DAEtE,4BAA6B,CACzB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,4BAA6B,yDAEnE,+BAAgC,CAC5B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,+BAAgC,4DAEtE,2BAA4B,CACxB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,2BAA4B,wDAElE,4BAA6B,CACzB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,4BAA6B,yDAEnE,+BAAgC,CAC5B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,+BAAgC,4DAEtE,2BAA4B,CACxB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,2BAA4B,wDAElE,iCAAkC,CAC9B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,iCAAkC,8DAExE,8BAA+B,CAC3B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,8BAA+B,2DAErE,2BAA4B,CACxB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,2BAA4B,wDAElE,4BAA6B,CACzB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,4BAA6B,yDAEnE,2BAA4B,CACxB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,2BAA4B,wDAElE,gCAAiC,CAC7B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,gCAAiC,6DAEvE,kCAAmC,CAC/B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,kCAAmC,+DAEzE,6BAA8B,CAC1B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,6BAA8B,0DAEpE,oCAAqC,CACjC13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,oCAAqC,iEAE3E,8BAA+B,CAC3B13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,8BAA+B,2DAErE,2BAA4B,CACxB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,2BAA4B,wDAElE,4BAA6B,CACzB13C,KAAM,UACNivC,SAAS,EACTyI,oBAAqB,KAAa,4BAA6B,2DAG3E,CACA,QAAA7I,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHkK,WAAYrT,EAAUjkE,EAAMs3E,WAAYz/E,KAAKgjB,aAAay8D,WAAY,CAAC,SAAU,YACjFC,eAAgBpU,EAAQnjE,EAAMu3E,eAAgB1/E,KAAKgjB,aAAa08D,gBAChEC,gCAAiCrU,EAAQnjE,EAAMw3E,gCAAiC3/E,KAAKgjB,aAAa08D,gBAClGE,cAAetU,EAAQnjE,EAAMy3E,cAAe5/E,KAAKgjB,aAAa48D,eAC9DC,uBAAwBvU,EAAQnjE,EAAM03E,uBAAwB7/E,KAAKgjB,aAAa68D,wBAChFC,cAAe1T,EAAUjkE,EAAM23E,cAAe9/E,KAAKgjB,aAAa88D,cAAe,CAAC,SAAU,QAAS,sBAAuB,yBAC1HC,UAAWzU,EAAQnjE,EAAM43E,UAAW//E,KAAKgjB,aAAa+8D,WACtDC,cAAe1U,EAAQnjE,EAAM63E,cAAehgF,KAAKgjB,aAAag9D,eAC9DC,QAAS3U,EAAQnjE,EAAM83E,QAASjgF,KAAKgjB,aAAai9D,SAClDC,YAAa9T,EAAUjkE,EAAM+3E,YAAalgF,KAAKgjB,aAAak9D,YAAa,CAAC,SAAU,UAAW,iBAC/FC,kBAAmB7U,EAAQnjE,EAAMg4E,kBAAmBngF,KAAKgjB,aAAam9D,mBACtEC,YAAa9U,EAAQnjE,EAAMi4E,YAAapgF,KAAKgjB,aAAao9D,aAC1DC,cAAe/U,EAAQnjE,EAAMk4E,cAAergF,KAAKgjB,aAAaq9D,eAC9DC,iBAAkBhV,EAAQnjE,EAAMm4E,iBAAkBtgF,KAAKgjB,aAAas9D,kBACpErB,eAAgB3T,EAAQnjE,EAAM82E,eAAgBj/E,KAAKgjB,aAAai8D,gBAChEsB,qBAAsBjV,EAAQnjE,EAAMo4E,qBAAsBvgF,KAAKgjB,aAAau9D,sBAC5EC,WAAYlV,EAAQnjE,EAAMq4E,WAAYxgF,KAAKgjB,aAAaw9D,YACxDC,cAAenV,EAAQnjE,EAAMs4E,cAAezgF,KAAKgjB,aAAay9D,eAC9DC,YAAapV,EAAQnjE,EAAMu4E,YAAa1gF,KAAKgjB,aAAa09D,aAC1DC,YAAarV,EAAQnjE,EAAMw4E,YAAa3gF,KAAKgjB,aAAa29D,aAC1DC,eAAgBtV,EAAQnjE,EAAMy4E,eAAgB5gF,KAAKgjB,aAAa49D,gBAChEC,YAAavV,EAAQnjE,EAAM04E,YAAa7gF,KAAKgjB,aAAa69D,aAC1DC,eAAgBxV,EAAQnjE,EAAM24E,eAAgB9gF,KAAKgjB,aAAa89D,gBAChEC,WAAYzV,EAAQnjE,EAAM44E,WAAY/gF,KAAKgjB,aAAa+9D,YACxDC,cAAe1V,EAAQnjE,EAAM64E,cAAehhF,KAAKgjB,aAAag+D,eAC9DC,UAAW3V,EAAQnjE,EAAM84E,UAAWjhF,KAAKgjB,aAAai+D,WACtDC,WAAY5V,EAAQnjE,EAAM+4E,WAAYlhF,KAAKgjB,aAAak+D,YACxDC,cAAe7V,EAAQnjE,EAAMg5E,cAAenhF,KAAKgjB,aAAam+D,eAC9DC,UAAW9V,EAAQnjE,EAAMi5E,UAAWphF,KAAKgjB,aAAao+D,WACtDC,gBAAiB/V,EAAQnjE,EAAMk5E,gBAAiBrhF,KAAKgjB,aAAaq+D,iBAClEC,aAAchW,EAAQnjE,EAAMm5E,aAActhF,KAAKgjB,aAAas+D,cAC5DC,UAAWjW,EAAQnjE,EAAMo5E,UAAWvhF,KAAKgjB,aAAau+D,WACtDC,WAAYlW,EAAQnjE,EAAMq5E,WAAYxhF,KAAKgjB,aAAaw+D,YACxDC,UAAWnW,EAAQnjE,EAAMs5E,UAAWzhF,KAAKgjB,aAAay+D,WACtDC,eAAgBpW,EAAQnjE,EAAMu5E,eAAgB1hF,KAAKgjB,aAAa0+D,gBAChEC,YAAarW,EAAQnjE,EAAMw5E,YAAa3hF,KAAKgjB,aAAa2+D,aAC1DC,mBAAoBtW,EAAQnjE,EAAMy5E,mBAAoB5hF,KAAKgjB,aAAa4+D,oBACxEC,aAAcvW,EAAQnjE,EAAM05E,aAAc7hF,KAAKgjB,aAAa6+D,cAC5DC,UAAWxW,EAAQnjE,EAAM25E,UAAW9hF,KAAKgjB,aAAa8+D,WACtDC,WAAYzW,EAAQnjE,EAAM45E,WAAY/hF,KAAKgjB,aAAa++D,YAEhE,IA4gBAC,cAAenO,EAAS,IAzhC5B,cAAkClJ,EAC9B,WAAA5qE,GACI,MAAMq1E,EAAW,CACbnG,SAAS,EACT1T,KAAM,eACN0mB,YAAa,UACbC,qBAAqB,EACrBC,YAAY,EACZ5pD,WAAY,WAEhB/rB,MAAM,GAAqC,gBAAiB4oE,EAAU,CAClE,+BAAgC,CAC5B74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,wBAAyB,6EAEvD,mCAAoC,CAChC5nC,KAAM,SACNivC,QAAS4J,EAAS6M,YAClBzV,KAAM,CAAC,SAAU,UAAW,SAC5B6H,iBAAkB,CACd,KAAa,mCAAoC,8EACjD,KAAa,oCAAqC,+EAClD,KAAa,kCAAmC,8CAEpDlQ,YAAa,KAAa,4BAA6B,yDAE3D,2CAA4C,CACxC5nC,KAAM,UACNivC,QAAS4J,EAAS8M,oBAClB/d,YAAa,KAAa,oCAAqC,uKAEnE,kCAAmC,CAC/B5nC,KAAM,SACNivC,QAAS4J,EAAS78C,WAClB4rC,YAAa,KAAa,2BAA4B,yDAGlE,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClD1T,KAAM6Q,EAAUjkE,EAAMozD,KAAMv7D,KAAKgjB,aAAau4C,KAAM,CAAC,SAAU,UAAW,iBAC1E0mB,YAAa7V,EAAUjkE,EAAM85E,YAAajiF,KAAKgjB,aAAai/D,YAAa,CAAC,SAAU,UAAW,UAC/FC,oBAAqB5W,EAAQnjE,EAAM+5E,oBAAqBliF,KAAKgjB,aAAak/D,qBAC1EC,WAAY7W,EAAQnjE,EAAMg6E,WAAYniF,KAAKgjB,aAAam/D,YACxD5pD,WAAY2zC,EAAmBC,OAAOhkE,EAAMowB,WAAYv4B,KAAKgjB,aAAauV,YAElF,IAs+BA6pD,WAAYvO,EAAS,IAp+BzB,cAA+BlJ,EAC3B,WAAA5qE,GACI,MAAMq1E,EAAW,CACbnG,SAAS,EACTgT,YAAa,UACb1pD,WAAY,UACZ4pD,YAAY,GAEhB31E,MAAM,GAAkC,yBAA0B4oE,EAAU,CACxE,wCAAyC,CACrC74C,KAAM,UACNivC,QAAS4J,EAASnG,QAClB9K,YAAa,KAAa,qBAAsB,yDAEpD,4CAA6C,CACzC5nC,KAAM,SACNivC,QAAS4J,EAAS6M,YAClBzV,KAAM,CAAC,SAAU,UAAW,SAC5B6H,iBAAkB,CACd,KAAa,gCAAiC,wEAC9C,KAAa,iCAAkC,yEAC/C,KAAa,+BAAgC,wCAEjDlQ,YAAa,KAAa,yBAA0B,mDAExD,2CAA4C,CACxC5nC,KAAM,SACNivC,QAAS4J,EAAS78C,WAClB4rC,YAAa,KAAa,wBAAyB,kDAG/D,CACA,QAAAiH,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHtG,QAAS3D,EAAQnjE,EAAM8mE,QAASjvE,KAAKgjB,aAAaisD,SAClDgT,YAAa7V,EAAUjkE,EAAM85E,YAAajiF,KAAKgjB,aAAai/D,YAAa,CAAC,SAAU,UAAW,UAC/F1pD,WAAY2zC,EAAmBC,OAAOhkE,EAAMowB,WAAYv4B,KAAKgjB,aAAauV,YAC1E4pD,WAAY7W,EAAQnjE,EAAMg6E,WAAYniF,KAAKgjB,aAAam/D,YAEhE,IA07BAE,sCAAuCxO,EAAS,IAAItI,EAAoB,IAA8D,yCAAyC,EAAO,CAAEpH,YAAa,KAAa,wCAAyC,4HAC3Pme,gBAAiBzO,EAAS,IAAIjI,EAAgB,IAAwC,kBAAmB,EAAG,EAAG,IAAM,CAAEqI,oBAAqB,KAAa,kBAAmB,+EAAgF,MAAO,0BACnQsO,kBAAmB1O,EAAS,IAAIjI,EAAgB,IAA0C,oBAAqB,EAAG,EAAG,IAAM,CAAEqI,oBAAqB,KAAa,oBAAqB,yGAA0G,MAAO,4BACrSuO,2BAA4B3O,EAAS,IAAItI,EAAoB,IAAmD,8BAA8B,EAAM,CAAEpH,YAAa,KAAa,6BAA8B,gGAC9Mse,iBAAkB5O,EAAS,IAAItH,EAAuB,IAAyC,mBAAoB,QAAS,CAAC,QAAS,eAAgB,wBAAyB,CAC3K4H,yBAA0B,CACtB,KAAa,yBAA0B,uCACvC,KAAa,gCAAiC,2IAC9C,KAAa,wCAAyC,kIAE1DhQ,YAAa,KAAa,mBAAoB,+EAElDue,cAAe7O,EAAS,IAAItH,EAAuB,IAAsC,gBAAiB,MAAO,CAAC,KAAM,MAAO,gBAAiB,CAC5I8H,iBAAkB,CACd,KAAa,mBAAoB,4EACjC,KAAa,oBAAqB,4BAClC,KAAa,6BAA8B,sGAE/ClQ,YAAa,KAAa,gBAAiB,+BAE/C8D,SAAU4L,EAAS,IAAIjI,EAAgB,IAAiC,WAAY,GAAI,EAAG,aAC3F+W,iBAAkB9O,EAAS,IAtqC/B,cAA+BlJ,EAC3B,WAAA5qE,GACI,MAAMq1E,EAAW,CACb9B,cAAeJ,EACfG,qBAAqB,EACrBE,qBAAqB,EACrBC,gBAAiBN,EACjBO,gBAAgB,EAChBL,kBAAmB,CAAC,EACpBM,eAAgB,CAAEkP,KAAK,EAAMC,SAAS,IAE1Cr2E,MAAM,IAA4C,mBAAoB4oE,EAAU,CAC5E,CAACjC,EAA2BG,eAAgB,CACxCiK,YAAY,EACZhhD,KAAM,CAAC,UAAW,UAClBiwC,KAAM,EAAC,GAAM,EAAO0G,GACpB1H,QAAS4J,EAAS9B,cAClBnP,YAAa,KAAa,iCAAkC,+KAEhE,CAACgP,EAA2BE,qBAAsB,CAC9CkK,YAAY,EACZhhD,KAAM,UACNivC,QAAS4J,EAAS/B,oBAClBlP,YAAa,KAAa,uCAAwC,iGAEtE,CAACgP,EAA2BI,qBAAsB,CAC9CgK,YAAY,EACZhhD,KAAM,UACNivC,QAAS4J,EAAS7B,oBAClBpP,YAAa,KAAa,uCAAwC,2JAEtE,CAACgP,EAA2BK,iBAAkB,CAC1C+J,YAAY,EACZhhD,KAAM,CAAC,UAAW,UAClBiwC,KAAM,EAAC,GAAM,EAAO0G,GACpB1H,QAAS4J,EAAS5B,gBAClBrP,YAAa,KAAa,mCAAoC,4FAElE,CAACgP,EAA2BM,gBAAiB,CACzC8J,YAAY,EACZhhD,KAAM,CAAC,UAAW,UAClBiwC,KAAM,EAAC,GAAM,EAAO0G,GACpB1H,QAAS4J,EAAS3B,eAClBtP,YAAa,KAAa,kCAAmC,2FAEjE,CAACgP,EAA2BC,mBAAoB,CAC5CmK,YAAY,EACZhhD,KAAM,SACNivC,QAAS4J,EAAShC,kBAClBjP,YAAa,KAAa,qCAAsC,8DAChE2Y,qBAAsB,CAClBvgD,KAAM,YAGd,CAAC42C,EAA2BO,gBAAiB,CACzC6J,YAAY,EACZhhD,KAAM,SACNugD,qBAAsB,CAClBvgD,KAAM,WAEVivC,QAAS4J,EAAS1B,eAClBvP,YAAa,KAAa,kCAAmC,sFAGzE,CACA,WAAAyG,CAAY7vE,EAAOy5C,GACf,IAAIy2B,GAAY,EACZz2B,EAAO4+B,mBAAqBr4E,IAEvB,KAAeA,EAAMq4E,kBAAmB5+B,EAAO4+B,qBAChDr4E,EAAQ,IAAKA,EAAOq4E,kBAAmB5+B,EAAO4+B,mBAC9CnI,GAAY,IAGhBz2B,EAAOk/B,gBAAkB34E,IAEpB,KAAeA,EAAM24E,eAAgBl/B,EAAOk/B,kBAC7C34E,EAAQ,IAAKA,EAAO24E,eAAgBl/B,EAAOk/B,gBAC3CzI,GAAY,IAGpB,MAAM9vE,EAASqR,MAAMo+D,YAAY7vE,EAAOy5C,GACxC,OAAIy2B,EACO,IAAIF,EAAkB5vE,EAAO6vE,UAAU,GAE3C7vE,CACX,CACA,QAAAiwE,CAASmK,GACL,IAAKA,GAA4B,iBAAXA,EAClB,OAAOv1E,KAAKgjB,aAEhB,MAAM7a,EAAQotE,EACd,MAAO,CACHjC,cAAeK,EAAaxrE,EAAMmrE,cAAeJ,EAAsB,EAAC,GAAM,EAAOA,IACrFG,oBAAqB/H,EAAQnjE,EAAMkrE,oBAAqBrzE,KAAKgjB,aAAaqwD,qBAC1EE,oBAAqBjI,EAAQnjE,EAAMorE,oBAAqBvzE,KAAKgjB,aAAauwD,qBAC1EC,gBAAiBG,EAAaxrE,EAAMqrE,gBAAiBN,EAAsB,EAAC,GAAM,EAAOA,IACzFO,eAAgBE,EAAaxrE,EAAMsrE,eAAgBP,EAAsB,EAAC,GAAM,EAAOA,IACvFE,kBAAmBpzE,KAAK8iF,mBAAmBvN,EAAOnC,kBAAmBpzE,KAAKgjB,aAAaowD,mBACvFM,eAAgB1zE,KAAK8iF,mBAAmBvN,EAAO7B,eAAgB1zE,KAAKgjB,aAAa0wD,gBAEzF,CACA,kBAAAoP,CAAmB7hF,EAAK+hB,GACpB,GAAoB,iBAAR/hB,IAAsBA,EAC9B,OAAO+hB,EAEX,MAAM7nB,EAAS,CAAC,EAChB,IAAK,MAAOxB,EAAKoB,KAAUtF,OAAOsX,QAAQ9L,IACxB,IAAVlG,IACAI,EAAOxB,IAAO,GAGtB,OAAOwB,CACX,IAsjCA4nF,uBAAwBlP,EAAS,IAAItH,EAAuB,IAA+C,yBAA0B,SAAU,CAAC,OAAQ,MAAO,UAAW,CACtK8H,iBAAkB,CACd,KAAa,8BAA+B,uDAC5C,KAAa,6BAA8B,yCAC3C,KAAa,gCAAiC,mDAElDlQ,YAAa,KAAa,yBAA0B,iEAExD6e,aAAcnP,EAAS,IAAItI,EAAoB,IAAqC,gBAAgB,IACpG0X,YAAapP,EAAS,IAAItI,EAAoB,IAAoC,eAAe,EAAM,CAAEpH,YAAa,KAAa,cAAe,4EAClJ+e,UAAWrP,EAAS,IAAItH,EAAuB,IAAkC,YAAa,SAAU,CAAC,SAAU,WAAY,CAC3H4H,yBAA0B,CACtB,KAAa,mBAAoB,oCACjC,KAAa,oBAAqB,4HAEtChQ,YAAa,KAAa,YAAa,iFAE3Cgf,qBAAsBtP,EAAS,IAhhBnC,cAAmClJ,EAC/B,WAAA5qE,GAEIyM,MAAM,IAA6C,uBADlC,GACoE,CACjF0gE,MAAO,CACH,CACI/I,YAAa,KAAa,uBAAwB,sMAClD5nC,KAAM,UACP,CACC4nC,YAAa,KAAa,uBAAwB,sMAClD5nC,KAAM,QACN/gC,MAAO,CACH+gC,KAAM,aAK1B,CACA,QAAA6uC,CAASjjE,GAIL,GAHqB,iBAAVA,IACPA,EAAQ,CAACA,IAET7L,MAAMC,QAAQ4L,GAAQ,CACtB,MAAMi7E,EAAe,GACrB,IAAK,MAAM9jC,KAAUn3C,EACjB,GAAsB,iBAAXm3C,EACP,IACQ+jC,KAAKC,UAAUC,mBAAmBjkC,GAAQ7mD,OAAS,GACnD2qF,EAAanoF,KAAKqkD,EAE1B,CACA,MAEA,CAGR,OAAO8jC,CACX,CACA,OAAOpjF,KAAKgjB,YAChB,IA0eAwgE,eAAgB3P,EAAS,IAAI3H,EAAmB,IAAuC,iBAAkB,KAAuB,CAAE/H,YAAa,KAAa,iBAAkB,yGAC9KgN,SAAU0C,EAAS,IAAItH,EAAuB,IAAiC,WAAY,MAAO,CAAC,MAAO,KAAM,iBAAkB,WAAY,CAC1I4H,yBAA0B,CACtB,KAAa,eAAgB,0BAC7B,KAAa,cAAe,0CAC5B,KAAa,CACTx6E,IAAK,0BACLoiF,QAAS,CACL,yFAEL,iDACH,KAAa,CACTpiF,IAAK,mBACLoiF,QAAS,CACL,wDACA,yFAEL,8EAEP5X,YAAa,KAAa,CACtBxqE,IAAK,WACLoiF,QAAS,CACL,kHACA,yFAEL,sCAEP0H,6BAA8B5P,EAAS,IAAI3H,EAAmB,IAAqD,+BAEnH,0GACAwX,8BAA+B7P,EAAS,IAAI3H,EAAmB,IAAsD,gCAErH,2BACAkF,eAAgByC,EAAS,IAAIjI,EAAgB,IAAuC,iBAAkB,GAAI,EAAG,WAAmD,CAC5JqI,oBAAqB,KAAa,CAC9Bt6E,IAAK,iBACLoiF,QAAS,CACL,iFACA,iHAEL,4GAEP7K,kBAAmB2C,EAAS,IAAItH,EAAuB,IAA0C,oBAAqB,UAAW,CAAC,MAAO,KAAM,aAC/I0E,kBAAmB4C,EAAS,IAAItH,EAAuB,IAA0C,oBAAqB,UAAW,CAAC,MAAO,KAAM,aAE/IoX,gBAAiB9P,EAAS,IAjqF9B,cAA8B1I,EAC1B,WAAAprE,GACIyM,MAAM,IACV,CACA,OAAAq+D,CAAQC,EAAKjmE,EAAS9C,GAClB,MAAMmvD,EAAa,CAAC,iBAmBpB,OAlBIrsD,EAAQlP,IAAI,KACZu7D,EAAWj2D,KAAK4J,EAAQlP,IAAI,KAE5Bm1E,EAAIoN,sBACJhnB,EAAWj2D,KAAK6vE,EAAIoN,sBAE8B,YAAlDrzE,EAAQlP,IAAI,IACZu7D,EAAWj2D,KAAK,iBAEuC,SAAlD4J,EAAQlP,IAAI,KACjBu7D,EAAWj2D,KAAK,cAEhB4J,EAAQlP,IAAI,MACZu7D,EAAWj2D,KAAK,cAEhB4J,EAAQlP,IAAI,MACZu7D,EAAWj2D,KAAK,kBAEbi2D,EAAW3hB,KAAK,IAC3B,IAyoFAq0C,uBAAwB/P,EAAS,IAAItI,EAAoB,IAA+C,0BAA0B,EAAO,CAAE0I,oBAAqB,KAAa,yBAA0B,0GACvM7F,WAAYyF,EAAS,IA7jDzB,cAA+B1I,EAC3B,WAAAprE,GACIyM,MAAM,IACV,CACA,OAAAq+D,CAAQC,EAAKjmE,EAAS9C,GAClB,OAAO+oE,EAAIsD,UACf,IAwjDAyV,aAAchQ,EAAS,IAAItI,EAAoB,IAAqC,gBAAgB,EAAO,CAAE0I,oBAAqB,KAAa,eAAgB,gGAC/J/0C,WAAY20C,EAAS,IAAIlG,GACzBmW,aAAcjQ,EAAS,IAtf3B,cAAyC1I,EACrC,WAAAprE,GACIyM,MAAM,IACV,CACA,OAAAq+D,CAAQC,EAAKjmE,EAAS9C,GAClB,MAAMm9B,EAAar6B,EAAQlP,IAAI,KAC/B,MAAO,CACHq4E,uBAAwBlD,EAAIkD,uBAC5BuE,mBAAoBrzC,EAAWqzC,mBAC/BpC,mBAAoBjxC,EAAWixC,mBAC/BqC,eAAgBtzC,EAAWszC,eAEnC,IA2eAuR,eAAgBlQ,EAAS,IA3hB7B,cAAmClJ,EAC/B,WAAA5qE,GACIyM,MAAM,IAAuC,iBAAkB,EAA6B,CACxF,wBAAyB,CACrB+vB,KAAM,SACNiwC,KAAM,CAAC,OAAQ,OAAQ,SAAU,cACjC6H,iBAAkB,CACd,KAAa,sBAAuB,oDACpC,KAAa,sBAAuB,yDACpC,KAAa,wBAAyB,uDACtC,KAAa,4BAA6B,wDAE9ClQ,YAAa,KAAa,iBAAkB,8CAC5CqH,QAAS,SAGrB,CACA,QAAAJ,CAASjjE,GACL,OAAQA,GACJ,IAAK,OAAQ,OAAO,EACpB,IAAK,OAAQ,OAAO,EACpB,IAAK,SAAU,OAAO,EACtB,IAAK,aAAc,OAAO,EAE9B,OAAO,CACX,CACA,OAAA0iE,CAAQC,EAAKjmE,EAAS9J,GAElB,OAA6B,IADA8J,EAAQlP,IAAI,GAI9B,EAEJoF,CACX,IA0fAipF,iBAAkBnQ,EAAS,IAz7D/B,cAA+BlJ,EAC3B,WAAA5qE,GACIyM,MAAM,IAAyC,mBAAoB,SAAU,CACzE,0BAA2B,CACvB6nE,iBAAkB,CACd,KAAa,0BAA2B,qMACxC,KAAa,4BAA6B,mKAE9C93C,KAAM,SACNiwC,KAAM,CAAC,SAAU,YACjBhB,QAAS,SACTrH,YAAa,KAAa,mBAAoB,gJAG1D,CACA,QAAAiH,CAASjjE,GACL,OAAOikE,EAAUjkE,EAAO,SAAU,CAAC,SAAU,YACjD,CACA,OAAA0iE,CAAQC,EAAKjmE,EAAS9J,GAElB,OAA6B,IADA8J,EAAQlP,IAAI,GAI9B,WAEJoF,CACX,I,kBCzqCG,SAASkpF,EAASv+D,GACrB,OAAOA,CACX,C,2BAKO,MAAMw+D,EACT,WAAAnkF,CAAYokF,EAAMC,GACdpkF,KAAKqkF,eAAY1oF,EACjBqE,KAAKskF,gBAAa3oF,EACE,mBAATwoF,GACPnkF,KAAKukF,IAAMJ,EACXnkF,KAAKwkF,YAAcP,IAGnBjkF,KAAKukF,IAAMH,EACXpkF,KAAKwkF,YAAcL,EAAKtlC,YAEhC,CACA,GAAAlpD,CAAIuH,GACA,MAAMvD,EAAMqG,KAAKwkF,YAAYtnF,GAK7B,OAJI8C,KAAKskF,aAAe3qF,IACpBqG,KAAKskF,WAAa3qF,EAClBqG,KAAKqkF,UAAYrkF,KAAKukF,IAAIrnF,IAEvB8C,KAAKqkF,SAChB,EAKG,MAAMI,EACT,gBAAIC,GACA,OAAO1kF,KAAK2kF,IAChB,CACA,WAAA5kF,CAAYokF,EAAMC,GACdpkF,KAAK2kF,KAAO,IAAIxwD,IAChBn0B,KAAK4kF,MAAQ,IAAIzwD,IACG,mBAATgwD,GACPnkF,KAAKukF,IAAMJ,EACXnkF,KAAKwkF,YAAcP,IAGnBjkF,KAAKukF,IAAMH,EACXpkF,KAAKwkF,YAAcL,EAAKtlC,YAEhC,CACA,GAAAlpD,CAAIuH,GACA,MAAMvD,EAAMqG,KAAKwkF,YAAYtnF,GAC7B,GAAI8C,KAAK4kF,MAAM/nF,IAAIlD,GACf,OAAOqG,KAAK4kF,MAAMjvF,IAAIgE,GAE1B,MAAMoB,EAAQiF,KAAKukF,IAAIrnF,GAGvB,OAFA8C,KAAK2kF,KAAKh1E,IAAIzS,EAAKnC,GACnBiF,KAAK4kF,MAAMj1E,IAAIhW,EAAKoB,GACbA,CACX,E","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/window.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/listColors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/arrays.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/rangeUtil.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/browser/viewParts/lines/viewLine.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/dompurify/dompurify.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/canIUse.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/globalPointerMoveMonitor.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/async.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/miscColors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/objects.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/browser/editorDom.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/fastDomNode.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/keyboardEvent.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/inputColors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/network.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/lazy.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/hash.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/wordHelper.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/viewLayout/linePart.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/viewLayout/viewLineRenderer.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/symbols.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/color.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/browser.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/iframe.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/mouseEvent.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/viewLayout/lineDecorations.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/assert.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/menuColors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/viewEventHandler.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/browser/dom.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/colors/quickpickColors.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/keybindings.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/cursor/cursorAtomicMoveOperations.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/config/editorOptions.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/base/common/cache.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function ensureCodeWindow(targetWindow, fallbackWindowId) {\n    const codeWindow = targetWindow;\n    if (typeof codeWindow.vscodeWindowId !== 'number') {\n        Object.defineProperty(codeWindow, 'vscodeWindowId', {\n            get: () => fallbackWindowId\n        });\n    }\n}\n// eslint-disable-next-line no-restricted-globals\nexport const mainWindow = window;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, darken, lighten, transparent, ifDefinedThenElse } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, activeContrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground, editorFindMatchHighlightBorder, editorFindMatchHighlight, widgetShadow, editorWidgetForeground } from './editorColors.js';\nexport const listFocusBackground = registerColor('list.focusBackground', null, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', null, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', null, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', null, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', null, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', null, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', null, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', null, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', null, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropOverBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items over other items when using the mouse.\"));\nexport const listDropBetweenBackground = registerColor('list.dropBetweenBackground', { dark: iconForeground, light: iconForeground, hcDark: null, hcLight: null }, nls.localize('listDropBetweenBackground', \"List/Tree drag and drop border color when moving items between items when using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', widgetShadow, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized.\"));\n// ------ tree\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', transparent(treeIndentGuidesStroke, 0.4), nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\n// ------ table\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\n// ------ action list\nexport const editorActionListBackground = registerColor('editorActionList.background', editorWidgetBackground, nls.localize('editorActionListBackground', \"Action List background color.\"));\nexport const editorActionListForeground = registerColor('editorActionList.foreground', editorWidgetForeground, nls.localize('editorActionListForeground', \"Action List foreground color.\"));\nexport const editorActionListFocusForeground = registerColor('editorActionList.focusForeground', listActiveSelectionForeground, nls.localize('editorActionListFocusForeground', \"Action List foreground color for the focused item.\"));\nexport const editorActionListFocusBackground = registerColor('editorActionList.focusBackground', listActiveSelectionBackground, nls.localize('editorActionListFocusBackground', \"Action List background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nexport function tail2(arr) {\n    if (arr.length === 0) {\n        throw new Error('Invalid tail call');\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nexport function equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Remove the element at `index` by replacing it with the last element. This is faster than `splice`\n * but changes the order of the array\n */\nexport function removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\n/**\n * Performs a binary search algorithm over a sorted array.\n *\n * @param array The array being searched.\n * @param key The value we search for.\n * @param comparator A function that takes two array elements and returns zero\n *   if they are equal, a negative number if the first element precedes the\n *   second one in the sorting order, or a positive number if the second element\n *   precedes the first one.\n * @return See {@link binarySearch2}\n */\nexport function binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\n/**\n * Performs a binary search algorithm over a sorted collection. Useful for cases\n * when we need to perform a binary search over something that isn't actually an\n * array, and converting data to an array would defeat the use of binary search\n * in the first place.\n *\n * @param length The collection length.\n * @param compareToKey A function that takes an index of an element in the\n *   collection and returns zero if the value at this index is equal to the\n *   search key, a negative number if the value precedes the search key in the\n *   sorting order, or a positive number if the search key precedes the value.\n * @return A non-negative index of an element, if found. If not found, the\n *   result is -(n+1) (or ~n, using bitwise notation), where n is the index\n *   where the key should be inserted to maintain the sorting order.\n */\nexport function binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nexport function quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw new TypeError('invalid index');\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nexport function groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\n/**\n * Splits the given items into a list of (non-empty) groups.\n * `shouldBeGrouped` is used to decide if two consecutive items should be in the same group.\n * The order of the items is preserved.\n */\nexport function* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nexport function forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nexport function forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce(array) {\n    return array.filter((e) => !!e);\n}\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nexport function isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct(array, keyFn = value => value) {\n    const seen = new Set();\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (seen.has(key)) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nexport function firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nexport function range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nexport function pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nexport function asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    // Move the items after the start index, start from the end so that we don't overwrite any value.\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        // see https://bugs.webkit.org/show_bug.cgi?id=261140\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nexport var CompareResult;\n(function (CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {}));\nexport function compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nexport function tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\n/**\n * The natural order on numbers.\n*/\nexport const numberComparator = (a, b) => a - b;\nexport const booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nexport function reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nexport class ArrayQueue {\n    /**\n     * Constructs a queue that is backed by the given array. Runtime is O(1).\n    */\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    /**\n     * Consumes elements from the beginning of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n    */\n    takeWhile(predicate) {\n        // P(k) := k <= this.lastIdx && predicate(this.items[k])\n        // Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    /**\n     * Consumes elements from the end of the queue as long as the predicate returns true.\n     * If no elements were consumed, `null` is returned.\n     * The result has the same order as the underlying array!\n    */\n    takeFromEndWhile(predicate) {\n        // P(k) := this.firstIdx >= k && predicate(this.items[k])\n        // Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\n/**\n * This class is faster than an iterator and array for lazy computed data.\n*/\nexport class CallbackIterable {\n    static { this.empty = new CallbackIterable(_callback => { }); }\n    constructor(\n    /**\n     * Calls the callback for every item.\n     * Stops when the callback returns false.\n    */\n    iterate) {\n        this.iterate = iterate;\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true));\n    }\n    map(mapFn) {\n        return new CallbackIterable(cb => this.iterate(item => cb(mapFn(item))));\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\n/**\n * Represents a re-arrangement of items in an array.\n */\nexport class Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    /**\n     * Returns a permutation that sorts the given array according to the given compare function.\n     */\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(arr.keys()).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return new Permutation(sortIndices);\n    }\n    /**\n     * Returns a new array with the elements of the given array re-arranged according to this permutation.\n     */\n    apply(arr) {\n        return arr.map((_, index) => arr[this._indexMap[index]]);\n    }\n    /**\n     * Returns a new permutation that undoes the re-arrangement of this permutation.\n    */\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return new Permutation(inverseIndexMap);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FloatHorizontalRange } from '../../view/renderingContext.js';\nexport class RangeUtil {\n    static _createRange() {\n        if (!this._handyReadyRange) {\n            this._handyReadyRange = document.createRange();\n        }\n        return this._handyReadyRange;\n    }\n    static _detachRange(range, endNode) {\n        // Move range out of the span node, IE doesn't like having many ranges in\n        // the same spot and will act badly for lines containing dashes ('-')\n        range.selectNodeContents(endNode);\n    }\n    static _readClientRects(startElement, startOffset, endElement, endOffset, endNode) {\n        const range = this._createRange();\n        try {\n            range.setStart(startElement, startOffset);\n            range.setEnd(endElement, endOffset);\n            return range.getClientRects();\n        }\n        catch (e) {\n            // This is life ...\n            return null;\n        }\n        finally {\n            this._detachRange(range, endNode);\n        }\n    }\n    static _mergeAdjacentRanges(ranges) {\n        if (ranges.length === 1) {\n            // There is nothing to merge\n            return ranges;\n        }\n        ranges.sort(FloatHorizontalRange.compare);\n        const result = [];\n        let resultLen = 0;\n        let prev = ranges[0];\n        for (let i = 1, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            if (prev.left + prev.width + 0.9 /* account for browser's rounding errors*/ >= range.left) {\n                prev.width = Math.max(prev.width, range.left + range.width - prev.left);\n            }\n            else {\n                result[resultLen++] = prev;\n                prev = range;\n            }\n        }\n        result[resultLen++] = prev;\n        return result;\n    }\n    static _createHorizontalRangesFromClientRects(clientRects, clientRectDeltaLeft, clientRectScale) {\n        if (!clientRects || clientRects.length === 0) {\n            return null;\n        }\n        // We go through FloatHorizontalRange because it has been observed in bi-di text\n        // that the clientRects are not coming in sorted from the browser\n        const result = [];\n        for (let i = 0, len = clientRects.length; i < len; i++) {\n            const clientRect = clientRects[i];\n            result[i] = new FloatHorizontalRange(Math.max(0, (clientRect.left - clientRectDeltaLeft) / clientRectScale), clientRect.width / clientRectScale);\n        }\n        return this._mergeAdjacentRanges(result);\n    }\n    static readHorizontalRanges(domNode, startChildIndex, startOffset, endChildIndex, endOffset, context) {\n        // Panic check\n        const min = 0;\n        const max = domNode.children.length - 1;\n        if (min > max) {\n            return null;\n        }\n        startChildIndex = Math.min(max, Math.max(min, startChildIndex));\n        endChildIndex = Math.min(max, Math.max(min, endChildIndex));\n        if (startChildIndex === endChildIndex && startOffset === endOffset && startOffset === 0 && !domNode.children[startChildIndex].firstChild) {\n            // We must find the position at the beginning of a <span>\n            // To cover cases of empty <span>s, avoid using a range and use the <span>'s bounding box\n            const clientRects = domNode.children[startChildIndex].getClientRects();\n            context.markDidDomLayout();\n            return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n        }\n        // If crossing over to a span only to select offset 0, then use the previous span's maximum offset\n        // Chrome is buggy and doesn't handle 0 offsets well sometimes.\n        if (startChildIndex !== endChildIndex) {\n            if (endChildIndex > 0 && endOffset === 0) {\n                endChildIndex--;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        let startElement = domNode.children[startChildIndex].firstChild;\n        let endElement = domNode.children[endChildIndex].firstChild;\n        if (!startElement || !endElement) {\n            // When having an empty <span> (without any text content), try to move to the previous <span>\n            if (!startElement && startOffset === 0 && startChildIndex > 0) {\n                startElement = domNode.children[startChildIndex - 1].firstChild;\n                startOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n            if (!endElement && endOffset === 0 && endChildIndex > 0) {\n                endElement = domNode.children[endChildIndex - 1].firstChild;\n                endOffset = 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */;\n            }\n        }\n        if (!startElement || !endElement) {\n            return null;\n        }\n        startOffset = Math.min(startElement.textContent.length, Math.max(0, startOffset));\n        endOffset = Math.min(endElement.textContent.length, Math.max(0, endOffset));\n        const clientRects = this._readClientRects(startElement, startOffset, endElement, endOffset, context.endNode);\n        context.markDidDomLayout();\n        return this._createHorizontalRangesFromClientRects(clientRects, context.clientRectDeltaLeft, context.clientRectScale);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { RangeUtil } from './rangeUtil.js';\nimport { FloatHorizontalRange, VisibleRanges } from '../../view/renderingContext.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine, LineRange, DomPosition } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nconst canUseFastRenderedViewLine = (function () {\n    if (platform.isNative) {\n        // In VSCode we know very well when the zoom level changes\n        return true;\n    }\n    if (platform.isLinux || browser.isFirefox || browser.isSafari) {\n        // On Linux, it appears that zooming affects char widths (in pixels), which is unexpected.\n        // --\n        // Even though we read character widths correctly, having read them at a specific zoom level\n        // does not mean they are the same at the current zoom level.\n        // --\n        // This could be improved if we ever figure out how to get an event when browsers zoom,\n        // but until then we have to stick with reading client rects.\n        // --\n        // The same has been observed with Firefox on Windows7\n        // --\n        // The same has been oversved with Safari\n        return false;\n    }\n    return true;\n})();\nlet monospaceAssumptionsAreValid = true;\nexport class ViewLineOptions {\n    constructor(config, themeType) {\n        this.themeType = themeType;\n        const options = config.options;\n        const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        const experimentalWhitespaceRendering = options.get(38 /* EditorOption.experimentalWhitespaceRendering */);\n        if (experimentalWhitespaceRendering === 'off') {\n            this.renderWhitespace = options.get(100 /* EditorOption.renderWhitespace */);\n        }\n        else {\n            // whitespace is rendered in a different layer\n            this.renderWhitespace = 'none';\n        }\n        this.renderControlCharacters = options.get(95 /* EditorOption.renderControlCharacters */);\n        this.spaceWidth = fontInfo.spaceWidth;\n        this.middotWidth = fontInfo.middotWidth;\n        this.wsmiddotWidth = fontInfo.wsmiddotWidth;\n        this.useMonospaceOptimizations = (fontInfo.isMonospace\n            && !options.get(33 /* EditorOption.disableMonospaceOptimizations */));\n        this.canUseHalfwidthRightwardsArrow = fontInfo.canUseHalfwidthRightwardsArrow;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stopRenderingLineAfter = options.get(118 /* EditorOption.stopRenderingLineAfter */);\n        this.fontLigatures = options.get(51 /* EditorOption.fontLigatures */);\n    }\n    equals(other) {\n        return (this.themeType === other.themeType\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.spaceWidth === other.spaceWidth\n            && this.middotWidth === other.middotWidth\n            && this.wsmiddotWidth === other.wsmiddotWidth\n            && this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineHeight === other.lineHeight\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.fontLigatures === other.fontLigatures);\n    }\n}\nexport class ViewLine {\n    static { this.CLASS_NAME = 'view-line'; }\n    constructor(options) {\n        this._options = options;\n        this._isMaybeInvalid = true;\n        this._renderedViewLine = null;\n    }\n    // --- begin IVisibleLineData\n    getDomNode() {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            return this._renderedViewLine.domNode.domNode;\n        }\n        return null;\n    }\n    setDomNode(domNode) {\n        if (this._renderedViewLine) {\n            this._renderedViewLine.domNode = createFastDomNode(domNode);\n        }\n        else {\n            throw new Error('I have no rendered view line to set the dom node to...');\n        }\n    }\n    onContentChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onTokensChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onDecorationsChanged() {\n        this._isMaybeInvalid = true;\n    }\n    onOptionsChanged(newOptions) {\n        this._isMaybeInvalid = true;\n        this._options = newOptions;\n    }\n    onSelectionChanged() {\n        if (isHighContrast(this._options.themeType) || this._options.renderWhitespace === 'selection') {\n            this._isMaybeInvalid = true;\n            return true;\n        }\n        return false;\n    }\n    renderLine(lineNumber, deltaTop, lineHeight, viewportData, sb) {\n        if (this._isMaybeInvalid === false) {\n            // it appears that nothing relevant has changed\n            return false;\n        }\n        this._isMaybeInvalid = false;\n        const lineData = viewportData.getViewLineRenderingData(lineNumber);\n        const options = this._options;\n        const actualInlineDecorations = LineDecoration.filter(lineData.inlineDecorations, lineNumber, lineData.minColumn, lineData.maxColumn);\n        // Only send selection information when needed for rendering whitespace\n        let selectionsOnLine = null;\n        if (isHighContrast(options.themeType) || this._options.renderWhitespace === 'selection') {\n            const selections = viewportData.selections;\n            for (const selection of selections) {\n                if (selection.endLineNumber < lineNumber || selection.startLineNumber > lineNumber) {\n                    // Selection does not intersect line\n                    continue;\n                }\n                const startColumn = (selection.startLineNumber === lineNumber ? selection.startColumn : lineData.minColumn);\n                const endColumn = (selection.endLineNumber === lineNumber ? selection.endColumn : lineData.maxColumn);\n                if (startColumn < endColumn) {\n                    if (isHighContrast(options.themeType)) {\n                        actualInlineDecorations.push(new LineDecoration(startColumn, endColumn, 'inline-selected-text', 0 /* InlineDecorationType.Regular */));\n                    }\n                    if (this._options.renderWhitespace === 'selection') {\n                        if (!selectionsOnLine) {\n                            selectionsOnLine = [];\n                        }\n                        selectionsOnLine.push(new LineRange(startColumn - 1, endColumn - 1));\n                    }\n                }\n            }\n        }\n        const renderLineInput = new RenderLineInput(options.useMonospaceOptimizations, options.canUseHalfwidthRightwardsArrow, lineData.content, lineData.continuesWithWrappedLine, lineData.isBasicASCII, lineData.containsRTL, lineData.minColumn - 1, lineData.tokens, actualInlineDecorations, lineData.tabSize, lineData.startVisibleColumn, options.spaceWidth, options.middotWidth, options.wsmiddotWidth, options.stopRenderingLineAfter, options.renderWhitespace, options.renderControlCharacters, options.fontLigatures !== EditorFontLigatures.OFF, selectionsOnLine);\n        if (this._renderedViewLine && this._renderedViewLine.input.equals(renderLineInput)) {\n            // no need to do anything, we have the same render input\n            return false;\n        }\n        sb.appendString('<div style=\"top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;height:');\n        sb.appendString(String(lineHeight));\n        sb.appendString('px;\" class=\"');\n        sb.appendString(ViewLine.CLASS_NAME);\n        sb.appendString('\">');\n        const output = renderViewLine(renderLineInput, sb);\n        sb.appendString('</div>');\n        let renderedViewLine = null;\n        if (monospaceAssumptionsAreValid && canUseFastRenderedViewLine && lineData.isBasicASCII && options.useMonospaceOptimizations && output.containsForeignElements === 0 /* ForeignElementType.None */) {\n            renderedViewLine = new FastRenderedViewLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping);\n        }\n        if (!renderedViewLine) {\n            renderedViewLine = createRenderedLine(this._renderedViewLine ? this._renderedViewLine.domNode : null, renderLineInput, output.characterMapping, output.containsRTL, output.containsForeignElements);\n        }\n        this._renderedViewLine = renderedViewLine;\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop, lineHeight) {\n        if (this._renderedViewLine && this._renderedViewLine.domNode) {\n            this._renderedViewLine.domNode.setTop(deltaTop);\n            this._renderedViewLine.domNode.setHeight(lineHeight);\n        }\n    }\n    // --- end IVisibleLineData\n    getWidth(context) {\n        if (!this._renderedViewLine) {\n            return 0;\n        }\n        return this._renderedViewLine.getWidth(context);\n    }\n    getWidthIsFast() {\n        if (!this._renderedViewLine) {\n            return true;\n        }\n        return this._renderedViewLine.getWidthIsFast();\n    }\n    needsMonospaceFontCheck() {\n        if (!this._renderedViewLine) {\n            return false;\n        }\n        return (this._renderedViewLine instanceof FastRenderedViewLine);\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this._renderedViewLine) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this._renderedViewLine instanceof FastRenderedViewLine) {\n            return this._renderedViewLine.monospaceAssumptionsAreValid();\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    onMonospaceAssumptionsInvalidated() {\n        if (this._renderedViewLine && this._renderedViewLine instanceof FastRenderedViewLine) {\n            this._renderedViewLine = this._renderedViewLine.toSlowRenderedLine();\n        }\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this._renderedViewLine) {\n            return null;\n        }\n        startColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, startColumn));\n        endColumn = Math.min(this._renderedViewLine.input.lineContent.length + 1, Math.max(1, endColumn));\n        const stopRenderingLineAfter = this._renderedViewLine.input.stopRenderingLineAfter;\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1 && endColumn > stopRenderingLineAfter + 1) {\n            // This range is obviously not visible\n            return new VisibleRanges(true, [new FloatHorizontalRange(this.getWidth(context), 0)]);\n        }\n        if (stopRenderingLineAfter !== -1 && startColumn > stopRenderingLineAfter + 1) {\n            startColumn = stopRenderingLineAfter + 1;\n        }\n        if (stopRenderingLineAfter !== -1 && endColumn > stopRenderingLineAfter + 1) {\n            endColumn = stopRenderingLineAfter + 1;\n        }\n        const horizontalRanges = this._renderedViewLine.getVisibleRangesForRange(lineNumber, startColumn, endColumn, context);\n        if (horizontalRanges && horizontalRanges.length > 0) {\n            return new VisibleRanges(false, horizontalRanges);\n        }\n        return null;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        if (!this._renderedViewLine) {\n            return 1;\n        }\n        return this._renderedViewLine.getColumnOfNodeOffset(spanNode, offset);\n    }\n}\n/**\n * A rendered line which is guaranteed to contain only regular ASCII and is rendered with a monospace font.\n */\nclass FastRenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping) {\n        this._cachedWidth = -1;\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        const keyColumnCount = Math.floor(renderLineInput.lineContent.length / 300 /* Constants.MaxMonospaceDistance */);\n        if (keyColumnCount > 0) {\n            this._keyColumnPixelOffsetCache = new Float32Array(keyColumnCount);\n            for (let i = 0; i < keyColumnCount; i++) {\n                this._keyColumnPixelOffsetCache[i] = -1;\n            }\n        }\n        else {\n            this._keyColumnPixelOffsetCache = null;\n        }\n        this._characterMapping = characterMapping;\n        this._charWidth = renderLineInput.spaceWidth;\n    }\n    getWidth(context) {\n        if (!this.domNode || this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(this._characterMapping.length);\n            return Math.round(this._charWidth * horizontalOffset);\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context?.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        return (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) || this._cachedWidth !== -1;\n    }\n    monospaceAssumptionsAreValid() {\n        if (!this.domNode) {\n            return monospaceAssumptionsAreValid;\n        }\n        if (this.input.lineContent.length < 300 /* Constants.MaxMonospaceDistance */) {\n            const expectedWidth = this.getWidth(null);\n            const actualWidth = this.domNode.domNode.firstChild.offsetWidth;\n            if (Math.abs(expectedWidth - actualWidth) >= 2) {\n                // more than 2px off\n                console.warn(`monospace assumptions have been violated, therefore disabling monospace optimizations!`);\n                monospaceAssumptionsAreValid = false;\n            }\n        }\n        return monospaceAssumptionsAreValid;\n    }\n    toSlowRenderedLine() {\n        return createRenderedLine(this.domNode, this.input, this._characterMapping, false, 0 /* ForeignElementType.None */);\n    }\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        const startPosition = this._getColumnPixelOffset(lineNumber, startColumn, context);\n        const endPosition = this._getColumnPixelOffset(lineNumber, endColumn, context);\n        return [new FloatHorizontalRange(startPosition, endPosition - startPosition)];\n    }\n    _getColumnPixelOffset(lineNumber, column, context) {\n        if (column <= 300 /* Constants.MaxMonospaceDistance */) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnOrdinal = Math.floor((column - 1) / 300 /* Constants.MaxMonospaceDistance */) - 1;\n        const keyColumn = (keyColumnOrdinal + 1) * 300 /* Constants.MaxMonospaceDistance */ + 1;\n        let keyColumnPixelOffset = -1;\n        if (this._keyColumnPixelOffsetCache) {\n            keyColumnPixelOffset = this._keyColumnPixelOffsetCache[keyColumnOrdinal];\n            if (keyColumnPixelOffset === -1) {\n                keyColumnPixelOffset = this._actualReadPixelOffset(lineNumber, keyColumn, context);\n                this._keyColumnPixelOffsetCache[keyColumnOrdinal] = keyColumnPixelOffset;\n            }\n        }\n        if (keyColumnPixelOffset === -1) {\n            // Could not read actual key column pixel offset\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            return this._charWidth * horizontalOffset;\n        }\n        const keyColumnHorizontalOffset = this._characterMapping.getHorizontalOffset(keyColumn);\n        const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n        return keyColumnPixelOffset + this._charWidth * (horizontalOffset - keyColumnHorizontalOffset);\n    }\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    _actualReadPixelOffset(lineNumber, column, context) {\n        if (!this.domNode) {\n            return -1;\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(this.domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        return r[0].left;\n    }\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\n/**\n * Every time we render a line, we save what we have rendered in an instance of this class.\n */\nclass RenderedViewLine {\n    constructor(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n        this.domNode = domNode;\n        this.input = renderLineInput;\n        this._characterMapping = characterMapping;\n        this._isWhitespaceOnly = /^\\s*$/.test(renderLineInput.lineContent);\n        this._containsForeignElements = containsForeignElements;\n        this._cachedWidth = -1;\n        this._pixelOffsetCache = null;\n        if (!containsRTL || this._characterMapping.length === 0 /* the line is empty */) {\n            this._pixelOffsetCache = new Float32Array(Math.max(2, this._characterMapping.length + 1));\n            for (let column = 0, len = this._characterMapping.length; column <= len; column++) {\n                this._pixelOffsetCache[column] = -1;\n            }\n        }\n    }\n    // --- Reading from the DOM methods\n    _getReadingTarget(myDomNode) {\n        return myDomNode.domNode.firstChild;\n    }\n    /**\n     * Width of the line in pixels\n     */\n    getWidth(context) {\n        if (!this.domNode) {\n            return 0;\n        }\n        if (this._cachedWidth === -1) {\n            this._cachedWidth = this._getReadingTarget(this.domNode).offsetWidth;\n            context?.markDidDomLayout();\n        }\n        return this._cachedWidth;\n    }\n    getWidthIsFast() {\n        if (this._cachedWidth === -1) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Visible ranges for a model range\n     */\n    getVisibleRangesForRange(lineNumber, startColumn, endColumn, context) {\n        if (!this.domNode) {\n            return null;\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const startOffset = this._readPixelOffset(this.domNode, lineNumber, startColumn, context);\n            if (startOffset === -1) {\n                return null;\n            }\n            const endOffset = this._readPixelOffset(this.domNode, lineNumber, endColumn, context);\n            if (endOffset === -1) {\n                return null;\n            }\n            return [new FloatHorizontalRange(startOffset, endOffset - startOffset)];\n        }\n        return this._readVisibleRangesForRange(this.domNode, lineNumber, startColumn, endColumn, context);\n    }\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        if (startColumn === endColumn) {\n            const pixelOffset = this._readPixelOffset(domNode, lineNumber, startColumn, context);\n            if (pixelOffset === -1) {\n                return null;\n            }\n            else {\n                return [new FloatHorizontalRange(pixelOffset, 0)];\n            }\n        }\n        else {\n            return this._readRawVisibleRangesForRange(domNode, startColumn, endColumn, context);\n        }\n    }\n    _readPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            if (this._containsForeignElements === 0 /* ForeignElementType.None */) {\n                // We can assume the line is really empty\n                return 0;\n            }\n            if (this._containsForeignElements === 2 /* ForeignElementType.After */) {\n                // We have foreign elements after the (empty) line\n                return 0;\n            }\n            if (this._containsForeignElements === 1 /* ForeignElementType.Before */) {\n                // We have foreign elements before the (empty) line\n                return this.getWidth(context);\n            }\n            // We have foreign elements before & after the (empty) line\n            const readingTarget = this._getReadingTarget(domNode);\n            if (readingTarget.firstChild) {\n                context.markDidDomLayout();\n                return readingTarget.firstChild.offsetWidth;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (this._pixelOffsetCache !== null) {\n            // the text is LTR\n            const cachedPixelOffset = this._pixelOffsetCache[column];\n            if (cachedPixelOffset !== -1) {\n                return cachedPixelOffset;\n            }\n            const result = this._actualReadPixelOffset(domNode, lineNumber, column, context);\n            this._pixelOffsetCache[column] = result;\n            return result;\n        }\n        return this._actualReadPixelOffset(domNode, lineNumber, column, context);\n    }\n    _actualReadPixelOffset(domNode, lineNumber, column, context) {\n        if (this._characterMapping.length === 0) {\n            // This line has no content\n            const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), 0, 0, 0, 0, context);\n            if (!r || r.length === 0) {\n                return -1;\n            }\n            return r[0].left;\n        }\n        if (column === this._characterMapping.length && this._isWhitespaceOnly && this._containsForeignElements === 0 /* ForeignElementType.None */) {\n            // This branch helps in the case of whitespace only lines which have a width set\n            return this.getWidth(context);\n        }\n        const domPosition = this._characterMapping.getDomPosition(column);\n        const r = RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), domPosition.partIndex, domPosition.charIndex, domPosition.partIndex, domPosition.charIndex, context);\n        if (!r || r.length === 0) {\n            return -1;\n        }\n        const result = r[0].left;\n        if (this.input.isBasicASCII) {\n            const horizontalOffset = this._characterMapping.getHorizontalOffset(column);\n            const expectedResult = Math.round(this.input.spaceWidth * horizontalOffset);\n            if (Math.abs(expectedResult - result) <= 1) {\n                return expectedResult;\n            }\n        }\n        return result;\n    }\n    _readRawVisibleRangesForRange(domNode, startColumn, endColumn, context) {\n        if (startColumn === 1 && endColumn === this._characterMapping.length) {\n            // This branch helps IE with bidi text & gives a performance boost to other browsers when reading visible ranges for an entire line\n            return [new FloatHorizontalRange(0, this.getWidth(context))];\n        }\n        const startDomPosition = this._characterMapping.getDomPosition(startColumn);\n        const endDomPosition = this._characterMapping.getDomPosition(endColumn);\n        return RangeUtil.readHorizontalRanges(this._getReadingTarget(domNode), startDomPosition.partIndex, startDomPosition.charIndex, endDomPosition.partIndex, endDomPosition.charIndex, context);\n    }\n    /**\n     * Returns the column for the text found at a specific offset inside a rendered dom node\n     */\n    getColumnOfNodeOffset(spanNode, offset) {\n        return getColumnOfNodeOffset(this._characterMapping, spanNode, offset);\n    }\n}\nclass WebKitRenderedViewLine extends RenderedViewLine {\n    _readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context) {\n        const output = super._readVisibleRangesForRange(domNode, lineNumber, startColumn, endColumn, context);\n        if (!output || output.length === 0 || startColumn === endColumn || (startColumn === 1 && endColumn === this._characterMapping.length)) {\n            return output;\n        }\n        // WebKit is buggy and returns an expanded range (to contain words in some cases)\n        // The last client rect is enlarged (I think)\n        if (!this.input.containsRTL) {\n            // This is an attempt to patch things up\n            // Find position of last column\n            const endPixelOffset = this._readPixelOffset(domNode, lineNumber, endColumn, context);\n            if (endPixelOffset !== -1) {\n                const lastRange = output[output.length - 1];\n                if (lastRange.left < endPixelOffset) {\n                    // Trim down the width of the last visible range to not go after the last column's position\n                    lastRange.width = endPixelOffset - lastRange.left;\n                }\n            }\n        }\n        return output;\n    }\n}\nconst createRenderedLine = (function () {\n    if (browser.isWebKit) {\n        return createWebKitRenderedLine;\n    }\n    return createNormalRenderedLine;\n})();\nfunction createWebKitRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new WebKitRenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nfunction createNormalRenderedLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements) {\n    return new RenderedViewLine(domNode, renderLineInput, characterMapping, containsRTL, containsForeignElements);\n}\nexport function getColumnOfNodeOffset(characterMapping, spanNode, offset) {\n    const spanNodeTextContentLength = spanNode.textContent.length;\n    let spanIndex = -1;\n    while (spanNode) {\n        spanNode = spanNode.previousSibling;\n        spanIndex++;\n    }\n    return characterMapping.getColumn(new DomPosition(spanIndex, offset), spanNodeTextContentLength);\n}\n","/*! @license DOMPurify 3.1.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.1.7/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param {Function} func - The function to be wrapped and called.\n * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param {Function} func - The constructor function to be wrapped and called.\n * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n\n/**\n * Add properties to a lookup table\n *\n * @param {Object} set - The set to which elements will be added.\n * @param {Array} array - The array containing elements to be added to the set.\n * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns {Object} The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n\n/**\n * Clean up an array to harden against CSPP\n *\n * @param {Array} array - The array to be cleaned.\n * @returns {Array} The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n\n/**\n * Shallow clone an object\n *\n * @param {Object} object - The object to be cloned.\n * @returns {Object} A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param {Object} object - The object to look up the getter function in its prototype chain.\n * @param {String} prop - The property name for which to find the getter function.\n * @returns {Function} The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n// SVG\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  ERB_EXPR: ERB_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR,\n  DATA_ATTR: DATA_ATTR,\n  ARIA_ATTR: ARIA_ATTR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT\n});\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = '3.1.7';\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n      // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n      // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n    ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  const HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n  /**\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node\n      });\n    }\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) { }\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) { }\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) { }\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param  {Node} root The root element or node to start traversing on.\n   * @return {NodeIterator} The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(elm) {\n    return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n  };\n\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param  {Node} object object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function _isNode(object) {\n    return typeof Node === 'function' && object instanceof Node;\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n    arrayForEach(hooks[entryPoint], hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)); else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)); else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))); else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]); else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))); else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]); else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))); else if (value) {\n      return false;\n    } else;\n    return true;\n  };\n\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param {string} tagName name of the tag of the node to sanitize\n   * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR\n    };\n    let l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI); else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) { }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} cfg object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n    }\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {String} tag Tag name of containing element.\n   * @param  {String} attr Attribute name.\n   * @param  {String} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\n// ESM-comment-begin\n// define(function () { return purify; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport default purify;\nexport const version = purify.version;\nexport const isSupported = purify.isSupported;\nexport const sanitize = purify.sanitize;\nexport const setConfig = purify.setConfig;\nexport const clearConfig = purify.clearConfig;\nexport const isValidAttribute = purify.isValidAttribute;\nexport const addHook = purify.addHook;\nexport const removeHook = purify.removeHook;\nexport const removeHooks = purify.removeHooks;\nexport const removeAllHooks = purify.removeAllHooks;\n// ESM-uncomment-end\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== child.ownerDocument.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { mainWindow } from './window.js';\nimport * as platform from '../common/platform.js';\n/**\n * Browser feature we can support in current platform, browser and environment.\n */\nexport const BrowserFeatures = {\n    clipboard: {\n        writeText: (platform.isNative\n            || (document.queryCommandSupported && document.queryCommandSupported('copy'))\n            || !!(navigator && navigator.clipboard && navigator.clipboard.writeText)),\n        readText: (platform.isNative\n            || !!(navigator && navigator.clipboard && navigator.clipboard.readText))\n    },\n    keyboard: (() => {\n        if (platform.isNative || browser.isStandalone()) {\n            return 0 /* KeyboardSupport.Always */;\n        }\n        if (navigator.keyboard || browser.isSafari) {\n            return 1 /* KeyboardSupport.FullScreen */;\n        }\n        return 2 /* KeyboardSupport.None */;\n    })(),\n    // 'ontouchstart' in window always evaluates to true with typescript's modern typings. This causes `window` to be\n    // `never` later in `window.navigator`. That's why we need the explicit `window as Window` cast\n    touch: 'ontouchstart' in mainWindow || navigator.maxTouchPoints > 0,\n    pointerEvents: mainWindow.PointerEvent && ('ontouchstart' in mainWindow || navigator.maxTouchPoints > 0)\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from './dom.js';\nimport { DisposableStore, toDisposable } from '../common/lifecycle.js';\nexport class GlobalPointerMoveMonitor {\n    constructor() {\n        this._hooks = new DisposableStore();\n        this._pointerMoveCallback = null;\n        this._onStopCallback = null;\n    }\n    dispose() {\n        this.stopMonitoring(false);\n        this._hooks.dispose();\n    }\n    stopMonitoring(invokeStopCallback, browserEvent) {\n        if (!this.isMonitoring()) {\n            // Not monitoring\n            return;\n        }\n        // Unhook\n        this._hooks.clear();\n        this._pointerMoveCallback = null;\n        const onStopCallback = this._onStopCallback;\n        this._onStopCallback = null;\n        if (invokeStopCallback && onStopCallback) {\n            onStopCallback(browserEvent);\n        }\n    }\n    isMonitoring() {\n        return !!this._pointerMoveCallback;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        if (this.isMonitoring()) {\n            this.stopMonitoring(false);\n        }\n        this._pointerMoveCallback = pointerMoveCallback;\n        this._onStopCallback = onStopCallback;\n        let eventSource = initialElement;\n        try {\n            initialElement.setPointerCapture(pointerId);\n            this._hooks.add(toDisposable(() => {\n                try {\n                    initialElement.releasePointerCapture(pointerId);\n                }\n                catch (err) {\n                    // See https://github.com/microsoft/vscode/issues/161731\n                    //\n                    // `releasePointerCapture` sometimes fails when being invoked with the exception:\n                    //     DOMException: Failed to execute 'releasePointerCapture' on 'Element':\n                    //     No active pointer with the given id is found.\n                    //\n                    // There's no need to do anything in case of failure\n                }\n            }));\n        }\n        catch (err) {\n            // See https://github.com/microsoft/vscode/issues/144584\n            // See https://github.com/microsoft/vscode/issues/146947\n            // `setPointerCapture` sometimes fails when being invoked\n            // from a `mousedown` listener on macOS and Windows\n            // and it always fails on Linux with the exception:\n            //     DOMException: Failed to execute 'setPointerCapture' on 'Element':\n            //     No active pointer with the given id is found.\n            // In case of failure, we bind the listeners on the window\n            eventSource = dom.getWindow(initialElement);\n        }\n        this._hooks.add(dom.addDisposableListener(eventSource, dom.EventType.POINTER_MOVE, (e) => {\n            if (e.buttons !== initialButtons) {\n                // Buttons state has changed in the meantime\n                this.stopMonitoring(true);\n                return;\n            }\n            e.preventDefault();\n            this._pointerMoveCallback(e);\n        }));\n        this._hooks.add(dom.addDisposableListener(eventSource, dom.EventType.POINTER_UP, (e) => this.stopMonitoring(true)));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CancellationTokenSource } from './cancellation.js';\nimport { BugIndicatingError, CancellationError } from './errors.js';\nimport { Emitter, Event } from './event.js';\nimport { toDisposable } from './lifecycle.js';\nimport { setTimeout0 } from './platform.js';\nimport { MicrotaskDelay } from './symbols.js';\nexport function isThenable(obj) {\n    return !!obj && typeof obj.then === 'function';\n}\nexport function createCancelablePromise(callback) {\n    const source = new CancellationTokenSource();\n    const thenable = callback(source.token);\n    const promise = new Promise((resolve, reject) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            reject(new CancellationError());\n        });\n        Promise.resolve(thenable).then(value => {\n            subscription.dispose();\n            source.dispose();\n            resolve(value);\n        }, err => {\n            subscription.dispose();\n            source.dispose();\n            reject(err);\n        });\n    });\n    return new class {\n        cancel() {\n            source.cancel();\n            source.dispose();\n        }\n        then(resolve, reject) {\n            return promise.then(resolve, reject);\n        }\n        catch(reject) {\n            return this.then(undefined, reject);\n        }\n        finally(onfinally) {\n            return promise.finally(onfinally);\n        }\n    };\n}\nexport function raceCancellation(promise, token, defaultValue) {\n    return new Promise((resolve, reject) => {\n        const ref = token.onCancellationRequested(() => {\n            ref.dispose();\n            resolve(defaultValue);\n        });\n        promise.then(resolve, reject).finally(() => ref.dispose());\n    });\n}\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n    constructor() {\n        this.isDisposed = false;\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n    queue(promiseFactory) {\n        if (this.isDisposed) {\n            return Promise.reject(new Error('Throttler is disposed'));\n        }\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n                    if (this.isDisposed) {\n                        return;\n                    }\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n                    return result;\n                };\n                this.queuedPromise = new Promise(resolve => {\n                    this.activePromise.then(onComplete, onComplete).then(resolve);\n                });\n            }\n            return new Promise((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n        this.activePromise = promiseFactory();\n        return new Promise((resolve, reject) => {\n            this.activePromise.then((result) => {\n                this.activePromise = null;\n                resolve(result);\n            }, (err) => {\n                this.activePromise = null;\n                reject(err);\n            });\n        });\n    }\n    dispose() {\n        this.isDisposed = true;\n    }\n}\nconst timeoutDeferred = (timeout, fn) => {\n    let scheduled = true;\n    const handle = setTimeout(() => {\n        scheduled = false;\n        fn();\n    }, timeout);\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => {\n            clearTimeout(handle);\n            scheduled = false;\n        },\n    };\n};\nconst microtaskDeferred = (fn) => {\n    let scheduled = true;\n    queueMicrotask(() => {\n        if (scheduled) {\n            scheduled = false;\n            fn();\n        }\n    });\n    return {\n        isTriggered: () => scheduled,\n        dispose: () => { scheduled = false; },\n    };\n};\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer {\n    constructor(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.deferred = null;\n        this.completionPromise = null;\n        this.doResolve = null;\n        this.doReject = null;\n        this.task = null;\n    }\n    trigger(task, delay = this.defaultDelay) {\n        this.task = task;\n        this.cancelTimeout();\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise((resolve, reject) => {\n                this.doResolve = resolve;\n                this.doReject = reject;\n            }).then(() => {\n                this.completionPromise = null;\n                this.doResolve = null;\n                if (this.task) {\n                    const task = this.task;\n                    this.task = null;\n                    return task();\n                }\n                return undefined;\n            });\n        }\n        const fn = () => {\n            this.deferred = null;\n            this.doResolve?.(null);\n        };\n        this.deferred = delay === MicrotaskDelay ? microtaskDeferred(fn) : timeoutDeferred(delay, fn);\n        return this.completionPromise;\n    }\n    isTriggered() {\n        return !!this.deferred?.isTriggered();\n    }\n    cancel() {\n        this.cancelTimeout();\n        if (this.completionPromise) {\n            this.doReject?.(new CancellationError());\n            this.completionPromise = null;\n        }\n    }\n    cancelTimeout() {\n        this.deferred?.dispose();\n        this.deferred = null;\n    }\n    dispose() {\n        this.cancel();\n    }\n}\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer {\n    constructor(defaultDelay) {\n        this.delayer = new Delayer(defaultDelay);\n        this.throttler = new Throttler();\n    }\n    trigger(promiseFactory, delay) {\n        return this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n    cancel() {\n        this.delayer.cancel();\n    }\n    dispose() {\n        this.delayer.dispose();\n        this.throttler.dispose();\n    }\n}\nexport function timeout(millis, token) {\n    if (!token) {\n        return createCancelablePromise(token => timeout(millis, token));\n    }\n    return new Promise((resolve, reject) => {\n        const handle = setTimeout(() => {\n            disposable.dispose();\n            resolve();\n        }, millis);\n        const disposable = token.onCancellationRequested(() => {\n            clearTimeout(handle);\n            disposable.dispose();\n            reject(new CancellationError());\n        });\n    });\n}\n/**\n * Creates a timeout that can be disposed using its returned value.\n * @param handler The timeout handler.\n * @param timeout An optional timeout in milliseconds.\n * @param store An optional {@link DisposableStore} that will have the timeout disposable managed automatically.\n *\n * @example\n * const store = new DisposableStore;\n * // Call the timeout after 1000ms at which point it will be automatically\n * // evicted from the store.\n * const timeoutDisposable = disposableTimeout(() => {}, 1000, store);\n *\n * if (foo) {\n *   // Cancel the timeout and evict it from store.\n *   timeoutDisposable.dispose();\n * }\n */\nexport function disposableTimeout(handler, timeout = 0, store) {\n    const timer = setTimeout(() => {\n        handler();\n        if (store) {\n            disposable.dispose();\n        }\n    }, timeout);\n    const disposable = toDisposable(() => {\n        clearTimeout(timer);\n        store?.deleteAndLeak(disposable);\n    });\n    store?.add(disposable);\n    return disposable;\n}\nexport function first(promiseFactories, shouldStop = t => !!t, defaultValue = null) {\n    let index = 0;\n    const len = promiseFactories.length;\n    const loop = () => {\n        if (index >= len) {\n            return Promise.resolve(defaultValue);\n        }\n        const factory = promiseFactories[index++];\n        const promise = Promise.resolve(factory());\n        return promise.then(result => {\n            if (shouldStop(result)) {\n                return Promise.resolve(result);\n            }\n            return loop();\n        });\n    };\n    return loop();\n}\nexport class TimeoutTimer {\n    constructor(runner, timeout) {\n        this._isDisposed = false;\n        this._token = -1;\n        if (typeof runner === 'function' && typeof timeout === 'number') {\n            this.setIfNotSet(runner, timeout);\n        }\n    }\n    dispose() {\n        this.cancel();\n        this._isDisposed = true;\n    }\n    cancel() {\n        if (this._token !== -1) {\n            clearTimeout(this._token);\n            this._token = -1;\n        }\n    }\n    cancelAndSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw new BugIndicatingError(`Calling 'cancelAndSet' on a disposed TimeoutTimer`);\n        }\n        this.cancel();\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n    setIfNotSet(runner, timeout) {\n        if (this._isDisposed) {\n            throw new BugIndicatingError(`Calling 'setIfNotSet' on a disposed TimeoutTimer`);\n        }\n        if (this._token !== -1) {\n            // timer is already set\n            return;\n        }\n        this._token = setTimeout(() => {\n            this._token = -1;\n            runner();\n        }, timeout);\n    }\n}\nexport class IntervalTimer {\n    constructor() {\n        this.disposable = undefined;\n        this.isDisposed = false;\n    }\n    cancel() {\n        this.disposable?.dispose();\n        this.disposable = undefined;\n    }\n    cancelAndSet(runner, interval, context = globalThis) {\n        if (this.isDisposed) {\n            throw new BugIndicatingError(`Calling 'cancelAndSet' on a disposed IntervalTimer`);\n        }\n        this.cancel();\n        const handle = context.setInterval(() => {\n            runner();\n        }, interval);\n        this.disposable = toDisposable(() => {\n            context.clearInterval(handle);\n            this.disposable = undefined;\n        });\n    }\n    dispose() {\n        this.cancel();\n        this.isDisposed = true;\n    }\n}\nexport class RunOnceScheduler {\n    constructor(runner, delay) {\n        this.timeoutToken = -1;\n        this.runner = runner;\n        this.timeout = delay;\n        this.timeoutHandler = this.onTimeout.bind(this);\n    }\n    /**\n     * Dispose RunOnceScheduler\n     */\n    dispose() {\n        this.cancel();\n        this.runner = null;\n    }\n    /**\n     * Cancel current scheduled runner (if any).\n     */\n    cancel() {\n        if (this.isScheduled()) {\n            clearTimeout(this.timeoutToken);\n            this.timeoutToken = -1;\n        }\n    }\n    /**\n     * Cancel previous runner (if any) & schedule a new runner.\n     */\n    schedule(delay = this.timeout) {\n        this.cancel();\n        this.timeoutToken = setTimeout(this.timeoutHandler, delay);\n    }\n    get delay() {\n        return this.timeout;\n    }\n    set delay(value) {\n        this.timeout = value;\n    }\n    /**\n     * Returns true if scheduled.\n     */\n    isScheduled() {\n        return this.timeoutToken !== -1;\n    }\n    onTimeout() {\n        this.timeoutToken = -1;\n        if (this.runner) {\n            this.doRun();\n        }\n    }\n    doRun() {\n        this.runner?.();\n    }\n}\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n *\n * **Note** that there is `dom.ts#runWhenWindowIdle` which is better suited when running inside a browser\n * context\n */\nexport let runWhenGlobalIdle;\nexport let _runWhenIdle;\n(function () {\n    if (typeof globalThis.requestIdleCallback !== 'function' || typeof globalThis.cancelIdleCallback !== 'function') {\n        _runWhenIdle = (_targetWindow, runner) => {\n            setTimeout0(() => {\n                if (disposed) {\n                    return;\n                }\n                const end = Date.now() + 15; // one frame at 64fps\n                const deadline = {\n                    didTimeout: true,\n                    timeRemaining() {\n                        return Math.max(0, end - Date.now());\n                    }\n                };\n                runner(Object.freeze(deadline));\n            });\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                }\n            };\n        };\n    }\n    else {\n        _runWhenIdle = (targetWindow, runner, timeout) => {\n            const handle = targetWindow.requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n            let disposed = false;\n            return {\n                dispose() {\n                    if (disposed) {\n                        return;\n                    }\n                    disposed = true;\n                    targetWindow.cancelIdleCallback(handle);\n                }\n            };\n        };\n    }\n    runWhenGlobalIdle = (runner) => _runWhenIdle(globalThis, runner);\n})();\nexport class AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        this._didRun = false;\n        this._executor = () => {\n            try {\n                this._value = executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        };\n        this._handle = _runWhenIdle(targetWindow, () => this._executor());\n    }\n    dispose() {\n        this._handle.dispose();\n    }\n    get value() {\n        if (!this._didRun) {\n            this._handle.dispose();\n            this._executor();\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    get isInitialized() {\n        return this._didRun;\n    }\n}\n/**\n * An `IdleValue` that always uses the current window (which might be throttled or inactive)\n *\n * **Note** that there is `dom.ts#WindowIdleValue` which is better suited when running inside a browser\n * context\n */\nexport class GlobalIdleValue extends AbstractIdleValue {\n    constructor(executor) {\n        super(globalThis, executor);\n    }\n}\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise {\n    get isRejected() {\n        return this.outcome?.outcome === 1 /* DeferredOutcome.Rejected */;\n    }\n    get isSettled() {\n        return !!this.outcome;\n    }\n    constructor() {\n        this.p = new Promise((c, e) => {\n            this.completeCallback = c;\n            this.errorCallback = e;\n        });\n    }\n    complete(value) {\n        return new Promise(resolve => {\n            this.completeCallback(value);\n            this.outcome = { outcome: 0 /* DeferredOutcome.Resolved */, value };\n            resolve();\n        });\n    }\n    error(err) {\n        return new Promise(resolve => {\n            this.errorCallback(err);\n            this.outcome = { outcome: 1 /* DeferredOutcome.Rejected */, value: err };\n            resolve();\n        });\n    }\n    cancel() {\n        return this.error(new CancellationError());\n    }\n}\n//#endregion\n//#region Promises\nexport var Promises;\n(function (Promises) {\n    /**\n     * A drop-in replacement for `Promise.all` with the only difference\n     * that the method awaits every promise to either fulfill or reject.\n     *\n     * Similar to `Promise.all`, only the first error will be returned\n     * if any.\n     */\n    async function settled(promises) {\n        let firstError = undefined;\n        const result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n            if (!firstError) {\n                firstError = error;\n            }\n            return undefined; // do not rethrow so that other promises can settle\n        })));\n        if (typeof firstError !== 'undefined') {\n            throw firstError;\n        }\n        return result; // cast is needed and protected by the `throw` above\n    }\n    Promises.settled = settled;\n    /**\n     * A helper to create a new `Promise<T>` with a body that is a promise\n     * itself. By default, an error that raises from the async body will\n     * end up as a unhandled rejection, so this utility properly awaits the\n     * body and rejects the promise as a normal promise does without async\n     * body.\n     *\n     * This method should only be used in rare cases where otherwise `async`\n     * cannot be used (e.g. when callbacks are involved that require this).\n     */\n    function withAsyncBody(bodyFn) {\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(async (resolve, reject) => {\n            try {\n                await bodyFn(resolve, reject);\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    }\n    Promises.withAsyncBody = withAsyncBody;\n})(Promises || (Promises = {}));\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject {\n    static fromArray(items) {\n        return new AsyncIterableObject((writer) => {\n            writer.emitMany(items);\n        });\n    }\n    static fromPromise(promise) {\n        return new AsyncIterableObject(async (emitter) => {\n            emitter.emitMany(await promise);\n        });\n    }\n    static fromPromises(promises) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n        });\n    }\n    static merge(iterables) {\n        return new AsyncIterableObject(async (emitter) => {\n            await Promise.all(iterables.map(async (iterable) => {\n                for await (const item of iterable) {\n                    emitter.emitOne(item);\n                }\n            }));\n        });\n    }\n    static { this.EMPTY = AsyncIterableObject.fromArray([]); }\n    constructor(executor, onReturn) {\n        this._state = 0 /* AsyncIterableSourceState.Initial */;\n        this._results = [];\n        this._error = null;\n        this._onReturn = onReturn;\n        this._onStateChanged = new Emitter();\n        queueMicrotask(async () => {\n            const writer = {\n                emitOne: (item) => this.emitOne(item),\n                emitMany: (items) => this.emitMany(items),\n                reject: (error) => this.reject(error)\n            };\n            try {\n                await Promise.resolve(executor(writer));\n                this.resolve();\n            }\n            catch (err) {\n                this.reject(err);\n            }\n            finally {\n                writer.emitOne = undefined;\n                writer.emitMany = undefined;\n                writer.reject = undefined;\n            }\n        });\n    }\n    [Symbol.asyncIterator]() {\n        let i = 0;\n        return {\n            next: async () => {\n                do {\n                    if (this._state === 2 /* AsyncIterableSourceState.DoneError */) {\n                        throw this._error;\n                    }\n                    if (i < this._results.length) {\n                        return { done: false, value: this._results[i++] };\n                    }\n                    if (this._state === 1 /* AsyncIterableSourceState.DoneOK */) {\n                        return { done: true, value: undefined };\n                    }\n                    await Event.toPromise(this._onStateChanged.event);\n                } while (true);\n            },\n            return: async () => {\n                this._onReturn?.();\n                return { done: true, value: undefined };\n            }\n        };\n    }\n    static map(iterable, mapFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                emitter.emitOne(mapFn(item));\n            }\n        });\n    }\n    map(mapFn) {\n        return AsyncIterableObject.map(this, mapFn);\n    }\n    static filter(iterable, filterFn) {\n        return new AsyncIterableObject(async (emitter) => {\n            for await (const item of iterable) {\n                if (filterFn(item)) {\n                    emitter.emitOne(item);\n                }\n            }\n        });\n    }\n    filter(filterFn) {\n        return AsyncIterableObject.filter(this, filterFn);\n    }\n    static coalesce(iterable) {\n        return AsyncIterableObject.filter(iterable, item => !!item);\n    }\n    coalesce() {\n        return AsyncIterableObject.coalesce(this);\n    }\n    static async toPromise(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return result;\n    }\n    toPromise() {\n        return AsyncIterableObject.toPromise(this);\n    }\n    /**\n     * The value will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitOne(value) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results.push(value);\n        this._onStateChanged.fire();\n    }\n    /**\n     * The values will be appended at the end.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    emitMany(values) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        // it is important to add new values at the end,\n        // as we may have iterators already running on the array\n        this._results = this._results.concat(values);\n        this._onStateChanged.fire();\n    }\n    /**\n     * Calling `resolve()` will mark the result array as complete.\n     *\n     * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    resolve() {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 1 /* AsyncIterableSourceState.DoneOK */;\n        this._onStateChanged.fire();\n    }\n    /**\n     * Writing an error will permanently invalidate this iterable.\n     * The current users will receive an error thrown, as will all future users.\n     *\n     * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n     */\n    reject(error) {\n        if (this._state !== 0 /* AsyncIterableSourceState.Initial */) {\n            return;\n        }\n        this._state = 2 /* AsyncIterableSourceState.DoneError */;\n        this._error = error;\n        this._onStateChanged.fire();\n    }\n}\nexport class CancelableAsyncIterableObject extends AsyncIterableObject {\n    constructor(_source, executor) {\n        super(executor);\n        this._source = _source;\n    }\n    cancel() {\n        this._source.cancel();\n    }\n}\nexport function createCancelableAsyncIterable(callback) {\n    const source = new CancellationTokenSource();\n    const innerIterable = callback(source.token);\n    return new CancelableAsyncIterableObject(source, async (emitter) => {\n        const subscription = source.token.onCancellationRequested(() => {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(new CancellationError());\n        });\n        try {\n            for await (const item of innerIterable) {\n                if (source.token.isCancellationRequested) {\n                    // canceled in the meantime\n                    return;\n                }\n                emitter.emitOne(item);\n            }\n            subscription.dispose();\n            source.dispose();\n        }\n        catch (err) {\n            subscription.dispose();\n            source.dispose();\n            emitter.reject(err);\n        }\n    });\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color } from '../../../../base/common/color.js';\nimport { registerColor, transparent } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, focusBorder } from './baseColors.js';\n// ----- sash\nexport const sashHoverBorder = registerColor('sash.hoverBorder', focusBorder, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n// ----- badge\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\n// ----- scrollbar\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\n// ----- progress bar\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges, \n    /**\n     * Indicates if the requested range does not end in this line, but continues on the next line.\n     */\n    continuesOnNextLine) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n        this.continuesOnNextLine = continuesOnNextLine;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../base/browser/dom.js';\nimport { GlobalPointerMoveMonitor } from '../../base/browser/globalPointerMoveMonitor.js';\nimport { StandardMouseEvent } from '../../base/browser/mouseEvent.js';\nimport { RunOnceScheduler } from '../../base/common/async.js';\nimport { Disposable, DisposableStore } from '../../base/common/lifecycle.js';\nimport { asCssVariable } from '../../platform/theme/common/colorRegistry.js';\n/**\n * Coordinates relative to the whole document (e.g. mouse event's pageX and pageY)\n */\nexport class PageCoordinates {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._pageCoordinatesBrand = undefined;\n    }\n    toClientCoordinates(targetWindow) {\n        return new ClientCoordinates(this.x - targetWindow.scrollX, this.y - targetWindow.scrollY);\n    }\n}\n/**\n * Coordinates within the application's client area (i.e. origin is document's scroll position).\n *\n * For example, clicking in the top-left corner of the client area will\n * always result in a mouse event with a client.x value of 0, regardless\n * of whether the page is scrolled horizontally.\n */\nexport class ClientCoordinates {\n    constructor(clientX, clientY) {\n        this.clientX = clientX;\n        this.clientY = clientY;\n        this._clientCoordinatesBrand = undefined;\n    }\n    toPageCoordinates(targetWindow) {\n        return new PageCoordinates(this.clientX + targetWindow.scrollX, this.clientY + targetWindow.scrollY);\n    }\n}\n/**\n * The position of the editor in the page.\n */\nexport class EditorPagePosition {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this._editorPagePositionBrand = undefined;\n    }\n}\n/**\n * Coordinates relative to the the (top;left) of the editor that can be used safely with other internal editor metrics.\n * **NOTE**: This position is obtained by taking page coordinates and transforming them relative to the\n * editor's (top;left) position in a way in which scale transformations are taken into account.\n * **NOTE**: These coordinates could be negative if the mouse position is outside the editor.\n */\nexport class CoordinatesRelativeToEditor {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this._positionRelativeToEditorBrand = undefined;\n    }\n}\nexport function createEditorPagePosition(editorViewDomNode) {\n    const editorPos = dom.getDomNodePagePosition(editorViewDomNode);\n    return new EditorPagePosition(editorPos.left, editorPos.top, editorPos.width, editorPos.height);\n}\nexport function createCoordinatesRelativeToEditor(editorViewDomNode, editorPagePosition, pos) {\n    // The editor's page position is read from the DOM using getBoundingClientRect().\n    //\n    // getBoundingClientRect() returns the actual dimensions, while offsetWidth and offsetHeight\n    // reflect the unscaled size. We can use this difference to detect a transform:scale()\n    // and we will apply the transformation in inverse to get mouse coordinates that make sense inside the editor.\n    //\n    // This could be expanded to cover rotation as well maybe by walking the DOM up from `editorViewDomNode`\n    // and computing the effective transformation matrix using getComputedStyle(element).transform.\n    //\n    const scaleX = editorPagePosition.width / editorViewDomNode.offsetWidth;\n    const scaleY = editorPagePosition.height / editorViewDomNode.offsetHeight;\n    // Adjust mouse offsets if editor appears to be scaled via transforms\n    const relativeX = (pos.x - editorPagePosition.x) / scaleX;\n    const relativeY = (pos.y - editorPagePosition.y) / scaleY;\n    return new CoordinatesRelativeToEditor(relativeX, relativeY);\n}\nexport class EditorMouseEvent extends StandardMouseEvent {\n    constructor(e, isFromPointerCapture, editorViewDomNode) {\n        super(dom.getWindow(editorViewDomNode), e);\n        this._editorMouseEventBrand = undefined;\n        this.isFromPointerCapture = isFromPointerCapture;\n        this.pos = new PageCoordinates(this.posx, this.posy);\n        this.editorPos = createEditorPagePosition(editorViewDomNode);\n        this.relativePos = createCoordinatesRelativeToEditor(editorViewDomNode, this.editorPos, this.pos);\n    }\n}\nexport class EditorMouseEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onContextMenu(target, callback) {\n        return dom.addDisposableListener(target, 'contextmenu', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseUp(target, callback) {\n        return dom.addDisposableListener(target, 'mouseup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_DOWN, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onMouseLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.MOUSE_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onMouseMove(target, callback) {\n        return dom.addDisposableListener(target, 'mousemove', (e) => callback(this._create(e)));\n    }\n}\nexport class EditorPointerEventFactory {\n    constructor(editorViewDomNode) {\n        this._editorViewDomNode = editorViewDomNode;\n    }\n    _create(e) {\n        return new EditorMouseEvent(e, false, this._editorViewDomNode);\n    }\n    onPointerUp(target, callback) {\n        return dom.addDisposableListener(target, 'pointerup', (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerDown(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_DOWN, (e) => {\n            callback(this._create(e), e.pointerId);\n        });\n    }\n    onPointerLeave(target, callback) {\n        return dom.addDisposableListener(target, dom.EventType.POINTER_LEAVE, (e) => {\n            callback(this._create(e));\n        });\n    }\n    onPointerMove(target, callback) {\n        return dom.addDisposableListener(target, 'pointermove', (e) => callback(this._create(e)));\n    }\n}\nexport class GlobalEditorPointerMoveMonitor extends Disposable {\n    constructor(editorViewDomNode) {\n        super();\n        this._editorViewDomNode = editorViewDomNode;\n        this._globalPointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._keydownListener = null;\n    }\n    startMonitoring(initialElement, pointerId, initialButtons, pointerMoveCallback, onStopCallback) {\n        // Add a <<capture>> keydown event listener that will cancel the monitoring\n        // if something other than a modifier key is pressed\n        this._keydownListener = dom.addStandardDisposableListener(initialElement.ownerDocument, 'keydown', (e) => {\n            const chord = e.toKeyCodeChord();\n            if (chord.isModifierKey()) {\n                // Allow modifier keys\n                return;\n            }\n            this._globalPointerMoveMonitor.stopMonitoring(true, e.browserEvent);\n        }, true);\n        this._globalPointerMoveMonitor.startMonitoring(initialElement, pointerId, initialButtons, (e) => {\n            pointerMoveCallback(new EditorMouseEvent(e, true, this._editorViewDomNode));\n        }, (e) => {\n            this._keydownListener.dispose();\n            onStopCallback(e);\n        });\n    }\n    stopMonitoring() {\n        this._globalPointerMoveMonitor.stopMonitoring(true);\n    }\n}\n/**\n * A helper to create dynamic css rules, bound to a class name.\n * Rules are reused.\n * Reference counting and delayed garbage collection ensure that no rules leak.\n*/\nexport class DynamicCssRules {\n    static { this._idPool = 0; }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._instanceId = ++DynamicCssRules._idPool;\n        this._counter = 0;\n        this._rules = new Map();\n        // We delay garbage collection so that hanging rules can be reused.\n        this._garbageCollectionScheduler = new RunOnceScheduler(() => this.garbageCollect(), 1000);\n    }\n    createClassNameRef(options) {\n        const rule = this.getOrCreateRule(options);\n        rule.increaseRefCount();\n        return {\n            className: rule.className,\n            dispose: () => {\n                rule.decreaseRefCount();\n                this._garbageCollectionScheduler.schedule();\n            }\n        };\n    }\n    getOrCreateRule(properties) {\n        const key = this.computeUniqueKey(properties);\n        let existingRule = this._rules.get(key);\n        if (!existingRule) {\n            const counter = this._counter++;\n            existingRule = new RefCountedCssRule(key, `dyn-rule-${this._instanceId}-${counter}`, dom.isInShadowDOM(this._editor.getContainerDomNode())\n                ? this._editor.getContainerDomNode()\n                : undefined, properties);\n            this._rules.set(key, existingRule);\n        }\n        return existingRule;\n    }\n    computeUniqueKey(properties) {\n        return JSON.stringify(properties);\n    }\n    garbageCollect() {\n        for (const rule of this._rules.values()) {\n            if (!rule.hasReferences()) {\n                this._rules.delete(rule.key);\n                rule.dispose();\n            }\n        }\n    }\n}\nclass RefCountedCssRule {\n    constructor(key, className, _containerElement, properties) {\n        this.key = key;\n        this.className = className;\n        this.properties = properties;\n        this._referenceCount = 0;\n        this._styleElementDisposables = new DisposableStore();\n        this._styleElement = dom.createStyleSheet(_containerElement, undefined, this._styleElementDisposables);\n        this._styleElement.textContent = this.getCssText(this.className, this.properties);\n    }\n    getCssText(className, properties) {\n        let str = `.${className} {`;\n        for (const prop in properties) {\n            const value = properties[prop];\n            let cssValue;\n            if (typeof value === 'object') {\n                cssValue = asCssVariable(value.id);\n            }\n            else {\n                cssValue = value;\n            }\n            const cssPropName = camelToDashes(prop);\n            str += `\\n\\t${cssPropName}: ${cssValue};`;\n        }\n        str += `\\n}`;\n        return str;\n    }\n    dispose() {\n        this._styleElementDisposables.dispose();\n        this._styleElement = undefined;\n    }\n    increaseRefCount() {\n        this._referenceCount++;\n    }\n    decreaseRefCount() {\n        this._referenceCount--;\n    }\n    hasReferences() {\n        return this._referenceCount > 0;\n    }\n}\nfunction camelToDashes(str) {\n    return str.replace(/(^[A-Z])/, ([first]) => first.toLowerCase())\n        .replace(/([A-Z])/g, ([letter]) => `-${letter.toLowerCase()}`);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class FastDomNode {\n    constructor(domNode) {\n        this.domNode = domNode;\n        this._maxWidth = '';\n        this._width = '';\n        this._height = '';\n        this._top = '';\n        this._left = '';\n        this._bottom = '';\n        this._right = '';\n        this._paddingLeft = '';\n        this._fontFamily = '';\n        this._fontWeight = '';\n        this._fontSize = '';\n        this._fontStyle = '';\n        this._fontFeatureSettings = '';\n        this._fontVariationSettings = '';\n        this._textDecoration = '';\n        this._lineHeight = '';\n        this._letterSpacing = '';\n        this._className = '';\n        this._display = '';\n        this._position = '';\n        this._visibility = '';\n        this._color = '';\n        this._backgroundColor = '';\n        this._layerHint = false;\n        this._contain = 'none';\n        this._boxShadow = '';\n    }\n    setMaxWidth(_maxWidth) {\n        const maxWidth = numberAsPixels(_maxWidth);\n        if (this._maxWidth === maxWidth) {\n            return;\n        }\n        this._maxWidth = maxWidth;\n        this.domNode.style.maxWidth = this._maxWidth;\n    }\n    setWidth(_width) {\n        const width = numberAsPixels(_width);\n        if (this._width === width) {\n            return;\n        }\n        this._width = width;\n        this.domNode.style.width = this._width;\n    }\n    setHeight(_height) {\n        const height = numberAsPixels(_height);\n        if (this._height === height) {\n            return;\n        }\n        this._height = height;\n        this.domNode.style.height = this._height;\n    }\n    setTop(_top) {\n        const top = numberAsPixels(_top);\n        if (this._top === top) {\n            return;\n        }\n        this._top = top;\n        this.domNode.style.top = this._top;\n    }\n    setLeft(_left) {\n        const left = numberAsPixels(_left);\n        if (this._left === left) {\n            return;\n        }\n        this._left = left;\n        this.domNode.style.left = this._left;\n    }\n    setBottom(_bottom) {\n        const bottom = numberAsPixels(_bottom);\n        if (this._bottom === bottom) {\n            return;\n        }\n        this._bottom = bottom;\n        this.domNode.style.bottom = this._bottom;\n    }\n    setRight(_right) {\n        const right = numberAsPixels(_right);\n        if (this._right === right) {\n            return;\n        }\n        this._right = right;\n        this.domNode.style.right = this._right;\n    }\n    setPaddingLeft(_paddingLeft) {\n        const paddingLeft = numberAsPixels(_paddingLeft);\n        if (this._paddingLeft === paddingLeft) {\n            return;\n        }\n        this._paddingLeft = paddingLeft;\n        this.domNode.style.paddingLeft = this._paddingLeft;\n    }\n    setFontFamily(fontFamily) {\n        if (this._fontFamily === fontFamily) {\n            return;\n        }\n        this._fontFamily = fontFamily;\n        this.domNode.style.fontFamily = this._fontFamily;\n    }\n    setFontWeight(fontWeight) {\n        if (this._fontWeight === fontWeight) {\n            return;\n        }\n        this._fontWeight = fontWeight;\n        this.domNode.style.fontWeight = this._fontWeight;\n    }\n    setFontSize(_fontSize) {\n        const fontSize = numberAsPixels(_fontSize);\n        if (this._fontSize === fontSize) {\n            return;\n        }\n        this._fontSize = fontSize;\n        this.domNode.style.fontSize = this._fontSize;\n    }\n    setFontStyle(fontStyle) {\n        if (this._fontStyle === fontStyle) {\n            return;\n        }\n        this._fontStyle = fontStyle;\n        this.domNode.style.fontStyle = this._fontStyle;\n    }\n    setFontFeatureSettings(fontFeatureSettings) {\n        if (this._fontFeatureSettings === fontFeatureSettings) {\n            return;\n        }\n        this._fontFeatureSettings = fontFeatureSettings;\n        this.domNode.style.fontFeatureSettings = this._fontFeatureSettings;\n    }\n    setFontVariationSettings(fontVariationSettings) {\n        if (this._fontVariationSettings === fontVariationSettings) {\n            return;\n        }\n        this._fontVariationSettings = fontVariationSettings;\n        this.domNode.style.fontVariationSettings = this._fontVariationSettings;\n    }\n    setTextDecoration(textDecoration) {\n        if (this._textDecoration === textDecoration) {\n            return;\n        }\n        this._textDecoration = textDecoration;\n        this.domNode.style.textDecoration = this._textDecoration;\n    }\n    setLineHeight(_lineHeight) {\n        const lineHeight = numberAsPixels(_lineHeight);\n        if (this._lineHeight === lineHeight) {\n            return;\n        }\n        this._lineHeight = lineHeight;\n        this.domNode.style.lineHeight = this._lineHeight;\n    }\n    setLetterSpacing(_letterSpacing) {\n        const letterSpacing = numberAsPixels(_letterSpacing);\n        if (this._letterSpacing === letterSpacing) {\n            return;\n        }\n        this._letterSpacing = letterSpacing;\n        this.domNode.style.letterSpacing = this._letterSpacing;\n    }\n    setClassName(className) {\n        if (this._className === className) {\n            return;\n        }\n        this._className = className;\n        this.domNode.className = this._className;\n    }\n    toggleClassName(className, shouldHaveIt) {\n        this.domNode.classList.toggle(className, shouldHaveIt);\n        this._className = this.domNode.className;\n    }\n    setDisplay(display) {\n        if (this._display === display) {\n            return;\n        }\n        this._display = display;\n        this.domNode.style.display = this._display;\n    }\n    setPosition(position) {\n        if (this._position === position) {\n            return;\n        }\n        this._position = position;\n        this.domNode.style.position = this._position;\n    }\n    setVisibility(visibility) {\n        if (this._visibility === visibility) {\n            return;\n        }\n        this._visibility = visibility;\n        this.domNode.style.visibility = this._visibility;\n    }\n    setColor(color) {\n        if (this._color === color) {\n            return;\n        }\n        this._color = color;\n        this.domNode.style.color = this._color;\n    }\n    setBackgroundColor(backgroundColor) {\n        if (this._backgroundColor === backgroundColor) {\n            return;\n        }\n        this._backgroundColor = backgroundColor;\n        this.domNode.style.backgroundColor = this._backgroundColor;\n    }\n    setLayerHinting(layerHint) {\n        if (this._layerHint === layerHint) {\n            return;\n        }\n        this._layerHint = layerHint;\n        this.domNode.style.transform = this._layerHint ? 'translate3d(0px, 0px, 0px)' : '';\n    }\n    setBoxShadow(boxShadow) {\n        if (this._boxShadow === boxShadow) {\n            return;\n        }\n        this._boxShadow = boxShadow;\n        this.domNode.style.boxShadow = boxShadow;\n    }\n    setContain(contain) {\n        if (this._contain === contain) {\n            return;\n        }\n        this._contain = contain;\n        this.domNode.style.contain = this._contain;\n    }\n    setAttribute(name, value) {\n        this.domNode.setAttribute(name, value);\n    }\n    removeAttribute(name) {\n        this.domNode.removeAttribute(name);\n    }\n    appendChild(child) {\n        this.domNode.appendChild(child.domNode);\n    }\n    removeChild(child) {\n        this.domNode.removeChild(child.domNode);\n    }\n}\nfunction numberAsPixels(value) {\n    return (typeof value === 'number' ? `${value}px` : value);\n}\nexport function createFastDomNode(domNode) {\n    return new FastDomNode(domNode);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { EVENT_KEY_CODE_MAP, KeyCodeUtils } from '../common/keyCodes.js';\nimport { KeyCodeChord } from '../common/keybindings.js';\nimport * as platform from '../common/platform.js';\nfunction extractKeyCode(e) {\n    if (e.charCode) {\n        // \"keypress\" events mostly\n        const char = String.fromCharCode(e.charCode).toUpperCase();\n        return KeyCodeUtils.fromString(char);\n    }\n    const keyCode = e.keyCode;\n    // browser quirks\n    if (keyCode === 3) {\n        return 7 /* KeyCode.PauseBreak */;\n    }\n    else if (browser.isFirefox) {\n        switch (keyCode) {\n            case 59: return 85 /* KeyCode.Semicolon */;\n            case 60:\n                if (platform.isLinux) {\n                    return 97 /* KeyCode.IntlBackslash */;\n                }\n                break;\n            case 61: return 86 /* KeyCode.Equal */;\n            // based on: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode#numpad_keys\n            case 107: return 109 /* KeyCode.NumpadAdd */;\n            case 109: return 111 /* KeyCode.NumpadSubtract */;\n            case 173: return 88 /* KeyCode.Minus */;\n            case 224:\n                if (platform.isMacintosh) {\n                    return 57 /* KeyCode.Meta */;\n                }\n                break;\n        }\n    }\n    else if (browser.isWebKit) {\n        if (platform.isMacintosh && keyCode === 93) {\n            // the two meta keys in the Mac have different key codes (91 and 93)\n            return 57 /* KeyCode.Meta */;\n        }\n        else if (!platform.isMacintosh && keyCode === 92) {\n            return 57 /* KeyCode.Meta */;\n        }\n    }\n    // cross browser keycodes:\n    return EVENT_KEY_CODE_MAP[keyCode] || 0 /* KeyCode.Unknown */;\n}\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nconst altKeyMod = 512 /* KeyMod.Alt */;\nconst shiftKeyMod = 1024 /* KeyMod.Shift */;\nconst metaKeyMod = (platform.isMacintosh ? 2048 /* KeyMod.CtrlCmd */ : 256 /* KeyMod.WinCtrl */);\nexport class StandardKeyboardEvent {\n    constructor(source) {\n        this._standardKeyboardEventBrand = true;\n        const e = source;\n        this.browserEvent = e;\n        this.target = e.target;\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n        this.altGraphKey = e.getModifierState?.('AltGraph');\n        this.keyCode = extractKeyCode(e);\n        this.code = e.code;\n        // console.info(e.type + \": keyCode: \" + e.keyCode + \", which: \" + e.which + \", charCode: \" + e.charCode + \", detail: \" + e.detail + \" ====> \" + this.keyCode + ' -- ' + KeyCode[this.keyCode]);\n        this.ctrlKey = this.ctrlKey || this.keyCode === 5 /* KeyCode.Ctrl */;\n        this.altKey = this.altKey || this.keyCode === 6 /* KeyCode.Alt */;\n        this.shiftKey = this.shiftKey || this.keyCode === 4 /* KeyCode.Shift */;\n        this.metaKey = this.metaKey || this.keyCode === 57 /* KeyCode.Meta */;\n        this._asKeybinding = this._computeKeybinding();\n        this._asKeyCodeChord = this._computeKeyCodeChord();\n        // console.log(`code: ${e.code}, keyCode: ${e.keyCode}, key: ${e.key}`);\n    }\n    preventDefault() {\n        if (this.browserEvent && this.browserEvent.preventDefault) {\n            this.browserEvent.preventDefault();\n        }\n    }\n    stopPropagation() {\n        if (this.browserEvent && this.browserEvent.stopPropagation) {\n            this.browserEvent.stopPropagation();\n        }\n    }\n    toKeyCodeChord() {\n        return this._asKeyCodeChord;\n    }\n    equals(other) {\n        return this._asKeybinding === other;\n    }\n    _computeKeybinding() {\n        let key = 0 /* KeyCode.Unknown */;\n        if (this.keyCode !== 5 /* KeyCode.Ctrl */ && this.keyCode !== 4 /* KeyCode.Shift */ && this.keyCode !== 6 /* KeyCode.Alt */ && this.keyCode !== 57 /* KeyCode.Meta */) {\n            key = this.keyCode;\n        }\n        let result = 0;\n        if (this.ctrlKey) {\n            result |= ctrlKeyMod;\n        }\n        if (this.altKey) {\n            result |= altKeyMod;\n        }\n        if (this.shiftKey) {\n            result |= shiftKeyMod;\n        }\n        if (this.metaKey) {\n            result |= metaKeyMod;\n        }\n        result |= key;\n        return result;\n    }\n    _computeKeyCodeChord() {\n        let key = 0 /* KeyCode.Unknown */;\n        if (this.keyCode !== 5 /* KeyCode.Ctrl */ && this.keyCode !== 4 /* KeyCode.Shift */ && this.keyCode !== 6 /* KeyCode.Alt */ && this.keyCode !== 57 /* KeyCode.Meta */) {\n            key = this.keyCode;\n        }\n        return new KeyCodeChord(this.ctrlKey, this.shiftKey, this.altKey, this.metaKey, key);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations } from '../../common/cursor/cursorAtomicMoveOperations.js';\nimport { Lazy } from '../../../base/common/lazy.js';\nclass UnknownHitTestResult {\n    constructor(hitTarget = null) {\n        this.hitTarget = hitTarget;\n        this.type = 0 /* HitTestResultType.Unknown */;\n    }\n}\nclass ContentHitTestResult {\n    get hitTarget() { return this.spanNode; }\n    constructor(position, spanNode, injectedText) {\n        this.position = position;\n        this.spanNode = spanNode;\n        this.injectedText = injectedText;\n        this.type = 1 /* HitTestResultType.Content */;\n    }\n}\nvar HitTestResult;\n(function (HitTestResult) {\n    function createFromDOMInfo(ctx, spanNode, offset) {\n        const position = ctx.getPositionFromDOMInfo(spanNode, offset);\n        if (position) {\n            return new ContentHitTestResult(position, spanNode, null);\n        }\n        return new UnknownHitTestResult(spanNode);\n    }\n    HitTestResult.createFromDOMInfo = createFromDOMInfo;\n})(HitTestResult || (HitTestResult = {}));\nexport class PointerHandlerLastRenderData {\n    constructor(lastViewCursorsRenderData, lastTextareaPosition) {\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n        this.lastTextareaPosition = lastTextareaPosition;\n    }\n}\nexport class MouseTarget {\n    static _deduceRage(position, range = null) {\n        if (!range && position) {\n            return new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n        return range ?? null;\n    }\n    static createUnknown(element, mouseColumn, position) {\n        return { type: 0 /* MouseTargetType.UNKNOWN */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createTextarea(element, mouseColumn) {\n        return { type: 1 /* MouseTargetType.TEXTAREA */, element, mouseColumn, position: null, range: null };\n    }\n    static createMargin(type, element, mouseColumn, position, range, detail) {\n        return { type, element, mouseColumn, position, range, detail };\n    }\n    static createViewZone(type, element, mouseColumn, position, detail) {\n        return { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentText(element, mouseColumn, position, range, detail) {\n        return { type: 6 /* MouseTargetType.CONTENT_TEXT */, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n    }\n    static createContentEmpty(element, mouseColumn, position, detail) {\n        return { type: 7 /* MouseTargetType.CONTENT_EMPTY */, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentWidget(element, mouseColumn, detail) {\n        return { type: 9 /* MouseTargetType.CONTENT_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createScrollbar(element, mouseColumn, position) {\n        return { type: 11 /* MouseTargetType.SCROLLBAR */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createOverlayWidget(element, mouseColumn, detail) {\n        return { type: 12 /* MouseTargetType.OVERLAY_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createOutsideEditor(mouseColumn, position, outsidePosition, outsideDistance) {\n        return { type: 13 /* MouseTargetType.OUTSIDE_EDITOR */, element: null, mouseColumn, position, range: this._deduceRage(position), outsidePosition, outsideDistance };\n    }\n    static _typeToString(type) {\n        if (type === 1 /* MouseTargetType.TEXTAREA */) {\n            return 'TEXTAREA';\n        }\n        if (type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */) {\n            return 'GUTTER_GLYPH_MARGIN';\n        }\n        if (type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */) {\n            return 'GUTTER_LINE_NUMBERS';\n        }\n        if (type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */) {\n            return 'GUTTER_LINE_DECORATIONS';\n        }\n        if (type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            return 'GUTTER_VIEW_ZONE';\n        }\n        if (type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return 'CONTENT_TEXT';\n        }\n        if (type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            return 'CONTENT_EMPTY';\n        }\n        if (type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            return 'CONTENT_VIEW_ZONE';\n        }\n        if (type === 9 /* MouseTargetType.CONTENT_WIDGET */) {\n            return 'CONTENT_WIDGET';\n        }\n        if (type === 10 /* MouseTargetType.OVERVIEW_RULER */) {\n            return 'OVERVIEW_RULER';\n        }\n        if (type === 11 /* MouseTargetType.SCROLLBAR */) {\n            return 'SCROLLBAR';\n        }\n        if (type === 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            return 'OVERLAY_WIDGET';\n        }\n        return 'UNKNOWN';\n    }\n    static toString(target) {\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify(target.detail);\n    }\n}\nclass ElementPath {\n    static isTextArea(path) {\n        return (path.length === 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 7 /* PartFingerprint.TextArea */);\n    }\n    static isChildOfViewLines(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 8 /* PartFingerprint.ViewLines */);\n    }\n    static isStrictChildOfViewLines(path) {\n        return (path.length > 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 8 /* PartFingerprint.ViewLines */);\n    }\n    static isChildOfScrollableElement(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 6 /* PartFingerprint.ScrollableElement */);\n    }\n    static isChildOfMinimap(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 9 /* PartFingerprint.Minimap */);\n    }\n    static isChildOfContentWidgets(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 1 /* PartFingerprint.ContentWidgets */);\n    }\n    static isChildOfOverflowGuard(path) {\n        return (path.length >= 1\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */);\n    }\n    static isChildOfOverflowingContentWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 2 /* PartFingerprint.OverflowingContentWidgets */);\n    }\n    static isChildOfOverlayWidgets(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 4 /* PartFingerprint.OverlayWidgets */);\n    }\n    static isChildOfOverflowingOverlayWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 5 /* PartFingerprint.OverflowingOverlayWidgets */);\n    }\n}\nexport class HitTestContext {\n    constructor(context, viewHelper, lastRenderData) {\n        this.viewModel = context.viewModel;\n        const options = context.configuration.options;\n        this.layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        this.viewDomNode = viewHelper.viewDomNode;\n        this.lineHeight = options.get(67 /* EditorOption.lineHeight */);\n        this.stickyTabStops = options.get(117 /* EditorOption.stickyTabStops */);\n        this.typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this.lastRenderData = lastRenderData;\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    getZoneAtCoord(mouseVerticalOffset) {\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n    }\n    static getZoneAtCoord(context, mouseVerticalOffset) {\n        // The target is either a view zone or the empty space after the last view-line\n        const viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n        if (viewZoneWhitespace) {\n            const viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n            const lineCount = context.viewModel.getLineCount();\n            let positionBefore = null;\n            let position;\n            let positionAfter = null;\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n                // There are more lines after this view zone\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n            }\n            if (viewZoneWhitespace.afterLineNumber > 0) {\n                // There are more lines above this view zone\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n            }\n            if (positionAfter === null) {\n                position = positionBefore;\n            }\n            else if (positionBefore === null) {\n                position = positionAfter;\n            }\n            else if (mouseVerticalOffset < viewZoneMiddle) {\n                position = positionBefore;\n            }\n            else {\n                position = positionAfter;\n            }\n            return {\n                viewZoneId: viewZoneWhitespace.id,\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\n                positionBefore: positionBefore,\n                positionAfter: positionAfter,\n                position: position\n            };\n        }\n        return null;\n    }\n    getFullLineRangeAtCoord(mouseVerticalOffset) {\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n            // Below the last line\n            const lineNumber = this._context.viewModel.getLineCount();\n            const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n            return {\n                range: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n                isAfterLines: true\n            };\n        }\n        const lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n        const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n        return {\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n            isAfterLines: false\n        };\n    }\n    getLineNumberAtVerticalOffset(mouseVerticalOffset) {\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n    }\n    isAfterLines(mouseVerticalOffset) {\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n    }\n    isInTopPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n    }\n    isInBottomPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    findAttribute(element, attr) {\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n    }\n    static _findAttribute(element, attr, stopAt) {\n        while (element && element !== element.ownerDocument.body) {\n            if (element.hasAttribute && element.hasAttribute(attr)) {\n                return element.getAttribute(attr);\n            }\n            if (element === stopAt) {\n                return null;\n            }\n            element = element.parentNode;\n        }\n        return null;\n    }\n    getLineWidth(lineNumber) {\n        return this._viewHelper.getLineWidth(lineNumber);\n    }\n    visibleRangeForPosition(lineNumber, column) {\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n    }\n    getPositionFromDOMInfo(spanNode, offset) {\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n    }\n    getCurrentScrollTop() {\n        return this._context.viewLayout.getCurrentScrollTop();\n    }\n    getCurrentScrollLeft() {\n        return this._context.viewLayout.getCurrentScrollLeft();\n    }\n}\nclass BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos) {\n        this.editorPos = editorPos;\n        this.pos = pos;\n        this.relativePos = relativePos;\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n        this.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n        this.isInContentArea = !this.isInMarginArea;\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n    }\n}\nclass HitTestRequest extends BareHitTestRequest {\n    get target() {\n        if (this._useHitTestTarget) {\n            return this.hitTestResult.value.hitTarget;\n        }\n        return this._eventTarget;\n    }\n    get targetPath() {\n        if (this._targetPathCacheElement !== this.target) {\n            this._targetPathCacheElement = this.target;\n            this._targetPathCacheValue = PartFingerprints.collect(this.target, this._ctx.viewDomNode);\n        }\n        return this._targetPathCacheValue;\n    }\n    constructor(ctx, editorPos, pos, relativePos, eventTarget) {\n        super(ctx, editorPos, pos, relativePos);\n        this.hitTestResult = new Lazy(() => MouseTargetFactory.doHitTest(this._ctx, this));\n        this._targetPathCacheElement = null;\n        this._targetPathCacheValue = new Uint8Array(0);\n        this._ctx = ctx;\n        this._eventTarget = eventTarget;\n        // If no event target is passed in, we will use the hit test target\n        const hasEventTarget = Boolean(this._eventTarget);\n        this._useHitTestTarget = !hasEventTarget;\n    }\n    toString() {\n        return `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? this.target.outerHTML : null}`;\n    }\n    get wouldBenefitFromHitTestTargetSwitch() {\n        return (!this._useHitTestTarget\n            && this.hitTestResult.value.hitTarget !== null\n            && this.target !== this.hitTestResult.value.hitTarget);\n    }\n    switchToHitTestTarget() {\n        this._useHitTestTarget = true;\n    }\n    _getMouseColumn(position = null) {\n        if (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n            // Most likely, the line contains foreign decorations...\n            return CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n        }\n        return this.mouseColumn;\n    }\n    fulfillUnknown(position = null) {\n        return MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillTextarea() {\n        return MouseTarget.createTextarea(this.target, this._getMouseColumn());\n    }\n    fulfillMargin(type, position, range, detail) {\n        return MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillViewZone(type, position, detail) {\n        return MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentText(position, range, detail) {\n        return MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillContentEmpty(position, detail) {\n        return MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentWidget(detail) {\n        return MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n    }\n    fulfillScrollbar(position) {\n        return MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillOverlayWidget(detail) {\n        return MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n    }\n}\nconst EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n    return {\n        isAfterLines: false,\n        horizontalDistanceToText: horizontalDistanceToText\n    };\n}\nexport class MouseTargetFactory {\n    constructor(context, viewHelper) {\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    mouseTargetIsWidget(e) {\n        const t = e.target;\n        const path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n            return true;\n        }\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(path) || ElementPath.isChildOfOverflowingOverlayWidgets(path)) {\n            return true;\n        }\n        return false;\n    }\n    createMouseTarget(lastRenderData, editorPos, pos, relativePos, target) {\n        const ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n        const request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n        try {\n            const r = MouseTargetFactory._createMouseTarget(ctx, request);\n            if (r.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n                // Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n                if (ctx.stickyTabStops && r.position !== null) {\n                    const position = MouseTargetFactory._snapToSoftTabBoundary(r.position, ctx.viewModel);\n                    const range = EditorRange.fromPositions(position, position).plusRange(r.range);\n                    return request.fulfillContentText(position, range, r.detail);\n                }\n            }\n            // console.log(MouseTarget.toString(r));\n            return r;\n        }\n        catch (err) {\n            // console.log(err);\n            return request.fulfillUnknown();\n        }\n    }\n    static _createMouseTarget(ctx, request) {\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n        if (request.target === null) {\n            // No target\n            return request.fulfillUnknown();\n        }\n        // we know for a fact that request.target is not null\n        const resolvedRequest = request;\n        let result = null;\n        if (!ElementPath.isChildOfOverflowGuard(request.targetPath) && !ElementPath.isChildOfOverflowingContentWidgets(request.targetPath) && !ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n            // We only render dom nodes inside the overflow guard or in the overflowing content widgets\n            result = result || request.fulfillUnknown();\n        }\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n        return (result || request.fulfillUnknown());\n    }\n    static _hitTestContentWidget(ctx, request) {\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillContentWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestOverlayWidget(ctx, request) {\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath) || ElementPath.isChildOfOverflowingOverlayWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillOverlayWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestViewCursor(ctx, request) {\n        if (request.target) {\n            // Check if we've hit a painted cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            for (const d of lastViewCursorsRenderData) {\n                if (request.target === d.domNode) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        if (request.isInContentArea) {\n            // Edge has a bug when hit-testing the exact position of a cursor,\n            // instead of returning the correct dom node, it returns the\n            // first or last rendered view line dom node, therefore help it out\n            // and first check if we are on top of a cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            const mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n            const mouseVerticalOffset = request.mouseVerticalOffset;\n            for (const d of lastViewCursorsRenderData) {\n                if (mouseContentHorizontalOffset < d.contentLeft) {\n                    // mouse position is to the left of the cursor\n                    continue;\n                }\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n                    // mouse position is to the right of the cursor\n                    continue;\n                }\n                const cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n                if (cursorVerticalOffset <= mouseVerticalOffset\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestViewZone(ctx, request) {\n        const viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n        if (viewZoneData) {\n            const mouseTargetType = (request.isInContentArea ? 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ : 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n            return request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n        }\n        return null;\n    }\n    static _hitTestTextArea(ctx, request) {\n        // Is it the textarea?\n        if (ElementPath.isTextArea(request.targetPath)) {\n            if (ctx.lastRenderData.lastTextareaPosition) {\n                return request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n            }\n            return request.fulfillTextarea();\n        }\n        return null;\n    }\n    static _hitTestMargin(ctx, request) {\n        if (request.isInMarginArea) {\n            const res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n            const pos = res.range.getStartPosition();\n            let offset = Math.abs(request.relativePos.x);\n            const detail = {\n                isAfterLines: res.isAfterLines,\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n                offsetX: offset\n            };\n            offset -= ctx.layoutInfo.glyphMarginLeft;\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n                // On the glyph margin\n                const modelCoordinate = ctx.viewModel.coordinatesConverter.convertViewPositionToModelPosition(res.range.getStartPosition());\n                const lanes = ctx.viewModel.glyphLanes.getLanesAtLine(modelCoordinate.lineNumber);\n                detail.glyphMarginLane = lanes[Math.floor(offset / ctx.lineHeight)];\n                return request.fulfillMargin(2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.glyphMarginWidth;\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n                // On the line numbers\n                return request.fulfillMargin(3 /* MouseTargetType.GUTTER_LINE_NUMBERS */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.lineNumbersWidth;\n            // On the line decorations\n            return request.fulfillMargin(4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\n        }\n        return null;\n    }\n    static _hitTestViewLines(ctx, request) {\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n            return null;\n        }\n        if (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n            return request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if it is below any lines and any view zones\n        if (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n            // This most likely indicates it happened after the last view-line\n            const lineCount = ctx.viewModel.getLineCount();\n            const maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n            return request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n        // See https://github.com/microsoft/vscode/issues/46942\n        if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n            const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            if (ctx.viewModel.getLineLength(lineNumber) === 0) {\n                const lineWidth = ctx.getLineWidth(lineNumber);\n                const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                return request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n            }\n            const lineWidth = ctx.getLineWidth(lineNumber);\n            if (request.mouseContentHorizontalOffset >= lineWidth) {\n                // TODO: This is wrong for RTL\n                const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                const pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n                return request.fulfillContentEmpty(pos, detail);\n            }\n        }\n        // Do the hit test (if not already done)\n        const hitTestResult = request.hitTestResult.value;\n        if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n        }\n        // We didn't hit content...\n        if (request.wouldBenefitFromHitTestTargetSwitch) {\n            // We actually hit something different... Give it one last change by trying again with this new target\n            request.switchToHitTestTarget();\n            return this._createMouseTarget(ctx, request);\n        }\n        // We have tried everything...\n        return request.fulfillUnknown();\n    }\n    static _hitTestMinimap(ctx, request) {\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    static _hitTestScrollbarSlider(ctx, request) {\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            if (request.target && request.target.nodeType === 1) {\n                const className = request.target.className;\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n                    const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                    const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n                    return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestScrollbar(ctx, request) {\n        // Is it the overview ruler?\n        // Is it a child of the scrollable element?\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    getMouseColumn(relativePos) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        const mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth);\n    }\n    static _getMouseColumn(mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n        if (mouseContentHorizontalOffset < 0) {\n            return 1;\n        }\n        const chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n        return (chars + 1);\n    }\n    static createMouseTargetFromHitTestPosition(ctx, request, spanNode, pos, injectedText) {\n        const lineNumber = pos.lineNumber;\n        const column = pos.column;\n        const lineWidth = ctx.getLineWidth(lineNumber);\n        if (request.mouseContentHorizontalOffset > lineWidth) {\n            const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n            return request.fulfillContentEmpty(pos, detail);\n        }\n        const visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n        if (!visibleRange) {\n            return request.fulfillUnknown(pos);\n        }\n        const columnHorizontalOffset = visibleRange.left;\n        if (Math.abs(request.mouseContentHorizontalOffset - columnHorizontalOffset) < 1) {\n            return request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n        }\n        const points = [];\n        points.push({ offset: visibleRange.left, column: column });\n        if (column > 1) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column - 1 });\n            }\n        }\n        const lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n        if (column < lineMaxColumn) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column + 1 });\n            }\n        }\n        points.sort((a, b) => a.offset - b.offset);\n        const mouseCoordinates = request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode));\n        const spanNodeClientRect = spanNode.getBoundingClientRect();\n        const mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n        let rng = null;\n        for (let i = 1; i < points.length; i++) {\n            const prev = points[i - 1];\n            const curr = points[i];\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n                rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n                // See https://github.com/microsoft/vscode/issues/152819\n                // Due to the use of zwj, the browser's hit test result is skewed towards the left\n                // Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n                const prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n                const nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n                pos = (prevDelta < nextDelta\n                    ? new Position(lineNumber, prev.column)\n                    : new Position(lineNumber, curr.column));\n                break;\n            }\n        }\n        return request.fulfillContentText(pos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n    }\n    /**\n     * Most probably WebKit browsers and Edge\n     */\n    static _doHitTestWithCaretRangeFromPoint(ctx, request) {\n        // In Chrome, especially on Linux it is possible to click between lines,\n        // so try to adjust the `hity` below so that it lands in the center of a line\n        const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n        const lineStartVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n        const lineEndVerticalOffset = lineStartVerticalOffset + ctx.lineHeight;\n        const isBelowLastLine = (lineNumber === ctx.viewModel.getLineCount()\n            && request.mouseVerticalOffset > lineEndVerticalOffset);\n        if (!isBelowLastLine) {\n            const lineCenteredVerticalOffset = Math.floor((lineStartVerticalOffset + lineEndVerticalOffset) / 2);\n            let adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n            if (adjustedPageY <= request.editorPos.y) {\n                adjustedPageY = request.editorPos.y + 1;\n            }\n            if (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n                adjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n            }\n            const adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n            const r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n            if (r.type === 1 /* HitTestResultType.Content */) {\n                return r;\n            }\n        }\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n    }\n    static _actualDoHitTestWithCaretRangeFromPoint(ctx, coords) {\n        const shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n        let range;\n        if (shadowRoot) {\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n            }\n            else {\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n            }\n        }\n        else {\n            range = ctx.viewDomNode.ownerDocument.caretRangeFromPoint(coords.clientX, coords.clientY);\n        }\n        if (!range || !range.startContainer) {\n            return new UnknownHitTestResult();\n        }\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n        const startContainer = range.startContainer;\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\n            // startContainer is expected to be the token text\n            const parent1 = startContainer.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, parent1, range.startOffset);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer.parentNode);\n            }\n        }\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n            // startContainer is expected to be the token span\n            const parent1 = startContainer.parentNode; // expected to be the view line container span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, startContainer, startContainer.textContent.length);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer);\n            }\n        }\n        return new UnknownHitTestResult();\n    }\n    /**\n     * Most probably Gecko\n     */\n    static _doHitTestWithCaretPositionFromPoint(ctx, coords) {\n        const hitResult = ctx.viewDomNode.ownerDocument.caretPositionFromPoint(coords.clientX, coords.clientY);\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n            // offsetNode is expected to be the token text\n            const parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode.parentNode, hitResult.offset);\n            }\n            else {\n                return new UnknownHitTestResult(hitResult.offsetNode.parentNode);\n            }\n        }\n        // For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n        // Some other times, it returns the `<span>` with the inline decoration\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n            const parent1 = hitResult.offsetNode.parentNode;\n            const parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? parent1.className : null;\n            const parent2 = parent1 ? parent1.parentNode : null;\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent1ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n                const tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n                if (tokenSpan) {\n                    return HitTestResult.createFromDOMInfo(ctx, tokenSpan, 0);\n                }\n            }\n            else if (parent2ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` with the inline decoration\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode, 0);\n            }\n        }\n        return new UnknownHitTestResult(hitResult.offsetNode);\n    }\n    static _snapToSoftTabBoundary(position, viewModel) {\n        const lineContent = viewModel.getLineContent(position.lineNumber);\n        const { tabSize } = viewModel.model.getOptions();\n        const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, 2 /* Direction.Nearest */);\n        if (newPosition !== -1) {\n            return new Position(position.lineNumber, newPosition + 1);\n        }\n        return position;\n    }\n    static doHitTest(ctx, request) {\n        let result = new UnknownHitTestResult();\n        if (typeof ctx.viewDomNode.ownerDocument.caretRangeFromPoint === 'function') {\n            result = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n        }\n        else if (ctx.viewDomNode.ownerDocument.caretPositionFromPoint) {\n            result = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates(dom.getWindow(ctx.viewDomNode)));\n        }\n        if (result.type === 1 /* HitTestResultType.Content */) {\n            const injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n            const normalizedPosition = ctx.viewModel.normalizePosition(result.position, 2 /* PositionAffinity.None */);\n            if (injectedText || !normalizedPosition.equals(result.position)) {\n                result = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n            }\n        }\n        return result;\n    }\n}\nfunction shadowCaretRangeFromPoint(shadowRoot, x, y) {\n    const range = document.createRange();\n    // Get the element under the point\n    let el = shadowRoot.elementFromPoint(x, y);\n    if (el !== null) {\n        // Get the last child of the element until its firstChild is a text node\n        // This assumes that the pointer is on the right of the line, out of the tokens\n        // and that we want to get the offset of the last token of the line\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n            el = el.lastChild;\n        }\n        // Grab its rect\n        const rect = el.getBoundingClientRect();\n        // And its font (the computed shorthand font property might be empty, see #3217)\n        const elWindow = dom.getWindow(el);\n        const fontStyle = elWindow.getComputedStyle(el, null).getPropertyValue('font-style');\n        const fontVariant = elWindow.getComputedStyle(el, null).getPropertyValue('font-variant');\n        const fontWeight = elWindow.getComputedStyle(el, null).getPropertyValue('font-weight');\n        const fontSize = elWindow.getComputedStyle(el, null).getPropertyValue('font-size');\n        const lineHeight = elWindow.getComputedStyle(el, null).getPropertyValue('line-height');\n        const fontFamily = elWindow.getComputedStyle(el, null).getPropertyValue('font-family');\n        const font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n        // And also its txt content\n        const text = el.innerText;\n        // Position the pixel cursor at the left of the element\n        let pixelCursor = rect.left;\n        let offset = 0;\n        let step;\n        // If the point is on the right of the box put the cursor after the last character\n        if (x > rect.left + rect.width) {\n            offset = text.length;\n        }\n        else {\n            const charWidthReader = CharWidthReader.getInstance();\n            // Goes through all the characters of the innerText, and checks if the x of the point\n            // belongs to the character.\n            for (let i = 0; i < text.length + 1; i++) {\n                // The step is half the width of the character\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n                // Move to the center of the character\n                pixelCursor += step;\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\n                if (x < pixelCursor) {\n                    offset = i;\n                    break;\n                }\n                // Move between the current character and the next\n                pixelCursor += step;\n            }\n        }\n        // Creates a range with the text node of the element and set the offset found\n        range.setStart(el.firstChild, offset);\n        range.setEnd(el.firstChild, offset);\n    }\n    return range;\n}\nclass CharWidthReader {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!CharWidthReader._INSTANCE) {\n            CharWidthReader._INSTANCE = new CharWidthReader();\n        }\n        return CharWidthReader._INSTANCE;\n    }\n    constructor() {\n        this._cache = {};\n        this._canvas = document.createElement('canvas');\n    }\n    getCharWidth(char, font) {\n        const cacheKey = char + font;\n        if (this._cache[cacheKey]) {\n            return this._cache[cacheKey];\n        }\n        const context = this._canvas.getContext('2d');\n        context.font = font;\n        const metrics = context.measureText(char);\n        const width = metrics.width;\n        this._cache[cacheKey] = width;\n        return width;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, transparent, lighten, darken } from '../colorUtils.js';\n// Import the colors we need\nimport { foreground, contrastBorder, focusBorder, iconForeground } from './baseColors.js';\nimport { editorWidgetBackground } from './editorColors.js';\n// ----- input\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', foreground, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\n// ----- input validation\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\n// ----- select\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\n// ------ button\nexport const buttonForeground = registerColor('button.foreground', Color.white, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', transparent(buttonForeground, .4), nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', contrastBorder, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\n// ------ radio\nexport const radioActiveForeground = registerColor('radio.activeForeground', inputActiveOptionForeground, nls.localize('radioActiveForeground', \"Foreground color of active radio option.\"));\nexport const radioActiveBackground = registerColor('radio.activeBackground', inputActiveOptionBackground, nls.localize('radioBackground', \"Background color of active radio option.\"));\nexport const radioActiveBorder = registerColor('radio.activeBorder', inputActiveOptionBorder, nls.localize('radioActiveBorder', \"Border color of the active radio option.\"));\nexport const radioInactiveForeground = registerColor('radio.inactiveForeground', null, nls.localize('radioInactiveForeground', \"Foreground color of inactive radio option.\"));\nexport const radioInactiveBackground = registerColor('radio.inactiveBackground', null, nls.localize('radioInactiveBackground', \"Background color of inactive radio option.\"));\nexport const radioInactiveBorder = registerColor('radio.inactiveBorder', { light: transparent(radioActiveForeground, .2), dark: transparent(radioActiveForeground, .2), hcDark: transparent(radioActiveForeground, .4), hcLight: transparent(radioActiveForeground, .2) }, nls.localize('radioInactiveBorder', \"Border color of the inactive radio option.\"));\nexport const radioInactiveHoverBackground = registerColor('radio.inactiveHoverBackground', inputActiveOptionHoverBackground, nls.localize('radioHoverBackground', \"Background color of inactive active radio option when hovering.\"));\n// ------ checkbox\nexport const checkboxBackground = registerColor('checkbox.background', selectBackground, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', editorWidgetBackground, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', selectForeground, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', selectBorder, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', iconForeground, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n// ------ keybinding label\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from './strings.js';\nimport { URI } from './uri.js';\nimport * as paths from './path.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellMetadataDiff = 'vscode-notebook-cell-metadata-diff';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeNotebookCellOutputDiff = 'vscode-notebook-cell-output-diff';\n    Schemas.vscodeNotebookMetadata = 'vscode-notebook-metadata';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /** Scheme used for code blocks in chat. */\n    Schemas.vscodeChatCodeBlock = 'vscode-chat-code-block';\n    /** Scheme used for LHS of code compare (aka diff) blocks in chat. */\n    Schemas.vscodeChatCodeCompareBlock = 'vscode-chat-code-compare-block';\n    /** Scheme used for the chat input editor. */\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n    /**\n     * Scheme used for input box for creating comments.\n     */\n    Schemas.commentsInput = 'comment';\n    /**\n     * Scheme used for special rendering of settings in the release notes\n     */\n    Schemas.codeSetting = 'code-setting';\n    /**\n     * Scheme used for output panel resources\n     */\n    Schemas.outputChannel = 'output';\n})(Schemas || (Schemas = {}));\nexport function matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n    return schemes.some(scheme => matchesScheme(target, scheme));\n}\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._serverRootPath = '/';\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    get _remoteResourcesPath() {\n        return paths.posix.join(this._serverRootPath, Schemas.vscodeRemoteResource);\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nexport const VSCODE_AUTHORITY = 'vscode-app';\nclass FileAccessImpl {\n    static { this.FALLBACK_AUTHORITY = VSCODE_AUTHORITY; }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    asBrowserUri(resourcePath) {\n        // ESM-comment-begin\n        // \t\tconst uri = this.toUri(resourcePath, require);\n        // ESM-comment-end\n        // ESM-uncomment-begin\n        const uri = this.toUri(resourcePath);\n        // ESM-uncomment-end\n        return this.uriToBrowserUri(uri);\n    }\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.webWorkerOrigin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        if (globalThis._VSCODE_FILE_ROOT) {\n            const rootUriOrPath = globalThis._VSCODE_FILE_ROOT;\n            // File URL (with scheme)\n            if (/^\\w[\\w\\d+.-]*:\\/\\//.test(rootUriOrPath)) {\n                return URI.joinPath(URI.parse(rootUriOrPath, true), uriOrModule);\n            }\n            // File Path (no scheme)\n            const modulePath = paths.join(rootUriOrPath, uriOrModule);\n            return URI.file(modulePath);\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params?.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    static { this._bigBlock32 = new DataView(new ArrayBuffer(320)); } // 80 * 4 = 320\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nexport const USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n/**\n * Create a word definition regular expression based on default word separators.\n * Optionally provide allowed separators that should be included in words.\n *\n * The default would look like this:\n * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n */\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return new RegExp(source, 'g');\n}\n// catches numbers (including floating numbers) in the first group, and alphanum in the second\nexport const DEFAULT_WORD_REGEXP = createWordRegExp();\nexport function ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = new RegExp(wordDefinition.source, flags);\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = new LinkedList();\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nexport function getWordAtText(column, wordDefinition, text, textOffset, config) {\n    // Ensure the regex has the 'g' flag, otherwise this will loop forever\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        // don't throw strings that long at the regexp\n        // but use a sub-string in which a word must occur\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        // check time budget\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        // reset the index at which the regexp should start matching, also know where it\n        // should stop so that subsequent search don't repeat previous searches\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            // stop: we have something\n            break;\n        }\n        match = thisMatch;\n        // stop: searched at start\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Encodes the given value so that it can be used as literal value in html attributes.\n *\n * In other words, computes `$val`, such that `attr` in `<div attr=\"$val\" />` has the runtime value `value`.\n * This prevents XSS injection.\n */\nexport function htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nexport function splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static { this.ambiguousCharacterData = new Lazy(() => {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        // Stored as key1, value1, key2, value2, ...\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    }); }\n    static { this.cache = new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = new Map();\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = new Map(map1);\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = new Map();\n            for (const [key, value] of map1) {\n                if (map2.has(key)) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return new AmbiguousCharacters(map);\n    }); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter((k) => !k.startsWith('_'))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class LinePart {\n    constructor(\n    /**\n     * last char index of this token (not inclusive).\n     */\n    endIndex, type, metadata, containsRTL) {\n        this.endIndex = endIndex;\n        this.type = type;\n        this.metadata = metadata;\n        this.containsRTL = containsRTL;\n        this._linePartBrand = undefined;\n    }\n    isWhitespace() {\n        return (this.metadata & 1 /* LinePartMetadata.IS_WHITESPACE_MASK */ ? true : false);\n    }\n    isPseudoAfter() {\n        return (this.metadata & 4 /* LinePartMetadata.PSEUDO_AFTER_MASK */ ? true : false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../nls.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { StringBuilder } from '../core/stringBuilder.js';\nimport { LineDecoration, LineDecorationsNormalizer } from './lineDecorations.js';\nimport { LinePart } from './linePart.js';\nexport class LineRange {\n    constructor(startIndex, endIndex) {\n        this.startOffset = startIndex;\n        this.endOffset = endIndex;\n    }\n    equals(otherLineRange) {\n        return this.startOffset === otherLineRange.startOffset\n            && this.endOffset === otherLineRange.endOffset;\n    }\n}\nexport class RenderLineInput {\n    constructor(useMonospaceOptimizations, canUseHalfwidthRightwardsArrow, lineContent, continuesWithWrappedLine, isBasicASCII, containsRTL, fauxIndentLength, lineTokens, lineDecorations, tabSize, startVisibleColumn, spaceWidth, middotWidth, wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, selectionsOnLine) {\n        this.useMonospaceOptimizations = useMonospaceOptimizations;\n        this.canUseHalfwidthRightwardsArrow = canUseHalfwidthRightwardsArrow;\n        this.lineContent = lineContent;\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\n        this.isBasicASCII = isBasicASCII;\n        this.containsRTL = containsRTL;\n        this.fauxIndentLength = fauxIndentLength;\n        this.lineTokens = lineTokens;\n        this.lineDecorations = lineDecorations.sort(LineDecoration.compare);\n        this.tabSize = tabSize;\n        this.startVisibleColumn = startVisibleColumn;\n        this.spaceWidth = spaceWidth;\n        this.stopRenderingLineAfter = stopRenderingLineAfter;\n        this.renderWhitespace = (renderWhitespace === 'all'\n            ? 4 /* RenderWhitespace.All */\n            : renderWhitespace === 'boundary'\n                ? 1 /* RenderWhitespace.Boundary */\n                : renderWhitespace === 'selection'\n                    ? 2 /* RenderWhitespace.Selection */\n                    : renderWhitespace === 'trailing'\n                        ? 3 /* RenderWhitespace.Trailing */\n                        : 0 /* RenderWhitespace.None */);\n        this.renderControlCharacters = renderControlCharacters;\n        this.fontLigatures = fontLigatures;\n        this.selectionsOnLine = selectionsOnLine && selectionsOnLine.sort((a, b) => a.startOffset < b.startOffset ? -1 : 1);\n        const wsmiddotDiff = Math.abs(wsmiddotWidth - spaceWidth);\n        const middotDiff = Math.abs(middotWidth - spaceWidth);\n        if (wsmiddotDiff < middotDiff) {\n            this.renderSpaceWidth = wsmiddotWidth;\n            this.renderSpaceCharCode = 0x2E31; // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        }\n        else {\n            this.renderSpaceWidth = middotWidth;\n            this.renderSpaceCharCode = 0xB7; // U+00B7 - MIDDLE DOT\n        }\n    }\n    sameSelection(otherSelections) {\n        if (this.selectionsOnLine === null) {\n            return otherSelections === null;\n        }\n        if (otherSelections === null) {\n            return false;\n        }\n        if (otherSelections.length !== this.selectionsOnLine.length) {\n            return false;\n        }\n        for (let i = 0; i < this.selectionsOnLine.length; i++) {\n            if (!this.selectionsOnLine[i].equals(otherSelections[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    equals(other) {\n        return (this.useMonospaceOptimizations === other.useMonospaceOptimizations\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\n            && this.lineContent === other.lineContent\n            && this.continuesWithWrappedLine === other.continuesWithWrappedLine\n            && this.isBasicASCII === other.isBasicASCII\n            && this.containsRTL === other.containsRTL\n            && this.fauxIndentLength === other.fauxIndentLength\n            && this.tabSize === other.tabSize\n            && this.startVisibleColumn === other.startVisibleColumn\n            && this.spaceWidth === other.spaceWidth\n            && this.renderSpaceWidth === other.renderSpaceWidth\n            && this.renderSpaceCharCode === other.renderSpaceCharCode\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\n            && this.renderWhitespace === other.renderWhitespace\n            && this.renderControlCharacters === other.renderControlCharacters\n            && this.fontLigatures === other.fontLigatures\n            && LineDecoration.equalsArr(this.lineDecorations, other.lineDecorations)\n            && this.lineTokens.equals(other.lineTokens)\n            && this.sameSelection(other.selectionsOnLine));\n    }\n}\nexport class DomPosition {\n    constructor(partIndex, charIndex) {\n        this.partIndex = partIndex;\n        this.charIndex = charIndex;\n    }\n}\n/**\n * Provides a both direction mapping between a line's character and its rendered position.\n */\nexport class CharacterMapping {\n    static getPartIndex(partData) {\n        return (partData & 4294901760 /* CharacterMappingConstants.PART_INDEX_MASK */) >>> 16 /* CharacterMappingConstants.PART_INDEX_OFFSET */;\n    }\n    static getCharIndex(partData) {\n        return (partData & 65535 /* CharacterMappingConstants.CHAR_INDEX_MASK */) >>> 0 /* CharacterMappingConstants.CHAR_INDEX_OFFSET */;\n    }\n    constructor(length, partCount) {\n        this.length = length;\n        this._data = new Uint32Array(this.length);\n        this._horizontalOffset = new Uint32Array(this.length);\n    }\n    setColumnInfo(column, partIndex, charIndex, horizontalOffset) {\n        const partData = ((partIndex << 16 /* CharacterMappingConstants.PART_INDEX_OFFSET */)\n            | (charIndex << 0 /* CharacterMappingConstants.CHAR_INDEX_OFFSET */)) >>> 0;\n        this._data[column - 1] = partData;\n        this._horizontalOffset[column - 1] = horizontalOffset;\n    }\n    getHorizontalOffset(column) {\n        if (this._horizontalOffset.length === 0) {\n            // No characters on this line\n            return 0;\n        }\n        return this._horizontalOffset[column - 1];\n    }\n    charOffsetToPartData(charOffset) {\n        if (this.length === 0) {\n            return 0;\n        }\n        if (charOffset < 0) {\n            return this._data[0];\n        }\n        if (charOffset >= this.length) {\n            return this._data[this.length - 1];\n        }\n        return this._data[charOffset];\n    }\n    getDomPosition(column) {\n        const partData = this.charOffsetToPartData(column - 1);\n        const partIndex = CharacterMapping.getPartIndex(partData);\n        const charIndex = CharacterMapping.getCharIndex(partData);\n        return new DomPosition(partIndex, charIndex);\n    }\n    getColumn(domPosition, partLength) {\n        const charOffset = this.partDataToCharOffset(domPosition.partIndex, partLength, domPosition.charIndex);\n        return charOffset + 1;\n    }\n    partDataToCharOffset(partIndex, partLength, charIndex) {\n        if (this.length === 0) {\n            return 0;\n        }\n        const searchEntry = ((partIndex << 16 /* CharacterMappingConstants.PART_INDEX_OFFSET */)\n            | (charIndex << 0 /* CharacterMappingConstants.CHAR_INDEX_OFFSET */)) >>> 0;\n        let min = 0;\n        let max = this.length - 1;\n        while (min + 1 < max) {\n            const mid = ((min + max) >>> 1);\n            const midEntry = this._data[mid];\n            if (midEntry === searchEntry) {\n                return mid;\n            }\n            else if (midEntry > searchEntry) {\n                max = mid;\n            }\n            else {\n                min = mid;\n            }\n        }\n        if (min === max) {\n            return min;\n        }\n        const minEntry = this._data[min];\n        const maxEntry = this._data[max];\n        if (minEntry === searchEntry) {\n            return min;\n        }\n        if (maxEntry === searchEntry) {\n            return max;\n        }\n        const minPartIndex = CharacterMapping.getPartIndex(minEntry);\n        const minCharIndex = CharacterMapping.getCharIndex(minEntry);\n        const maxPartIndex = CharacterMapping.getPartIndex(maxEntry);\n        let maxCharIndex;\n        if (minPartIndex !== maxPartIndex) {\n            // sitting between parts\n            maxCharIndex = partLength;\n        }\n        else {\n            maxCharIndex = CharacterMapping.getCharIndex(maxEntry);\n        }\n        const minEntryDistance = charIndex - minCharIndex;\n        const maxEntryDistance = maxCharIndex - charIndex;\n        if (minEntryDistance <= maxEntryDistance) {\n            return min;\n        }\n        return max;\n    }\n}\nexport class RenderLineOutput {\n    constructor(characterMapping, containsRTL, containsForeignElements) {\n        this._renderLineOutputBrand = undefined;\n        this.characterMapping = characterMapping;\n        this.containsRTL = containsRTL;\n        this.containsForeignElements = containsForeignElements;\n    }\n}\nexport function renderViewLine(input, sb) {\n    if (input.lineContent.length === 0) {\n        if (input.lineDecorations.length > 0) {\n            // This line is empty, but it contains inline decorations\n            sb.appendString(`<span>`);\n            let beforeCount = 0;\n            let afterCount = 0;\n            let containsForeignElements = 0 /* ForeignElementType.None */;\n            for (const lineDecoration of input.lineDecorations) {\n                if (lineDecoration.type === 1 /* InlineDecorationType.Before */ || lineDecoration.type === 2 /* InlineDecorationType.After */) {\n                    sb.appendString(`<span class=\"`);\n                    sb.appendString(lineDecoration.className);\n                    sb.appendString(`\"></span>`);\n                    if (lineDecoration.type === 1 /* InlineDecorationType.Before */) {\n                        containsForeignElements |= 1 /* ForeignElementType.Before */;\n                        beforeCount++;\n                    }\n                    if (lineDecoration.type === 2 /* InlineDecorationType.After */) {\n                        containsForeignElements |= 2 /* ForeignElementType.After */;\n                        afterCount++;\n                    }\n                }\n            }\n            sb.appendString(`</span>`);\n            const characterMapping = new CharacterMapping(1, beforeCount + afterCount);\n            characterMapping.setColumnInfo(1, beforeCount, 0, 0);\n            return new RenderLineOutput(characterMapping, false, containsForeignElements);\n        }\n        // completely empty line\n        sb.appendString('<span><span></span></span>');\n        return new RenderLineOutput(new CharacterMapping(0, 0), false, 0 /* ForeignElementType.None */);\n    }\n    return _renderLine(resolveRenderLineInput(input), sb);\n}\nexport class RenderLineOutput2 {\n    constructor(characterMapping, html, containsRTL, containsForeignElements) {\n        this.characterMapping = characterMapping;\n        this.html = html;\n        this.containsRTL = containsRTL;\n        this.containsForeignElements = containsForeignElements;\n    }\n}\nexport function renderViewLine2(input) {\n    const sb = new StringBuilder(10000);\n    const out = renderViewLine(input, sb);\n    return new RenderLineOutput2(out.characterMapping, sb.build(), out.containsRTL, out.containsForeignElements);\n}\nclass ResolvedRenderLineInput {\n    constructor(fontIsMonospace, canUseHalfwidthRightwardsArrow, lineContent, len, isOverflowing, overflowingCharCount, parts, containsForeignElements, fauxIndentLength, tabSize, startVisibleColumn, containsRTL, spaceWidth, renderSpaceCharCode, renderWhitespace, renderControlCharacters) {\n        this.fontIsMonospace = fontIsMonospace;\n        this.canUseHalfwidthRightwardsArrow = canUseHalfwidthRightwardsArrow;\n        this.lineContent = lineContent;\n        this.len = len;\n        this.isOverflowing = isOverflowing;\n        this.overflowingCharCount = overflowingCharCount;\n        this.parts = parts;\n        this.containsForeignElements = containsForeignElements;\n        this.fauxIndentLength = fauxIndentLength;\n        this.tabSize = tabSize;\n        this.startVisibleColumn = startVisibleColumn;\n        this.containsRTL = containsRTL;\n        this.spaceWidth = spaceWidth;\n        this.renderSpaceCharCode = renderSpaceCharCode;\n        this.renderWhitespace = renderWhitespace;\n        this.renderControlCharacters = renderControlCharacters;\n        //\n    }\n}\nfunction resolveRenderLineInput(input) {\n    const lineContent = input.lineContent;\n    let isOverflowing;\n    let overflowingCharCount;\n    let len;\n    if (input.stopRenderingLineAfter !== -1 && input.stopRenderingLineAfter < lineContent.length) {\n        isOverflowing = true;\n        overflowingCharCount = lineContent.length - input.stopRenderingLineAfter;\n        len = input.stopRenderingLineAfter;\n    }\n    else {\n        isOverflowing = false;\n        overflowingCharCount = 0;\n        len = lineContent.length;\n    }\n    let tokens = transformAndRemoveOverflowing(lineContent, input.containsRTL, input.lineTokens, input.fauxIndentLength, len);\n    if (input.renderControlCharacters && !input.isBasicASCII) {\n        // Calling `extractControlCharacters` before adding (possibly empty) line parts\n        // for inline decorations. `extractControlCharacters` removes empty line parts.\n        tokens = extractControlCharacters(lineContent, tokens);\n    }\n    if (input.renderWhitespace === 4 /* RenderWhitespace.All */ ||\n        input.renderWhitespace === 1 /* RenderWhitespace.Boundary */ ||\n        (input.renderWhitespace === 2 /* RenderWhitespace.Selection */ && !!input.selectionsOnLine) ||\n        (input.renderWhitespace === 3 /* RenderWhitespace.Trailing */ && !input.continuesWithWrappedLine)) {\n        tokens = _applyRenderWhitespace(input, lineContent, len, tokens);\n    }\n    let containsForeignElements = 0 /* ForeignElementType.None */;\n    if (input.lineDecorations.length > 0) {\n        for (let i = 0, len = input.lineDecorations.length; i < len; i++) {\n            const lineDecoration = input.lineDecorations[i];\n            if (lineDecoration.type === 3 /* InlineDecorationType.RegularAffectingLetterSpacing */) {\n                // Pretend there are foreign elements... although not 100% accurate.\n                containsForeignElements |= 1 /* ForeignElementType.Before */;\n            }\n            else if (lineDecoration.type === 1 /* InlineDecorationType.Before */) {\n                containsForeignElements |= 1 /* ForeignElementType.Before */;\n            }\n            else if (lineDecoration.type === 2 /* InlineDecorationType.After */) {\n                containsForeignElements |= 2 /* ForeignElementType.After */;\n            }\n        }\n        tokens = _applyInlineDecorations(lineContent, len, tokens, input.lineDecorations);\n    }\n    if (!input.containsRTL) {\n        // We can never split RTL text, as it ruins the rendering\n        tokens = splitLargeTokens(lineContent, tokens, !input.isBasicASCII || input.fontLigatures);\n    }\n    return new ResolvedRenderLineInput(input.useMonospaceOptimizations, input.canUseHalfwidthRightwardsArrow, lineContent, len, isOverflowing, overflowingCharCount, tokens, containsForeignElements, input.fauxIndentLength, input.tabSize, input.startVisibleColumn, input.containsRTL, input.spaceWidth, input.renderSpaceCharCode, input.renderWhitespace, input.renderControlCharacters);\n}\n/**\n * In the rendering phase, characters are always looped until token.endIndex.\n * Ensure that all tokens end before `len` and the last one ends precisely at `len`.\n */\nfunction transformAndRemoveOverflowing(lineContent, lineContainsRTL, tokens, fauxIndentLength, len) {\n    const result = [];\n    let resultLen = 0;\n    // The faux indent part of the line should have no token type\n    if (fauxIndentLength > 0) {\n        result[resultLen++] = new LinePart(fauxIndentLength, '', 0, false);\n    }\n    let startOffset = fauxIndentLength;\n    for (let tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\n        const endIndex = tokens.getEndOffset(tokenIndex);\n        if (endIndex <= fauxIndentLength) {\n            // The faux indent part of the line should have no token type\n            continue;\n        }\n        const type = tokens.getClassName(tokenIndex);\n        if (endIndex >= len) {\n            const tokenContainsRTL = (lineContainsRTL ? strings.containsRTL(lineContent.substring(startOffset, len)) : false);\n            result[resultLen++] = new LinePart(len, type, 0, tokenContainsRTL);\n            break;\n        }\n        const tokenContainsRTL = (lineContainsRTL ? strings.containsRTL(lineContent.substring(startOffset, endIndex)) : false);\n        result[resultLen++] = new LinePart(endIndex, type, 0, tokenContainsRTL);\n        startOffset = endIndex;\n    }\n    return result;\n}\n/**\n * See https://github.com/microsoft/vscode/issues/6885.\n * It appears that having very large spans causes very slow reading of character positions.\n * So here we try to avoid that.\n */\nfunction splitLargeTokens(lineContent, tokens, onlyAtSpaces) {\n    let lastTokenEndIndex = 0;\n    const result = [];\n    let resultLen = 0;\n    if (onlyAtSpaces) {\n        // Split only at spaces => we need to walk each character\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const token = tokens[i];\n            const tokenEndIndex = token.endIndex;\n            if (lastTokenEndIndex + 50 /* Constants.LongToken */ < tokenEndIndex) {\n                const tokenType = token.type;\n                const tokenMetadata = token.metadata;\n                const tokenContainsRTL = token.containsRTL;\n                let lastSpaceOffset = -1;\n                let currTokenStart = lastTokenEndIndex;\n                for (let j = lastTokenEndIndex; j < tokenEndIndex; j++) {\n                    if (lineContent.charCodeAt(j) === 32 /* CharCode.Space */) {\n                        lastSpaceOffset = j;\n                    }\n                    if (lastSpaceOffset !== -1 && j - currTokenStart >= 50 /* Constants.LongToken */) {\n                        // Split at `lastSpaceOffset` + 1\n                        result[resultLen++] = new LinePart(lastSpaceOffset + 1, tokenType, tokenMetadata, tokenContainsRTL);\n                        currTokenStart = lastSpaceOffset + 1;\n                        lastSpaceOffset = -1;\n                    }\n                }\n                if (currTokenStart !== tokenEndIndex) {\n                    result[resultLen++] = new LinePart(tokenEndIndex, tokenType, tokenMetadata, tokenContainsRTL);\n                }\n            }\n            else {\n                result[resultLen++] = token;\n            }\n            lastTokenEndIndex = tokenEndIndex;\n        }\n    }\n    else {\n        // Split anywhere => we don't need to walk each character\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const token = tokens[i];\n            const tokenEndIndex = token.endIndex;\n            const diff = (tokenEndIndex - lastTokenEndIndex);\n            if (diff > 50 /* Constants.LongToken */) {\n                const tokenType = token.type;\n                const tokenMetadata = token.metadata;\n                const tokenContainsRTL = token.containsRTL;\n                const piecesCount = Math.ceil(diff / 50 /* Constants.LongToken */);\n                for (let j = 1; j < piecesCount; j++) {\n                    const pieceEndIndex = lastTokenEndIndex + (j * 50 /* Constants.LongToken */);\n                    result[resultLen++] = new LinePart(pieceEndIndex, tokenType, tokenMetadata, tokenContainsRTL);\n                }\n                result[resultLen++] = new LinePart(tokenEndIndex, tokenType, tokenMetadata, tokenContainsRTL);\n            }\n            else {\n                result[resultLen++] = token;\n            }\n            lastTokenEndIndex = tokenEndIndex;\n        }\n    }\n    return result;\n}\nfunction isControlCharacter(charCode) {\n    if (charCode < 32) {\n        return (charCode !== 9 /* CharCode.Tab */);\n    }\n    if (charCode === 127) {\n        // DEL\n        return true;\n    }\n    if ((charCode >= 0x202A && charCode <= 0x202E)\n        || (charCode >= 0x2066 && charCode <= 0x2069)\n        || (charCode >= 0x200E && charCode <= 0x200F)\n        || charCode === 0x061C) {\n        // Unicode Directional Formatting Characters\n        // LRE\tU+202A\tLEFT-TO-RIGHT EMBEDDING\n        // RLE\tU+202B\tRIGHT-TO-LEFT EMBEDDING\n        // PDF\tU+202C\tPOP DIRECTIONAL FORMATTING\n        // LRO\tU+202D\tLEFT-TO-RIGHT OVERRIDE\n        // RLO\tU+202E\tRIGHT-TO-LEFT OVERRIDE\n        // LRI\tU+2066\tLEFT-TO-RIGHT ISOLATE\n        // RLI\tU+2067\tRIGHT-TO-LEFT ISOLATE\n        // FSI\tU+2068\tFIRST STRONG ISOLATE\n        // PDI\tU+2069\tPOP DIRECTIONAL ISOLATE\n        // LRM\tU+200E\tLEFT-TO-RIGHT MARK\n        // RLM\tU+200F\tRIGHT-TO-LEFT MARK\n        // ALM\tU+061C\tARABIC LETTER MARK\n        return true;\n    }\n    return false;\n}\nfunction extractControlCharacters(lineContent, tokens) {\n    const result = [];\n    let lastLinePart = new LinePart(0, '', 0, false);\n    let charOffset = 0;\n    for (const token of tokens) {\n        const tokenEndIndex = token.endIndex;\n        for (; charOffset < tokenEndIndex; charOffset++) {\n            const charCode = lineContent.charCodeAt(charOffset);\n            if (isControlCharacter(charCode)) {\n                if (charOffset > lastLinePart.endIndex) {\n                    // emit previous part if it has text\n                    lastLinePart = new LinePart(charOffset, token.type, token.metadata, token.containsRTL);\n                    result.push(lastLinePart);\n                }\n                lastLinePart = new LinePart(charOffset + 1, 'mtkcontrol', token.metadata, false);\n                result.push(lastLinePart);\n            }\n        }\n        if (charOffset > lastLinePart.endIndex) {\n            // emit previous part if it has text\n            lastLinePart = new LinePart(tokenEndIndex, token.type, token.metadata, token.containsRTL);\n            result.push(lastLinePart);\n        }\n    }\n    return result;\n}\n/**\n * Whitespace is rendered by \"replacing\" tokens with a special-purpose `mtkw` type that is later recognized in the rendering phase.\n * Moreover, a token is created for every visual indent because on some fonts the glyphs used for rendering whitespace (&rarr; or &middot;) do not have the same width as &nbsp;.\n * The rendering phase will generate `style=\"width:...\"` for these tokens.\n */\nfunction _applyRenderWhitespace(input, lineContent, len, tokens) {\n    const continuesWithWrappedLine = input.continuesWithWrappedLine;\n    const fauxIndentLength = input.fauxIndentLength;\n    const tabSize = input.tabSize;\n    const startVisibleColumn = input.startVisibleColumn;\n    const useMonospaceOptimizations = input.useMonospaceOptimizations;\n    const selections = input.selectionsOnLine;\n    const onlyBoundary = (input.renderWhitespace === 1 /* RenderWhitespace.Boundary */);\n    const onlyTrailing = (input.renderWhitespace === 3 /* RenderWhitespace.Trailing */);\n    const generateLinePartForEachWhitespace = (input.renderSpaceWidth !== input.spaceWidth);\n    const result = [];\n    let resultLen = 0;\n    let tokenIndex = 0;\n    let tokenType = tokens[tokenIndex].type;\n    let tokenContainsRTL = tokens[tokenIndex].containsRTL;\n    let tokenEndIndex = tokens[tokenIndex].endIndex;\n    const tokensLength = tokens.length;\n    let lineIsEmptyOrWhitespace = false;\n    let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\n    let lastNonWhitespaceIndex;\n    if (firstNonWhitespaceIndex === -1) {\n        lineIsEmptyOrWhitespace = true;\n        firstNonWhitespaceIndex = len;\n        lastNonWhitespaceIndex = len;\n    }\n    else {\n        lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\n    }\n    let wasInWhitespace = false;\n    let currentSelectionIndex = 0;\n    let currentSelection = selections && selections[currentSelectionIndex];\n    let tmpIndent = startVisibleColumn % tabSize;\n    for (let charIndex = fauxIndentLength; charIndex < len; charIndex++) {\n        const chCode = lineContent.charCodeAt(charIndex);\n        if (currentSelection && charIndex >= currentSelection.endOffset) {\n            currentSelectionIndex++;\n            currentSelection = selections && selections[currentSelectionIndex];\n        }\n        let isInWhitespace;\n        if (charIndex < firstNonWhitespaceIndex || charIndex > lastNonWhitespaceIndex) {\n            // in leading or trailing whitespace\n            isInWhitespace = true;\n        }\n        else if (chCode === 9 /* CharCode.Tab */) {\n            // a tab character is rendered both in all and boundary cases\n            isInWhitespace = true;\n        }\n        else if (chCode === 32 /* CharCode.Space */) {\n            // hit a space character\n            if (onlyBoundary) {\n                // rendering only boundary whitespace\n                if (wasInWhitespace) {\n                    isInWhitespace = true;\n                }\n                else {\n                    const nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* CharCode.Null */);\n                    isInWhitespace = (nextChCode === 32 /* CharCode.Space */ || nextChCode === 9 /* CharCode.Tab */);\n                }\n            }\n            else {\n                isInWhitespace = true;\n            }\n        }\n        else {\n            isInWhitespace = false;\n        }\n        // If rendering whitespace on selection, check that the charIndex falls within a selection\n        if (isInWhitespace && selections) {\n            isInWhitespace = !!currentSelection && currentSelection.startOffset <= charIndex && currentSelection.endOffset > charIndex;\n        }\n        // If rendering only trailing whitespace, check that the charIndex points to trailing whitespace.\n        if (isInWhitespace && onlyTrailing) {\n            isInWhitespace = lineIsEmptyOrWhitespace || charIndex > lastNonWhitespaceIndex;\n        }\n        if (isInWhitespace && tokenContainsRTL) {\n            // If the token contains RTL text, breaking it up into multiple line parts\n            // to render whitespace might affect the browser's bidi layout.\n            //\n            // We render whitespace in such tokens only if the whitespace\n            // is the leading or the trailing whitespace of the line,\n            // which doesn't affect the browser's bidi layout.\n            if (charIndex >= firstNonWhitespaceIndex && charIndex <= lastNonWhitespaceIndex) {\n                isInWhitespace = false;\n            }\n        }\n        if (wasInWhitespace) {\n            // was in whitespace token\n            if (!isInWhitespace || (!useMonospaceOptimizations && tmpIndent >= tabSize)) {\n                // leaving whitespace token or entering a new indent\n                if (generateLinePartForEachWhitespace) {\n                    const lastEndIndex = (resultLen > 0 ? result[resultLen - 1].endIndex : fauxIndentLength);\n                    for (let i = lastEndIndex + 1; i <= charIndex; i++) {\n                        result[resultLen++] = new LinePart(i, 'mtkw', 1 /* LinePartMetadata.IS_WHITESPACE */, false);\n                    }\n                }\n                else {\n                    result[resultLen++] = new LinePart(charIndex, 'mtkw', 1 /* LinePartMetadata.IS_WHITESPACE */, false);\n                }\n                tmpIndent = tmpIndent % tabSize;\n            }\n        }\n        else {\n            // was in regular token\n            if (charIndex === tokenEndIndex || (isInWhitespace && charIndex > fauxIndentLength)) {\n                result[resultLen++] = new LinePart(charIndex, tokenType, 0, tokenContainsRTL);\n                tmpIndent = tmpIndent % tabSize;\n            }\n        }\n        if (chCode === 9 /* CharCode.Tab */) {\n            tmpIndent = tabSize;\n        }\n        else if (strings.isFullWidthCharacter(chCode)) {\n            tmpIndent += 2;\n        }\n        else {\n            tmpIndent++;\n        }\n        wasInWhitespace = isInWhitespace;\n        while (charIndex === tokenEndIndex) {\n            tokenIndex++;\n            if (tokenIndex < tokensLength) {\n                tokenType = tokens[tokenIndex].type;\n                tokenContainsRTL = tokens[tokenIndex].containsRTL;\n                tokenEndIndex = tokens[tokenIndex].endIndex;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    let generateWhitespace = false;\n    if (wasInWhitespace) {\n        // was in whitespace token\n        if (continuesWithWrappedLine && onlyBoundary) {\n            const lastCharCode = (len > 0 ? lineContent.charCodeAt(len - 1) : 0 /* CharCode.Null */);\n            const prevCharCode = (len > 1 ? lineContent.charCodeAt(len - 2) : 0 /* CharCode.Null */);\n            const isSingleTrailingSpace = (lastCharCode === 32 /* CharCode.Space */ && (prevCharCode !== 32 /* CharCode.Space */ && prevCharCode !== 9 /* CharCode.Tab */));\n            if (!isSingleTrailingSpace) {\n                generateWhitespace = true;\n            }\n        }\n        else {\n            generateWhitespace = true;\n        }\n    }\n    if (generateWhitespace) {\n        if (generateLinePartForEachWhitespace) {\n            const lastEndIndex = (resultLen > 0 ? result[resultLen - 1].endIndex : fauxIndentLength);\n            for (let i = lastEndIndex + 1; i <= len; i++) {\n                result[resultLen++] = new LinePart(i, 'mtkw', 1 /* LinePartMetadata.IS_WHITESPACE */, false);\n            }\n        }\n        else {\n            result[resultLen++] = new LinePart(len, 'mtkw', 1 /* LinePartMetadata.IS_WHITESPACE */, false);\n        }\n    }\n    else {\n        result[resultLen++] = new LinePart(len, tokenType, 0, tokenContainsRTL);\n    }\n    return result;\n}\n/**\n * Inline decorations are \"merged\" on top of tokens.\n * Special care must be taken when multiple inline decorations are at play and they overlap.\n */\nfunction _applyInlineDecorations(lineContent, len, tokens, _lineDecorations) {\n    _lineDecorations.sort(LineDecoration.compare);\n    const lineDecorations = LineDecorationsNormalizer.normalize(lineContent, _lineDecorations);\n    const lineDecorationsLen = lineDecorations.length;\n    let lineDecorationIndex = 0;\n    const result = [];\n    let resultLen = 0;\n    let lastResultEndIndex = 0;\n    for (let tokenIndex = 0, len = tokens.length; tokenIndex < len; tokenIndex++) {\n        const token = tokens[tokenIndex];\n        const tokenEndIndex = token.endIndex;\n        const tokenType = token.type;\n        const tokenMetadata = token.metadata;\n        const tokenContainsRTL = token.containsRTL;\n        while (lineDecorationIndex < lineDecorationsLen && lineDecorations[lineDecorationIndex].startOffset < tokenEndIndex) {\n            const lineDecoration = lineDecorations[lineDecorationIndex];\n            if (lineDecoration.startOffset > lastResultEndIndex) {\n                lastResultEndIndex = lineDecoration.startOffset;\n                result[resultLen++] = new LinePart(lastResultEndIndex, tokenType, tokenMetadata, tokenContainsRTL);\n            }\n            if (lineDecoration.endOffset + 1 <= tokenEndIndex) {\n                // This line decoration ends before this token ends\n                lastResultEndIndex = lineDecoration.endOffset + 1;\n                result[resultLen++] = new LinePart(lastResultEndIndex, tokenType + ' ' + lineDecoration.className, tokenMetadata | lineDecoration.metadata, tokenContainsRTL);\n                lineDecorationIndex++;\n            }\n            else {\n                // This line decoration continues on to the next token\n                lastResultEndIndex = tokenEndIndex;\n                result[resultLen++] = new LinePart(lastResultEndIndex, tokenType + ' ' + lineDecoration.className, tokenMetadata | lineDecoration.metadata, tokenContainsRTL);\n                break;\n            }\n        }\n        if (tokenEndIndex > lastResultEndIndex) {\n            lastResultEndIndex = tokenEndIndex;\n            result[resultLen++] = new LinePart(lastResultEndIndex, tokenType, tokenMetadata, tokenContainsRTL);\n        }\n    }\n    const lastTokenEndIndex = tokens[tokens.length - 1].endIndex;\n    if (lineDecorationIndex < lineDecorationsLen && lineDecorations[lineDecorationIndex].startOffset === lastTokenEndIndex) {\n        while (lineDecorationIndex < lineDecorationsLen && lineDecorations[lineDecorationIndex].startOffset === lastTokenEndIndex) {\n            const lineDecoration = lineDecorations[lineDecorationIndex];\n            result[resultLen++] = new LinePart(lastResultEndIndex, lineDecoration.className, lineDecoration.metadata, false);\n            lineDecorationIndex++;\n        }\n    }\n    return result;\n}\n/**\n * This function is on purpose not split up into multiple functions to allow runtime type inference (i.e. performance reasons).\n * Notice how all the needed data is fully resolved and passed in (i.e. no other calls).\n */\nfunction _renderLine(input, sb) {\n    const fontIsMonospace = input.fontIsMonospace;\n    const canUseHalfwidthRightwardsArrow = input.canUseHalfwidthRightwardsArrow;\n    const containsForeignElements = input.containsForeignElements;\n    const lineContent = input.lineContent;\n    const len = input.len;\n    const isOverflowing = input.isOverflowing;\n    const overflowingCharCount = input.overflowingCharCount;\n    const parts = input.parts;\n    const fauxIndentLength = input.fauxIndentLength;\n    const tabSize = input.tabSize;\n    const startVisibleColumn = input.startVisibleColumn;\n    const containsRTL = input.containsRTL;\n    const spaceWidth = input.spaceWidth;\n    const renderSpaceCharCode = input.renderSpaceCharCode;\n    const renderWhitespace = input.renderWhitespace;\n    const renderControlCharacters = input.renderControlCharacters;\n    const characterMapping = new CharacterMapping(len + 1, parts.length);\n    let lastCharacterMappingDefined = false;\n    let charIndex = 0;\n    let visibleColumn = startVisibleColumn;\n    let charOffsetInPart = 0; // the character offset in the current part\n    let charHorizontalOffset = 0; // the character horizontal position in terms of chars relative to line start\n    let partDisplacement = 0;\n    if (containsRTL) {\n        sb.appendString('<span dir=\"ltr\">');\n    }\n    else {\n        sb.appendString('<span>');\n    }\n    for (let partIndex = 0, tokensLen = parts.length; partIndex < tokensLen; partIndex++) {\n        const part = parts[partIndex];\n        const partEndIndex = part.endIndex;\n        const partType = part.type;\n        const partContainsRTL = part.containsRTL;\n        const partRendersWhitespace = (renderWhitespace !== 0 /* RenderWhitespace.None */ && part.isWhitespace());\n        const partRendersWhitespaceWithWidth = partRendersWhitespace && !fontIsMonospace && (partType === 'mtkw' /*only whitespace*/ || !containsForeignElements);\n        const partIsEmptyAndHasPseudoAfter = (charIndex === partEndIndex && part.isPseudoAfter());\n        charOffsetInPart = 0;\n        sb.appendString('<span ');\n        if (partContainsRTL) {\n            sb.appendString('style=\"unicode-bidi:isolate\" ');\n        }\n        sb.appendString('class=\"');\n        sb.appendString(partRendersWhitespaceWithWidth ? 'mtkz' : partType);\n        sb.appendASCIICharCode(34 /* CharCode.DoubleQuote */);\n        if (partRendersWhitespace) {\n            let partWidth = 0;\n            {\n                let _charIndex = charIndex;\n                let _visibleColumn = visibleColumn;\n                for (; _charIndex < partEndIndex; _charIndex++) {\n                    const charCode = lineContent.charCodeAt(_charIndex);\n                    const charWidth = (charCode === 9 /* CharCode.Tab */ ? (tabSize - (_visibleColumn % tabSize)) : 1) | 0;\n                    partWidth += charWidth;\n                    if (_charIndex >= fauxIndentLength) {\n                        _visibleColumn += charWidth;\n                    }\n                }\n            }\n            if (partRendersWhitespaceWithWidth) {\n                sb.appendString(' style=\"width:');\n                sb.appendString(String(spaceWidth * partWidth));\n                sb.appendString('px\"');\n            }\n            sb.appendASCIICharCode(62 /* CharCode.GreaterThan */);\n            for (; charIndex < partEndIndex; charIndex++) {\n                characterMapping.setColumnInfo(charIndex + 1, partIndex - partDisplacement, charOffsetInPart, charHorizontalOffset);\n                partDisplacement = 0;\n                const charCode = lineContent.charCodeAt(charIndex);\n                let producedCharacters;\n                let charWidth;\n                if (charCode === 9 /* CharCode.Tab */) {\n                    producedCharacters = (tabSize - (visibleColumn % tabSize)) | 0;\n                    charWidth = producedCharacters;\n                    if (!canUseHalfwidthRightwardsArrow || charWidth > 1) {\n                        sb.appendCharCode(0x2192); // RIGHTWARDS ARROW\n                    }\n                    else {\n                        sb.appendCharCode(0xFFEB); // HALFWIDTH RIGHTWARDS ARROW\n                    }\n                    for (let space = 2; space <= charWidth; space++) {\n                        sb.appendCharCode(0xA0); // &nbsp;\n                    }\n                }\n                else { // must be CharCode.Space\n                    producedCharacters = 2;\n                    charWidth = 1;\n                    sb.appendCharCode(renderSpaceCharCode); // &middot; or word separator middle dot\n                    sb.appendCharCode(0x200C); // ZERO WIDTH NON-JOINER\n                }\n                charOffsetInPart += producedCharacters;\n                charHorizontalOffset += charWidth;\n                if (charIndex >= fauxIndentLength) {\n                    visibleColumn += charWidth;\n                }\n            }\n        }\n        else {\n            sb.appendASCIICharCode(62 /* CharCode.GreaterThan */);\n            for (; charIndex < partEndIndex; charIndex++) {\n                characterMapping.setColumnInfo(charIndex + 1, partIndex - partDisplacement, charOffsetInPart, charHorizontalOffset);\n                partDisplacement = 0;\n                const charCode = lineContent.charCodeAt(charIndex);\n                let producedCharacters = 1;\n                let charWidth = 1;\n                switch (charCode) {\n                    case 9 /* CharCode.Tab */:\n                        producedCharacters = (tabSize - (visibleColumn % tabSize));\n                        charWidth = producedCharacters;\n                        for (let space = 1; space <= producedCharacters; space++) {\n                            sb.appendCharCode(0xA0); // &nbsp;\n                        }\n                        break;\n                    case 32 /* CharCode.Space */:\n                        sb.appendCharCode(0xA0); // &nbsp;\n                        break;\n                    case 60 /* CharCode.LessThan */:\n                        sb.appendString('&lt;');\n                        break;\n                    case 62 /* CharCode.GreaterThan */:\n                        sb.appendString('&gt;');\n                        break;\n                    case 38 /* CharCode.Ampersand */:\n                        sb.appendString('&amp;');\n                        break;\n                    case 0 /* CharCode.Null */:\n                        if (renderControlCharacters) {\n                            // See https://unicode-table.com/en/blocks/control-pictures/\n                            sb.appendCharCode(9216);\n                        }\n                        else {\n                            sb.appendString('&#00;');\n                        }\n                        break;\n                    case 65279 /* CharCode.UTF8_BOM */:\n                    case 8232 /* CharCode.LINE_SEPARATOR */:\n                    case 8233 /* CharCode.PARAGRAPH_SEPARATOR */:\n                    case 133 /* CharCode.NEXT_LINE */:\n                        sb.appendCharCode(0xFFFD);\n                        break;\n                    default:\n                        if (strings.isFullWidthCharacter(charCode)) {\n                            charWidth++;\n                        }\n                        // See https://unicode-table.com/en/blocks/control-pictures/\n                        if (renderControlCharacters && charCode < 32) {\n                            sb.appendCharCode(9216 + charCode);\n                        }\n                        else if (renderControlCharacters && charCode === 127) {\n                            // DEL\n                            sb.appendCharCode(9249);\n                        }\n                        else if (renderControlCharacters && isControlCharacter(charCode)) {\n                            sb.appendString('[U+');\n                            sb.appendString(to4CharHex(charCode));\n                            sb.appendString(']');\n                            producedCharacters = 8;\n                            charWidth = producedCharacters;\n                        }\n                        else {\n                            sb.appendCharCode(charCode);\n                        }\n                }\n                charOffsetInPart += producedCharacters;\n                charHorizontalOffset += charWidth;\n                if (charIndex >= fauxIndentLength) {\n                    visibleColumn += charWidth;\n                }\n            }\n        }\n        if (partIsEmptyAndHasPseudoAfter) {\n            partDisplacement++;\n        }\n        else {\n            partDisplacement = 0;\n        }\n        if (charIndex >= len && !lastCharacterMappingDefined && part.isPseudoAfter()) {\n            lastCharacterMappingDefined = true;\n            characterMapping.setColumnInfo(charIndex + 1, partIndex, charOffsetInPart, charHorizontalOffset);\n        }\n        sb.appendString('</span>');\n    }\n    if (!lastCharacterMappingDefined) {\n        // When getting client rects for the last character, we will position the\n        // text range at the end of the span, insteaf of at the beginning of next span\n        characterMapping.setColumnInfo(len + 1, parts.length - 1, charOffsetInPart, charHorizontalOffset);\n    }\n    if (isOverflowing) {\n        sb.appendString('<span class=\"mtkoverflow\">');\n        sb.appendString(nls.localize('showMore', \"Show more ({0})\", renderOverflowingCharCount(overflowingCharCount)));\n        sb.appendString('</span>');\n    }\n    sb.appendString('</span>');\n    return new RenderLineOutput(characterMapping, containsRTL, containsForeignElements);\n}\nfunction to4CharHex(n) {\n    return n.toString(16).toUpperCase().padStart(4, '0');\n}\nfunction renderOverflowingCharCount(n) {\n    if (n < 1024) {\n        return nls.localize('overflow.chars', \"{0} chars\", n);\n    }\n    if (n < 1024 * 1024) {\n        return `${(n / 1024).toFixed(1)} KB`;\n    }\n    return `${(n / 1024 / 1024).toFixed(1)} MB`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nexport class RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nexport class HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    /**\n     * Converts an RGB color value to HSL. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes r, g, and b are contained in the set [0, 255] and\n     * returns h in the set [0, 360], s, and l in the set [0, 1].\n     */\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return new HSLA(h, s, l, a);\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    /**\n     * Converts an HSL color value to RGB. Conversion formula\n     * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n     * Assumes h in the set [0, 360] s, and l are contained in the set [0, 1] and\n     * returns r, g, and b in the set [0, 255].\n     */\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l; // achromatic\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a);\n    }\n}\nexport class HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    // from http://www.rapidtables.com/convert/color/rgb-to-hsv.htm\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return new HSVA(Math.round(m * 60), s, cmax, rgba.a);\n    }\n    // from http://www.rapidtables.com/convert/color/hsv-to-rgb.htm\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return new RGBA(r, g, b, a);\n    }\n}\nexport class Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw new Error('Color needs a value');\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw new Error('Invalid color ctor argument');\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    /**\n     * http://www.w3.org/TR/WCAG20/#relativeluminancedef\n     * Returns the number in the set [0, 1]. O => Darkest Black. 1 => Lightest white.\n     */\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    /**\n     *\thttp://24ways.org/2010/calculating-color-contrast\n     *  Return 'true' if lighter color otherwise 'false'\n     */\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a));\n    }\n    darken(factor) {\n        return new Color(new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return new Color(new RGBA(r, g, b, a * factor));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return new Color(new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            // only allow to blend onto a non-opaque color onto a opaque color\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        // https://stackoverflow.com/questions/12228548/finding-equivalent-color-with-opacity\n        return new Color(new RGBA(opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r), opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g), opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b), 1));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return of.lighten(factor);\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return of.darken(factor);\n    }\n    static { this.white = new Color(new RGBA(255, 255, 255, 1)); }\n    static { this.black = new Color(new RGBA(0, 0, 0, 1)); }\n    static { this.red = new Color(new RGBA(255, 0, 0, 1)); }\n    static { this.blue = new Color(new RGBA(0, 0, 255, 1)); }\n    static { this.green = new Color(new RGBA(0, 255, 0, 1)); }\n    static { this.cyan = new Color(new RGBA(0, 255, 255, 1)); }\n    static { this.lightgrey = new Color(new RGBA(211, 211, 211, 1)); }\n    static { this.transparent = new Color(new RGBA(0, 0, 0, 0)); }\n}\n(function (Color) {\n    let Format;\n    (function (Format) {\n        let CSS;\n        (function (CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = n.toString(16);\n                return r.length !== 2 ? '0' + r : r;\n            }\n            /**\n             * Formats the color as #RRGGBB\n             */\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            /**\n             * Formats the color as #RRGGBBAA\n             * If 'compact' is set, colors without transparancy will be printed as #RRGGBB\n             */\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            /**\n             * The default format will use HEX if opaque and RGBA otherwise.\n             */\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            /**\n             * Converts an Hex color value to a Color.\n             * returns r, g, and b are contained in the set [0, 255]\n             * @param hex string (#RGB, #RGBA, #RRGGBB or #RRGGBBAA).\n             */\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    // Invalid color\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== 35 /* CharCode.Hash */) {\n                    // Does not begin with a #\n                    return null;\n                }\n                if (length === 7) {\n                    // #RRGGBB format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return new Color(new RGBA(r, g, b, 1));\n                }\n                if (length === 9) {\n                    // #RRGGBBAA format\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return new Color(new RGBA(r, g, b, a / 255));\n                }\n                if (length === 4) {\n                    // #RGB format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b));\n                }\n                if (length === 5) {\n                    // #RGBA format\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return new Color(new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255));\n                }\n                // Invalid color\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case 48 /* CharCode.Digit0 */: return 0;\n                    case 49 /* CharCode.Digit1 */: return 1;\n                    case 50 /* CharCode.Digit2 */: return 2;\n                    case 51 /* CharCode.Digit3 */: return 3;\n                    case 52 /* CharCode.Digit4 */: return 4;\n                    case 53 /* CharCode.Digit5 */: return 5;\n                    case 54 /* CharCode.Digit6 */: return 6;\n                    case 55 /* CharCode.Digit7 */: return 7;\n                    case 56 /* CharCode.Digit8 */: return 8;\n                    case 57 /* CharCode.Digit9 */: return 9;\n                    case 97 /* CharCode.a */: return 10;\n                    case 65 /* CharCode.A */: return 10;\n                    case 98 /* CharCode.b */: return 11;\n                    case 66 /* CharCode.B */: return 11;\n                    case 99 /* CharCode.c */: return 12;\n                    case 67 /* CharCode.C */: return 12;\n                    case 100 /* CharCode.d */: return 13;\n                    case 68 /* CharCode.D */: return 13;\n                    case 101 /* CharCode.e */: return 14;\n                    case 69 /* CharCode.E */: return 14;\n                    case 102 /* CharCode.f */: return 15;\n                    case 70 /* CharCode.F */: return 15;\n                }\n                return 0;\n            }\n        })(CSS = Format.CSS || (Format.CSS = {}));\n    })(Format = Color.Format || (Color.Format = {}));\n})(Color || (Color = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { mainWindow } from './window.js';\nclass WindowManager {\n    constructor() {\n        // --- Zoom Factor\n        this.mapWindowIdToZoomFactor = new Map();\n    }\n    static { this.INSTANCE = new WindowManager(); }\n    getZoomFactor(targetWindow) {\n        return this.mapWindowIdToZoomFactor.get(this.getWindowId(targetWindow)) ?? 1;\n    }\n    getWindowId(targetWindow) {\n        return targetWindow.vscodeWindowId;\n    }\n}\nexport function addMatchMediaChangeListener(targetWindow, query, callback) {\n    if (typeof query === 'string') {\n        query = targetWindow.matchMedia(query);\n    }\n    query.addEventListener('change', callback);\n}\n/** The zoom scale for an index, e.g. 1, 1.2, 1.4 */\nexport function getZoomFactor(targetWindow) {\n    return WindowManager.INSTANCE.getZoomFactor(targetWindow);\n}\nconst userAgent = navigator.userAgent;\nexport const isFirefox = (userAgent.indexOf('Firefox') >= 0);\nexport const isWebKit = (userAgent.indexOf('AppleWebKit') >= 0);\nexport const isChrome = (userAgent.indexOf('Chrome') >= 0);\nexport const isSafari = (!isChrome && (userAgent.indexOf('Safari') >= 0));\nexport const isWebkitWebView = (!isChrome && !isSafari && isWebKit);\nexport const isElectron = (userAgent.indexOf('Electron/') >= 0);\nexport const isAndroid = (userAgent.indexOf('Android') >= 0);\nlet standalone = false;\nif (typeof mainWindow.matchMedia === 'function') {\n    const standaloneMatchMedia = mainWindow.matchMedia('(display-mode: standalone) or (display-mode: window-controls-overlay)');\n    const fullScreenMatchMedia = mainWindow.matchMedia('(display-mode: fullscreen)');\n    standalone = standaloneMatchMedia.matches;\n    addMatchMediaChangeListener(mainWindow, standaloneMatchMedia, ({ matches }) => {\n        // entering fullscreen would change standaloneMatchMedia.matches to false\n        // if standalone is true (running as PWA) and entering fullscreen, skip this change\n        if (standalone && fullScreenMatchMedia.matches) {\n            return;\n        }\n        // otherwise update standalone (browser to PWA or PWA to browser)\n        standalone = matches;\n    });\n}\nexport function isStandalone() {\n    return standalone;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst sameOriginWindowChainCache = new WeakMap();\nfunction getParentWindowIfSameOrigin(w) {\n    if (!w.parent || w.parent === w) {\n        return null;\n    }\n    // Cannot really tell if we have access to the parent window unless we try to access something in it\n    try {\n        const location = w.location;\n        const parentLocation = w.parent.location;\n        if (location.origin !== 'null' && parentLocation.origin !== 'null' && location.origin !== parentLocation.origin) {\n            return null;\n        }\n    }\n    catch (e) {\n        return null;\n    }\n    return w.parent;\n}\nexport class IframeUtils {\n    /**\n     * Returns a chain of embedded windows with the same origin (which can be accessed programmatically).\n     * Having a chain of length 1 might mean that the current execution environment is running outside of an iframe or inside an iframe embedded in a window with a different origin.\n     */\n    static getSameOriginWindowChain(targetWindow) {\n        let windowChainCache = sameOriginWindowChainCache.get(targetWindow);\n        if (!windowChainCache) {\n            windowChainCache = [];\n            sameOriginWindowChainCache.set(targetWindow, windowChainCache);\n            let w = targetWindow;\n            let parent;\n            do {\n                parent = getParentWindowIfSameOrigin(w);\n                if (parent) {\n                    windowChainCache.push({\n                        window: new WeakRef(w),\n                        iframeElement: w.frameElement || null\n                    });\n                }\n                else {\n                    windowChainCache.push({\n                        window: new WeakRef(w),\n                        iframeElement: null\n                    });\n                }\n                w = parent;\n            } while (w);\n        }\n        return windowChainCache.slice(0);\n    }\n    /**\n     * Returns the position of `childWindow` relative to `ancestorWindow`\n     */\n    static getPositionOfChildWindowRelativeToAncestorWindow(childWindow, ancestorWindow) {\n        if (!ancestorWindow || childWindow === ancestorWindow) {\n            return {\n                top: 0,\n                left: 0\n            };\n        }\n        let top = 0, left = 0;\n        const windowChain = this.getSameOriginWindowChain(childWindow);\n        for (const windowChainEl of windowChain) {\n            const windowInChain = windowChainEl.window.deref();\n            top += windowInChain?.scrollY ?? 0;\n            left += windowInChain?.scrollX ?? 0;\n            if (windowInChain === ancestorWindow) {\n                break;\n            }\n            if (!windowChainEl.iframeElement) {\n                break;\n            }\n            const boundingRect = windowChainEl.iframeElement.getBoundingClientRect();\n            top += boundingRect.top;\n            left += boundingRect.left;\n        }\n        return {\n            top: top,\n            left: left\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { IframeUtils } from './iframe.js';\nimport * as platform from '../common/platform.js';\nexport class StandardMouseEvent {\n    constructor(targetWindow, e) {\n        this.timestamp = Date.now();\n        this.browserEvent = e;\n        this.leftButton = e.button === 0;\n        this.middleButton = e.button === 1;\n        this.rightButton = e.button === 2;\n        this.buttons = e.buttons;\n        this.target = e.target;\n        this.detail = e.detail || 1;\n        if (e.type === 'dblclick') {\n            this.detail = 2;\n        }\n        this.ctrlKey = e.ctrlKey;\n        this.shiftKey = e.shiftKey;\n        this.altKey = e.altKey;\n        this.metaKey = e.metaKey;\n        if (typeof e.pageX === 'number') {\n            this.posx = e.pageX;\n            this.posy = e.pageY;\n        }\n        else {\n            // Probably hit by MSGestureEvent\n            this.posx = e.clientX + this.target.ownerDocument.body.scrollLeft + this.target.ownerDocument.documentElement.scrollLeft;\n            this.posy = e.clientY + this.target.ownerDocument.body.scrollTop + this.target.ownerDocument.documentElement.scrollTop;\n        }\n        // Find the position of the iframe this code is executing in relative to the iframe where the event was captured.\n        const iframeOffsets = IframeUtils.getPositionOfChildWindowRelativeToAncestorWindow(targetWindow, e.view);\n        this.posx -= iframeOffsets.left;\n        this.posy -= iframeOffsets.top;\n    }\n    preventDefault() {\n        this.browserEvent.preventDefault();\n    }\n    stopPropagation() {\n        this.browserEvent.stopPropagation();\n    }\n}\nexport class StandardWheelEvent {\n    constructor(e, deltaX = 0, deltaY = 0) {\n        this.browserEvent = e || null;\n        this.target = e ? (e.target || e.targetNode || e.srcElement) : null;\n        this.deltaY = deltaY;\n        this.deltaX = deltaX;\n        let shouldFactorDPR = false;\n        if (browser.isChrome) {\n            // Chrome version >= 123 contains the fix to factor devicePixelRatio into the wheel event.\n            // See https://chromium.googlesource.com/chromium/src.git/+/be51b448441ff0c9d1f17e0f25c4bf1ab3f11f61\n            const chromeVersionMatch = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            const chromeMajorVersion = chromeVersionMatch ? parseInt(chromeVersionMatch[1]) : 123;\n            shouldFactorDPR = chromeMajorVersion <= 122;\n        }\n        if (e) {\n            // Old (deprecated) wheel events\n            const e1 = e;\n            const e2 = e;\n            const devicePixelRatio = e.view?.devicePixelRatio || 1;\n            // vertical delta scroll\n            if (typeof e1.wheelDeltaY !== 'undefined') {\n                if (shouldFactorDPR) {\n                    // Refs https://github.com/microsoft/vscode/issues/146403#issuecomment-1854538928\n                    this.deltaY = e1.wheelDeltaY / (120 * devicePixelRatio);\n                }\n                else {\n                    this.deltaY = e1.wheelDeltaY / 120;\n                }\n            }\n            else if (typeof e2.VERTICAL_AXIS !== 'undefined' && e2.axis === e2.VERTICAL_AXIS) {\n                this.deltaY = -e2.detail / 3;\n            }\n            else if (e.type === 'wheel') {\n                // Modern wheel event\n                // https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\n                const ev = e;\n                if (ev.deltaMode === ev.DOM_DELTA_LINE) {\n                    // the deltas are expressed in lines\n                    if (browser.isFirefox && !platform.isMacintosh) {\n                        this.deltaY = -e.deltaY / 3;\n                    }\n                    else {\n                        this.deltaY = -e.deltaY;\n                    }\n                }\n                else {\n                    this.deltaY = -e.deltaY / 40;\n                }\n            }\n            // horizontal delta scroll\n            if (typeof e1.wheelDeltaX !== 'undefined') {\n                if (browser.isSafari && platform.isWindows) {\n                    this.deltaX = -(e1.wheelDeltaX / 120);\n                }\n                else if (shouldFactorDPR) {\n                    // Refs https://github.com/microsoft/vscode/issues/146403#issuecomment-1854538928\n                    this.deltaX = e1.wheelDeltaX / (120 * devicePixelRatio);\n                }\n                else {\n                    this.deltaX = e1.wheelDeltaX / 120;\n                }\n            }\n            else if (typeof e2.HORIZONTAL_AXIS !== 'undefined' && e2.axis === e2.HORIZONTAL_AXIS) {\n                this.deltaX = -e.detail / 3;\n            }\n            else if (e.type === 'wheel') {\n                // Modern wheel event\n                // https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent\n                const ev = e;\n                if (ev.deltaMode === ev.DOM_DELTA_LINE) {\n                    // the deltas are expressed in lines\n                    if (browser.isFirefox && !platform.isMacintosh) {\n                        this.deltaX = -e.deltaX / 3;\n                    }\n                    else {\n                        this.deltaX = -e.deltaX;\n                    }\n                }\n                else {\n                    this.deltaX = -e.deltaX / 40;\n                }\n            }\n            // Assume a vertical scroll if nothing else worked\n            if (this.deltaY === 0 && this.deltaX === 0 && e.wheelDelta) {\n                if (shouldFactorDPR) {\n                    // Refs https://github.com/microsoft/vscode/issues/146403#issuecomment-1854538928\n                    this.deltaY = e.wheelDelta / (120 * devicePixelRatio);\n                }\n                else {\n                    this.deltaY = e.wheelDelta / 120;\n                }\n            }\n        }\n    }\n    preventDefault() {\n        this.browserEvent?.preventDefault();\n    }\n    stopPropagation() {\n        this.browserEvent?.stopPropagation();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nexport class LineDecoration {\n    constructor(startColumn, endColumn, className, type) {\n        this.startColumn = startColumn;\n        this.endColumn = endColumn;\n        this.className = className;\n        this.type = type;\n        this._lineDecorationBrand = undefined;\n    }\n    static _equals(a, b) {\n        return (a.startColumn === b.startColumn\n            && a.endColumn === b.endColumn\n            && a.className === b.className\n            && a.type === b.type);\n    }\n    static equalsArr(a, b) {\n        const aLen = a.length;\n        const bLen = b.length;\n        if (aLen !== bLen) {\n            return false;\n        }\n        for (let i = 0; i < aLen; i++) {\n            if (!LineDecoration._equals(a[i], b[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static extractWrapped(arr, startOffset, endOffset) {\n        if (arr.length === 0) {\n            return arr;\n        }\n        const startColumn = startOffset + 1;\n        const endColumn = endOffset + 1;\n        const lineLength = endOffset - startOffset;\n        const r = [];\n        let rLength = 0;\n        for (const dec of arr) {\n            if (dec.endColumn <= startColumn || dec.startColumn >= endColumn) {\n                continue;\n            }\n            r[rLength++] = new LineDecoration(Math.max(1, dec.startColumn - startColumn + 1), Math.min(lineLength + 1, dec.endColumn - startColumn + 1), dec.className, dec.type);\n        }\n        return r;\n    }\n    static filter(lineDecorations, lineNumber, minLineColumn, maxLineColumn) {\n        if (lineDecorations.length === 0) {\n            return [];\n        }\n        const result = [];\n        let resultLen = 0;\n        for (let i = 0, len = lineDecorations.length; i < len; i++) {\n            const d = lineDecorations[i];\n            const range = d.range;\n            if (range.endLineNumber < lineNumber || range.startLineNumber > lineNumber) {\n                // Ignore decorations that sit outside this line\n                continue;\n            }\n            if (range.isEmpty() && (d.type === 0 /* InlineDecorationType.Regular */ || d.type === 3 /* InlineDecorationType.RegularAffectingLetterSpacing */)) {\n                // Ignore empty range decorations\n                continue;\n            }\n            const startColumn = (range.startLineNumber === lineNumber ? range.startColumn : minLineColumn);\n            const endColumn = (range.endLineNumber === lineNumber ? range.endColumn : maxLineColumn);\n            result[resultLen++] = new LineDecoration(startColumn, endColumn, d.inlineClassName, d.type);\n        }\n        return result;\n    }\n    static _typeCompare(a, b) {\n        const ORDER = [2, 0, 1, 3];\n        return ORDER[a] - ORDER[b];\n    }\n    static compare(a, b) {\n        if (a.startColumn !== b.startColumn) {\n            return a.startColumn - b.startColumn;\n        }\n        if (a.endColumn !== b.endColumn) {\n            return a.endColumn - b.endColumn;\n        }\n        const typeCmp = LineDecoration._typeCompare(a.type, b.type);\n        if (typeCmp !== 0) {\n            return typeCmp;\n        }\n        if (a.className !== b.className) {\n            return a.className < b.className ? -1 : 1;\n        }\n        return 0;\n    }\n}\nexport class DecorationSegment {\n    constructor(startOffset, endOffset, className, metadata) {\n        this.startOffset = startOffset;\n        this.endOffset = endOffset;\n        this.className = className;\n        this.metadata = metadata;\n    }\n}\nclass Stack {\n    constructor() {\n        this.stopOffsets = [];\n        this.classNames = [];\n        this.metadata = [];\n        this.count = 0;\n    }\n    static _metadata(metadata) {\n        let result = 0;\n        for (let i = 0, len = metadata.length; i < len; i++) {\n            result |= metadata[i];\n        }\n        return result;\n    }\n    consumeLowerThan(maxStopOffset, nextStartOffset, result) {\n        while (this.count > 0 && this.stopOffsets[0] < maxStopOffset) {\n            let i = 0;\n            // Take all equal stopping offsets\n            while (i + 1 < this.count && this.stopOffsets[i] === this.stopOffsets[i + 1]) {\n                i++;\n            }\n            // Basically we are consuming the first i + 1 elements of the stack\n            result.push(new DecorationSegment(nextStartOffset, this.stopOffsets[i], this.classNames.join(' '), Stack._metadata(this.metadata)));\n            nextStartOffset = this.stopOffsets[i] + 1;\n            // Consume them\n            this.stopOffsets.splice(0, i + 1);\n            this.classNames.splice(0, i + 1);\n            this.metadata.splice(0, i + 1);\n            this.count -= (i + 1);\n        }\n        if (this.count > 0 && nextStartOffset < maxStopOffset) {\n            result.push(new DecorationSegment(nextStartOffset, maxStopOffset - 1, this.classNames.join(' '), Stack._metadata(this.metadata)));\n            nextStartOffset = maxStopOffset;\n        }\n        return nextStartOffset;\n    }\n    insert(stopOffset, className, metadata) {\n        if (this.count === 0 || this.stopOffsets[this.count - 1] <= stopOffset) {\n            // Insert at the end\n            this.stopOffsets.push(stopOffset);\n            this.classNames.push(className);\n            this.metadata.push(metadata);\n        }\n        else {\n            // Find the insertion position for `stopOffset`\n            for (let i = 0; i < this.count; i++) {\n                if (this.stopOffsets[i] >= stopOffset) {\n                    this.stopOffsets.splice(i, 0, stopOffset);\n                    this.classNames.splice(i, 0, className);\n                    this.metadata.splice(i, 0, metadata);\n                    break;\n                }\n            }\n        }\n        this.count++;\n        return;\n    }\n}\nexport class LineDecorationsNormalizer {\n    /**\n     * Normalize line decorations. Overlapping decorations will generate multiple segments\n     */\n    static normalize(lineContent, lineDecorations) {\n        if (lineDecorations.length === 0) {\n            return [];\n        }\n        const result = [];\n        const stack = new Stack();\n        let nextStartOffset = 0;\n        for (let i = 0, len = lineDecorations.length; i < len; i++) {\n            const d = lineDecorations[i];\n            let startColumn = d.startColumn;\n            let endColumn = d.endColumn;\n            const className = d.className;\n            const metadata = (d.type === 1 /* InlineDecorationType.Before */\n                ? 2 /* LinePartMetadata.PSEUDO_BEFORE */\n                : d.type === 2 /* InlineDecorationType.After */\n                    ? 4 /* LinePartMetadata.PSEUDO_AFTER */\n                    : 0);\n            // If the position would end up in the middle of a high-low surrogate pair, we move it to before the pair\n            if (startColumn > 1) {\n                const charCodeBefore = lineContent.charCodeAt(startColumn - 2);\n                if (strings.isHighSurrogate(charCodeBefore)) {\n                    startColumn--;\n                }\n            }\n            if (endColumn > 1) {\n                const charCodeBefore = lineContent.charCodeAt(endColumn - 2);\n                if (strings.isHighSurrogate(charCodeBefore)) {\n                    endColumn--;\n                }\n            }\n            const currentStartOffset = startColumn - 1;\n            const currentEndOffset = endColumn - 2;\n            nextStartOffset = stack.consumeLowerThan(currentStartOffset, nextStartOffset, result);\n            if (stack.count === 0) {\n                nextStartOffset = currentStartOffset;\n            }\n            stack.insert(currentEndOffset, className, metadata);\n        }\n        stack.consumeLowerThan(1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, nextStartOffset, result);\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError, onUnexpectedError } from './errors.js';\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n *\n * @deprecated Use `assert(...)` instead.\n * This method is usually used like this:\n * ```ts\n * import * as assert from 'vs/base/common/assert';\n * assert.ok(...);\n * ```\n *\n * However, `assert` in that example is a user chosen name.\n * There is no tooling for generating such an import statement.\n * Thus, the `assert(...)` function should be used instead.\n */\nexport function ok(value, message) {\n    if (!value) {\n        throw new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n    }\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n/**\n * Like assert, but doesn't throw.\n */\nexport function softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(new BugIndicatingError('Soft Assertion Failed'));\n    }\n}\n/**\n * condition must be side-effect free!\n */\nexport function assertFn(condition) {\n    if (!condition()) {\n        // eslint-disable-next-line no-debugger\n        debugger;\n        // Reevaluate `condition` again to make debugging easier\n        condition();\n        onUnexpectedError(new BugIndicatingError('Assertion Failed'));\n    }\n}\nexport function checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { registerColor } from '../colorUtils.js';\n// Import the colors we need\nimport { contrastBorder, activeContrastBorder } from './baseColors.js';\nimport { selectForeground, selectBackground } from './inputColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground } from './listColors.js';\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', selectForeground, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', selectBackground, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', listActiveSelectionForeground, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', listActiveSelectionBackground, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../base/common/lifecycle.js';\nexport class ViewEventHandler extends Disposable {\n    constructor() {\n        super();\n        this._shouldRender = true;\n    }\n    shouldRender() {\n        return this._shouldRender;\n    }\n    forceShouldRender() {\n        this._shouldRender = true;\n    }\n    setShouldRender() {\n        this._shouldRender = true;\n    }\n    onDidRender() {\n        this._shouldRender = false;\n    }\n    // --- begin event handlers\n    onCompositionStart(e) {\n        return false;\n    }\n    onCompositionEnd(e) {\n        return false;\n    }\n    onConfigurationChanged(e) {\n        return false;\n    }\n    onCursorStateChanged(e) {\n        return false;\n    }\n    onDecorationsChanged(e) {\n        return false;\n    }\n    onFlushed(e) {\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    onLanguageConfigurationChanged(e) {\n        return false;\n    }\n    onLineMappingChanged(e) {\n        return false;\n    }\n    onLinesChanged(e) {\n        return false;\n    }\n    onLinesDeleted(e) {\n        return false;\n    }\n    onLinesInserted(e) {\n        return false;\n    }\n    onRevealRangeRequest(e) {\n        return false;\n    }\n    onScrollChanged(e) {\n        return false;\n    }\n    onThemeChanged(e) {\n        return false;\n    }\n    onTokensChanged(e) {\n        return false;\n    }\n    onTokensColorsChanged(e) {\n        return false;\n    }\n    onZonesChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    handleEvents(events) {\n        let shouldRender = false;\n        for (let i = 0, len = events.length; i < len; i++) {\n            const e = events[i];\n            switch (e.type) {\n                case 0 /* viewEvents.ViewEventType.ViewCompositionStart */:\n                    if (this.onCompositionStart(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 1 /* viewEvents.ViewEventType.ViewCompositionEnd */:\n                    if (this.onCompositionEnd(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 2 /* viewEvents.ViewEventType.ViewConfigurationChanged */:\n                    if (this.onConfigurationChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 3 /* viewEvents.ViewEventType.ViewCursorStateChanged */:\n                    if (this.onCursorStateChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 4 /* viewEvents.ViewEventType.ViewDecorationsChanged */:\n                    if (this.onDecorationsChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 5 /* viewEvents.ViewEventType.ViewFlushed */:\n                    if (this.onFlushed(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 6 /* viewEvents.ViewEventType.ViewFocusChanged */:\n                    if (this.onFocusChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 7 /* viewEvents.ViewEventType.ViewLanguageConfigurationChanged */:\n                    if (this.onLanguageConfigurationChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 8 /* viewEvents.ViewEventType.ViewLineMappingChanged */:\n                    if (this.onLineMappingChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 9 /* viewEvents.ViewEventType.ViewLinesChanged */:\n                    if (this.onLinesChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 10 /* viewEvents.ViewEventType.ViewLinesDeleted */:\n                    if (this.onLinesDeleted(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 11 /* viewEvents.ViewEventType.ViewLinesInserted */:\n                    if (this.onLinesInserted(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 12 /* viewEvents.ViewEventType.ViewRevealRangeRequest */:\n                    if (this.onRevealRangeRequest(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 13 /* viewEvents.ViewEventType.ViewScrollChanged */:\n                    if (this.onScrollChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 15 /* viewEvents.ViewEventType.ViewTokensChanged */:\n                    if (this.onTokensChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 14 /* viewEvents.ViewEventType.ViewThemeChanged */:\n                    if (this.onThemeChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 16 /* viewEvents.ViewEventType.ViewTokensColorsChanged */:\n                    if (this.onTokensColorsChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                case 17 /* viewEvents.ViewEventType.ViewZonesChanged */:\n                    if (this.onZonesChanged(e)) {\n                        shouldRender = true;\n                    }\n                    break;\n                default:\n                    console.info('View received unknown event: ');\n                    console.info(e);\n            }\n        }\n        if (shouldRender) {\n            this._shouldRender = true;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from './browser.js';\nimport { BrowserFeatures } from './canIUse.js';\nimport { StandardKeyboardEvent } from './keyboardEvent.js';\nimport { StandardMouseEvent } from './mouseEvent.js';\nimport { AbstractIdleValue, IntervalTimer, _runWhenIdle } from '../common/async.js';\nimport { onUnexpectedError } from '../common/errors.js';\nimport * as event from '../common/event.js';\nimport * as dompurify from './dompurify/dompurify.js';\nimport { Disposable, DisposableStore, toDisposable } from '../common/lifecycle.js';\nimport { FileAccess, RemoteAuthorities } from '../common/network.js';\nimport * as platform from '../common/platform.js';\nimport { hash } from '../common/hash.js';\nimport { ensureCodeWindow, mainWindow } from './window.js';\n//# region Multi-Window Support Utilities\nexport const { registerWindow, getWindow, getDocument, getWindows, getWindowsCount, getWindowId, getWindowById, hasWindow, onDidRegisterWindow, onWillUnregisterWindow, onDidUnregisterWindow } = (function () {\n    const windows = new Map();\n    ensureCodeWindow(mainWindow, 1);\n    const mainWindowRegistration = { window: mainWindow, disposables: new DisposableStore() };\n    windows.set(mainWindow.vscodeWindowId, mainWindowRegistration);\n    const onDidRegisterWindow = new event.Emitter();\n    const onDidUnregisterWindow = new event.Emitter();\n    const onWillUnregisterWindow = new event.Emitter();\n    function getWindowById(windowId, fallbackToMain) {\n        const window = typeof windowId === 'number' ? windows.get(windowId) : undefined;\n        return window ?? (fallbackToMain ? mainWindowRegistration : undefined);\n    }\n    return {\n        onDidRegisterWindow: onDidRegisterWindow.event,\n        onWillUnregisterWindow: onWillUnregisterWindow.event,\n        onDidUnregisterWindow: onDidUnregisterWindow.event,\n        registerWindow(window) {\n            if (windows.has(window.vscodeWindowId)) {\n                return Disposable.None;\n            }\n            const disposables = new DisposableStore();\n            const registeredWindow = {\n                window,\n                disposables: disposables.add(new DisposableStore())\n            };\n            windows.set(window.vscodeWindowId, registeredWindow);\n            disposables.add(toDisposable(() => {\n                windows.delete(window.vscodeWindowId);\n                onDidUnregisterWindow.fire(window);\n            }));\n            disposables.add(addDisposableListener(window, EventType.BEFORE_UNLOAD, () => {\n                onWillUnregisterWindow.fire(window);\n            }));\n            onDidRegisterWindow.fire(registeredWindow);\n            return disposables;\n        },\n        getWindows() {\n            return windows.values();\n        },\n        getWindowsCount() {\n            return windows.size;\n        },\n        getWindowId(targetWindow) {\n            return targetWindow.vscodeWindowId;\n        },\n        hasWindow(windowId) {\n            return windows.has(windowId);\n        },\n        getWindowById,\n        getWindow(e) {\n            const candidateNode = e;\n            if (candidateNode?.ownerDocument?.defaultView) {\n                return candidateNode.ownerDocument.defaultView.window;\n            }\n            const candidateEvent = e;\n            if (candidateEvent?.view) {\n                return candidateEvent.view.window;\n            }\n            return mainWindow;\n        },\n        getDocument(e) {\n            const candidateNode = e;\n            return getWindow(candidateNode).document;\n        }\n    };\n})();\n//#endregion\nexport function clearNode(node) {\n    while (node.firstChild) {\n        node.firstChild.remove();\n    }\n}\nclass DomListener {\n    constructor(node, type, handler, options) {\n        this._node = node;\n        this._type = type;\n        this._handler = handler;\n        this._options = (options || false);\n        this._node.addEventListener(this._type, this._handler, this._options);\n    }\n    dispose() {\n        if (!this._handler) {\n            // Already disposed\n            return;\n        }\n        this._node.removeEventListener(this._type, this._handler, this._options);\n        // Prevent leakers from holding on to the dom or handler func\n        this._node = null;\n        this._handler = null;\n    }\n}\nexport function addDisposableListener(node, type, handler, useCaptureOrOptions) {\n    return new DomListener(node, type, handler, useCaptureOrOptions);\n}\nfunction _wrapAsStandardMouseEvent(targetWindow, handler) {\n    return function (e) {\n        return handler(new StandardMouseEvent(targetWindow, e));\n    };\n}\nfunction _wrapAsStandardKeyboardEvent(handler) {\n    return function (e) {\n        return handler(new StandardKeyboardEvent(e));\n    };\n}\nexport const addStandardDisposableListener = function addStandardDisposableListener(node, type, handler, useCapture) {\n    let wrapHandler = handler;\n    if (type === 'click' || type === 'mousedown' || type === 'contextmenu') {\n        wrapHandler = _wrapAsStandardMouseEvent(getWindow(node), handler);\n    }\n    else if (type === 'keydown' || type === 'keypress' || type === 'keyup') {\n        wrapHandler = _wrapAsStandardKeyboardEvent(handler);\n    }\n    return addDisposableListener(node, type, wrapHandler, useCapture);\n};\nexport const addStandardDisposableGenericMouseDownListener = function addStandardDisposableListener(node, handler, useCapture) {\n    const wrapHandler = _wrapAsStandardMouseEvent(getWindow(node), handler);\n    return addDisposableGenericMouseDownListener(node, wrapHandler, useCapture);\n};\nexport const addStandardDisposableGenericMouseUpListener = function addStandardDisposableListener(node, handler, useCapture) {\n    const wrapHandler = _wrapAsStandardMouseEvent(getWindow(node), handler);\n    return addDisposableGenericMouseUpListener(node, wrapHandler, useCapture);\n};\nexport function addDisposableGenericMouseDownListener(node, handler, useCapture) {\n    return addDisposableListener(node, platform.isIOS && BrowserFeatures.pointerEvents ? EventType.POINTER_DOWN : EventType.MOUSE_DOWN, handler, useCapture);\n}\nexport function addDisposableGenericMouseUpListener(node, handler, useCapture) {\n    return addDisposableListener(node, platform.isIOS && BrowserFeatures.pointerEvents ? EventType.POINTER_UP : EventType.MOUSE_UP, handler, useCapture);\n}\n/**\n * Execute the callback the next time the browser is idle, returning an\n * {@link IDisposable} that will cancel the callback when disposed. This wraps\n * [requestIdleCallback] so it will fallback to [setTimeout] if the environment\n * doesn't support it.\n *\n * @param targetWindow The window for which to run the idle callback\n * @param callback The callback to run when idle, this includes an\n * [IdleDeadline] that provides the time alloted for the idle callback by the\n * browser. Not respecting this deadline will result in a degraded user\n * experience.\n * @param timeout A timeout at which point to queue no longer wait for an idle\n * callback but queue it on the regular event loop (like setTimeout). Typically\n * this should not be used.\n *\n * [IdleDeadline]: https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline\n * [requestIdleCallback]: https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback\n * [setTimeout]: https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout\n */\nexport function runWhenWindowIdle(targetWindow, callback, timeout) {\n    return _runWhenIdle(targetWindow, callback, timeout);\n}\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class WindowIdleValue extends AbstractIdleValue {\n    constructor(targetWindow, executor) {\n        super(targetWindow, executor);\n    }\n}\n/**\n * Schedule a callback to be run at the next animation frame.\n * This allows multiple parties to register callbacks that should run at the next animation frame.\n * If currently in an animation frame, `runner` will be executed immediately.\n * @return token that can be used to cancel the scheduled runner (only if `runner` was not executed immediately).\n */\nexport let runAtThisOrScheduleAtNextAnimationFrame;\n/**\n * Schedule a callback to be run at the next animation frame.\n * This allows multiple parties to register callbacks that should run at the next animation frame.\n * If currently in an animation frame, `runner` will be executed at the next animation frame.\n * @return token that can be used to cancel the scheduled runner.\n */\nexport let scheduleAtNextAnimationFrame;\nexport class WindowIntervalTimer extends IntervalTimer {\n    /**\n     *\n     * @param node The optional node from which the target window is determined\n     */\n    constructor(node) {\n        super();\n        this.defaultTarget = node && getWindow(node);\n    }\n    cancelAndSet(runner, interval, targetWindow) {\n        return super.cancelAndSet(runner, interval, targetWindow ?? this.defaultTarget);\n    }\n}\nclass AnimationFrameQueueItem {\n    constructor(runner, priority = 0) {\n        this._runner = runner;\n        this.priority = priority;\n        this._canceled = false;\n    }\n    dispose() {\n        this._canceled = true;\n    }\n    execute() {\n        if (this._canceled) {\n            return;\n        }\n        try {\n            this._runner();\n        }\n        catch (e) {\n            onUnexpectedError(e);\n        }\n    }\n    // Sort by priority (largest to lowest)\n    static sort(a, b) {\n        return b.priority - a.priority;\n    }\n}\n(function () {\n    /**\n     * The runners scheduled at the next animation frame\n     */\n    const NEXT_QUEUE = new Map();\n    /**\n     * The runners scheduled at the current animation frame\n     */\n    const CURRENT_QUEUE = new Map();\n    /**\n     * A flag to keep track if the native requestAnimationFrame was already called\n     */\n    const animFrameRequested = new Map();\n    /**\n     * A flag to indicate if currently handling a native requestAnimationFrame callback\n     */\n    const inAnimationFrameRunner = new Map();\n    const animationFrameRunner = (targetWindowId) => {\n        animFrameRequested.set(targetWindowId, false);\n        const currentQueue = NEXT_QUEUE.get(targetWindowId) ?? [];\n        CURRENT_QUEUE.set(targetWindowId, currentQueue);\n        NEXT_QUEUE.set(targetWindowId, []);\n        inAnimationFrameRunner.set(targetWindowId, true);\n        while (currentQueue.length > 0) {\n            currentQueue.sort(AnimationFrameQueueItem.sort);\n            const top = currentQueue.shift();\n            top.execute();\n        }\n        inAnimationFrameRunner.set(targetWindowId, false);\n    };\n    scheduleAtNextAnimationFrame = (targetWindow, runner, priority = 0) => {\n        const targetWindowId = getWindowId(targetWindow);\n        const item = new AnimationFrameQueueItem(runner, priority);\n        let nextQueue = NEXT_QUEUE.get(targetWindowId);\n        if (!nextQueue) {\n            nextQueue = [];\n            NEXT_QUEUE.set(targetWindowId, nextQueue);\n        }\n        nextQueue.push(item);\n        if (!animFrameRequested.get(targetWindowId)) {\n            animFrameRequested.set(targetWindowId, true);\n            targetWindow.requestAnimationFrame(() => animationFrameRunner(targetWindowId));\n        }\n        return item;\n    };\n    runAtThisOrScheduleAtNextAnimationFrame = (targetWindow, runner, priority) => {\n        const targetWindowId = getWindowId(targetWindow);\n        if (inAnimationFrameRunner.get(targetWindowId)) {\n            const item = new AnimationFrameQueueItem(runner, priority);\n            let currentQueue = CURRENT_QUEUE.get(targetWindowId);\n            if (!currentQueue) {\n                currentQueue = [];\n                CURRENT_QUEUE.set(targetWindowId, currentQueue);\n            }\n            currentQueue.push(item);\n            return item;\n        }\n        else {\n            return scheduleAtNextAnimationFrame(targetWindow, runner, priority);\n        }\n    };\n})();\nexport function getComputedStyle(el) {\n    return getWindow(el).getComputedStyle(el, null);\n}\nexport function getClientArea(element, fallback) {\n    const elWindow = getWindow(element);\n    const elDocument = elWindow.document;\n    // Try with DOM clientWidth / clientHeight\n    if (element !== elDocument.body) {\n        return new Dimension(element.clientWidth, element.clientHeight);\n    }\n    // If visual view port exits and it's on mobile, it should be used instead of window innerWidth / innerHeight, or document.body.clientWidth / document.body.clientHeight\n    if (platform.isIOS && elWindow?.visualViewport) {\n        return new Dimension(elWindow.visualViewport.width, elWindow.visualViewport.height);\n    }\n    // Try innerWidth / innerHeight\n    if (elWindow?.innerWidth && elWindow.innerHeight) {\n        return new Dimension(elWindow.innerWidth, elWindow.innerHeight);\n    }\n    // Try with document.body.clientWidth / document.body.clientHeight\n    if (elDocument.body && elDocument.body.clientWidth && elDocument.body.clientHeight) {\n        return new Dimension(elDocument.body.clientWidth, elDocument.body.clientHeight);\n    }\n    // Try with document.documentElement.clientWidth / document.documentElement.clientHeight\n    if (elDocument.documentElement && elDocument.documentElement.clientWidth && elDocument.documentElement.clientHeight) {\n        return new Dimension(elDocument.documentElement.clientWidth, elDocument.documentElement.clientHeight);\n    }\n    if (fallback) {\n        return getClientArea(fallback);\n    }\n    throw new Error('Unable to figure out browser width and height');\n}\nclass SizeUtils {\n    // Adapted from WinJS\n    // Converts a CSS positioning string for the specified element to pixels.\n    static convertToPixels(element, value) {\n        return parseFloat(value) || 0;\n    }\n    static getDimension(element, cssPropertyName, jsPropertyName) {\n        const computedStyle = getComputedStyle(element);\n        const value = computedStyle ? computedStyle.getPropertyValue(cssPropertyName) : '0';\n        return SizeUtils.convertToPixels(element, value);\n    }\n    static getBorderLeftWidth(element) {\n        return SizeUtils.getDimension(element, 'border-left-width', 'borderLeftWidth');\n    }\n    static getBorderRightWidth(element) {\n        return SizeUtils.getDimension(element, 'border-right-width', 'borderRightWidth');\n    }\n    static getBorderTopWidth(element) {\n        return SizeUtils.getDimension(element, 'border-top-width', 'borderTopWidth');\n    }\n    static getBorderBottomWidth(element) {\n        return SizeUtils.getDimension(element, 'border-bottom-width', 'borderBottomWidth');\n    }\n    static getPaddingLeft(element) {\n        return SizeUtils.getDimension(element, 'padding-left', 'paddingLeft');\n    }\n    static getPaddingRight(element) {\n        return SizeUtils.getDimension(element, 'padding-right', 'paddingRight');\n    }\n    static getPaddingTop(element) {\n        return SizeUtils.getDimension(element, 'padding-top', 'paddingTop');\n    }\n    static getPaddingBottom(element) {\n        return SizeUtils.getDimension(element, 'padding-bottom', 'paddingBottom');\n    }\n    static getMarginLeft(element) {\n        return SizeUtils.getDimension(element, 'margin-left', 'marginLeft');\n    }\n    static getMarginTop(element) {\n        return SizeUtils.getDimension(element, 'margin-top', 'marginTop');\n    }\n    static getMarginRight(element) {\n        return SizeUtils.getDimension(element, 'margin-right', 'marginRight');\n    }\n    static getMarginBottom(element) {\n        return SizeUtils.getDimension(element, 'margin-bottom', 'marginBottom');\n    }\n}\nexport class Dimension {\n    static { this.None = new Dimension(0, 0); }\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    with(width = this.width, height = this.height) {\n        if (width !== this.width || height !== this.height) {\n            return new Dimension(width, height);\n        }\n        else {\n            return this;\n        }\n    }\n    static is(obj) {\n        return typeof obj === 'object' && typeof obj.height === 'number' && typeof obj.width === 'number';\n    }\n    static lift(obj) {\n        if (obj instanceof Dimension) {\n            return obj;\n        }\n        else {\n            return new Dimension(obj.width, obj.height);\n        }\n    }\n    static equals(a, b) {\n        if (a === b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.width === b.width && a.height === b.height;\n    }\n}\nexport function getTopLeftOffset(element) {\n    // Adapted from WinJS.Utilities.getPosition\n    // and added borders to the mix\n    let offsetParent = element.offsetParent;\n    let top = element.offsetTop;\n    let left = element.offsetLeft;\n    while ((element = element.parentNode) !== null\n        && element !== element.ownerDocument.body\n        && element !== element.ownerDocument.documentElement) {\n        top -= element.scrollTop;\n        const c = isShadowRoot(element) ? null : getComputedStyle(element);\n        if (c) {\n            left -= c.direction !== 'rtl' ? element.scrollLeft : -element.scrollLeft;\n        }\n        if (element === offsetParent) {\n            left += SizeUtils.getBorderLeftWidth(element);\n            top += SizeUtils.getBorderTopWidth(element);\n            top += element.offsetTop;\n            left += element.offsetLeft;\n            offsetParent = element.offsetParent;\n        }\n    }\n    return {\n        left: left,\n        top: top\n    };\n}\nexport function size(element, width, height) {\n    if (typeof width === 'number') {\n        element.style.width = `${width}px`;\n    }\n    if (typeof height === 'number') {\n        element.style.height = `${height}px`;\n    }\n}\n/**\n * Returns the position of a dom node relative to the entire page.\n */\nexport function getDomNodePagePosition(domNode) {\n    const bb = domNode.getBoundingClientRect();\n    const window = getWindow(domNode);\n    return {\n        left: bb.left + window.scrollX,\n        top: bb.top + window.scrollY,\n        width: bb.width,\n        height: bb.height\n    };\n}\n/**\n * Returns the effective zoom on a given element before window zoom level is applied\n */\nexport function getDomNodeZoomLevel(domNode) {\n    let testElement = domNode;\n    let zoom = 1.0;\n    do {\n        const elementZoomLevel = getComputedStyle(testElement).zoom;\n        if (elementZoomLevel !== null && elementZoomLevel !== undefined && elementZoomLevel !== '1') {\n            zoom *= elementZoomLevel;\n        }\n        testElement = testElement.parentElement;\n    } while (testElement !== null && testElement !== testElement.ownerDocument.documentElement);\n    return zoom;\n}\n// Adapted from WinJS\n// Gets the width of the element, including margins.\nexport function getTotalWidth(element) {\n    const margin = SizeUtils.getMarginLeft(element) + SizeUtils.getMarginRight(element);\n    return element.offsetWidth + margin;\n}\nexport function getContentWidth(element) {\n    const border = SizeUtils.getBorderLeftWidth(element) + SizeUtils.getBorderRightWidth(element);\n    const padding = SizeUtils.getPaddingLeft(element) + SizeUtils.getPaddingRight(element);\n    return element.offsetWidth - border - padding;\n}\n// Adapted from WinJS\n// Gets the height of the content of the specified element. The content height does not include borders or padding.\nexport function getContentHeight(element) {\n    const border = SizeUtils.getBorderTopWidth(element) + SizeUtils.getBorderBottomWidth(element);\n    const padding = SizeUtils.getPaddingTop(element) + SizeUtils.getPaddingBottom(element);\n    return element.offsetHeight - border - padding;\n}\n// Adapted from WinJS\n// Gets the height of the element, including its margins.\nexport function getTotalHeight(element) {\n    const margin = SizeUtils.getMarginTop(element) + SizeUtils.getMarginBottom(element);\n    return element.offsetHeight + margin;\n}\n// ----------------------------------------------------------------------------------------\nexport function isAncestor(testChild, testAncestor) {\n    return Boolean(testAncestor?.contains(testChild));\n}\nexport function findParentWithClass(node, clazz, stopAtClazzOrNode) {\n    while (node && node.nodeType === node.ELEMENT_NODE) {\n        if (node.classList.contains(clazz)) {\n            return node;\n        }\n        if (stopAtClazzOrNode) {\n            if (typeof stopAtClazzOrNode === 'string') {\n                if (node.classList.contains(stopAtClazzOrNode)) {\n                    return null;\n                }\n            }\n            else {\n                if (node === stopAtClazzOrNode) {\n                    return null;\n                }\n            }\n        }\n        node = node.parentNode;\n    }\n    return null;\n}\nexport function hasParentWithClass(node, clazz, stopAtClazzOrNode) {\n    return !!findParentWithClass(node, clazz, stopAtClazzOrNode);\n}\nexport function isShadowRoot(node) {\n    return (node && !!node.host && !!node.mode);\n}\nexport function isInShadowDOM(domNode) {\n    return !!getShadowRoot(domNode);\n}\nexport function getShadowRoot(domNode) {\n    while (domNode.parentNode) {\n        if (domNode === domNode.ownerDocument?.body) {\n            // reached the body\n            return null;\n        }\n        domNode = domNode.parentNode;\n    }\n    return isShadowRoot(domNode) ? domNode : null;\n}\n/**\n * Returns the active element across all child windows\n * based on document focus. Falls back to the main\n * window if no window has focus.\n */\nexport function getActiveElement() {\n    let result = getActiveDocument().activeElement;\n    while (result?.shadowRoot) {\n        result = result.shadowRoot.activeElement;\n    }\n    return result;\n}\n/**\n * Returns true if the focused window active element matches\n * the provided element. Falls back to the main window if no\n * window has focus.\n */\nexport function isActiveElement(element) {\n    return getActiveElement() === element;\n}\n/**\n * Returns true if the focused window active element is contained in\n * `ancestor`. Falls back to the main window if no window has focus.\n */\nexport function isAncestorOfActiveElement(ancestor) {\n    return isAncestor(getActiveElement(), ancestor);\n}\n/**\n * Returns the active document across main and child windows.\n * Prefers the window with focus, otherwise falls back to\n * the main windows document.\n */\nexport function getActiveDocument() {\n    if (getWindowsCount() <= 1) {\n        return mainWindow.document;\n    }\n    const documents = Array.from(getWindows()).map(({ window }) => window.document);\n    return documents.find(doc => doc.hasFocus()) ?? mainWindow.document;\n}\n/**\n * Returns the active window across main and child windows.\n * Prefers the window with focus, otherwise falls back to\n * the main window.\n */\nexport function getActiveWindow() {\n    const document = getActiveDocument();\n    return (document.defaultView?.window ?? mainWindow);\n}\nconst globalStylesheets = new Map();\n/**\n * A version of createStyleSheet which has a unified API to initialize/set the style content.\n */\nexport function createStyleSheet2() {\n    return new WrappedStyleElement();\n}\nclass WrappedStyleElement {\n    constructor() {\n        this._currentCssStyle = '';\n        this._styleSheet = undefined;\n    }\n    setStyle(cssStyle) {\n        if (cssStyle === this._currentCssStyle) {\n            return;\n        }\n        this._currentCssStyle = cssStyle;\n        if (!this._styleSheet) {\n            this._styleSheet = createStyleSheet(mainWindow.document.head, (s) => s.innerText = cssStyle);\n        }\n        else {\n            this._styleSheet.innerText = cssStyle;\n        }\n    }\n    dispose() {\n        if (this._styleSheet) {\n            this._styleSheet.remove();\n            this._styleSheet = undefined;\n        }\n    }\n}\nexport function createStyleSheet(container = mainWindow.document.head, beforeAppend, disposableStore) {\n    const style = document.createElement('style');\n    style.type = 'text/css';\n    style.media = 'screen';\n    beforeAppend?.(style);\n    container.appendChild(style);\n    if (disposableStore) {\n        disposableStore.add(toDisposable(() => style.remove()));\n    }\n    // With <head> as container, the stylesheet becomes global and is tracked\n    // to support auxiliary windows to clone the stylesheet.\n    if (container === mainWindow.document.head) {\n        const globalStylesheetClones = new Set();\n        globalStylesheets.set(style, globalStylesheetClones);\n        for (const { window: targetWindow, disposables } of getWindows()) {\n            if (targetWindow === mainWindow) {\n                continue; // main window is already tracked\n            }\n            const cloneDisposable = disposables.add(cloneGlobalStyleSheet(style, globalStylesheetClones, targetWindow));\n            disposableStore?.add(cloneDisposable);\n        }\n    }\n    return style;\n}\nfunction cloneGlobalStyleSheet(globalStylesheet, globalStylesheetClones, targetWindow) {\n    const disposables = new DisposableStore();\n    const clone = globalStylesheet.cloneNode(true);\n    targetWindow.document.head.appendChild(clone);\n    disposables.add(toDisposable(() => clone.remove()));\n    for (const rule of getDynamicStyleSheetRules(globalStylesheet)) {\n        clone.sheet?.insertRule(rule.cssText, clone.sheet?.cssRules.length);\n    }\n    disposables.add(sharedMutationObserver.observe(globalStylesheet, disposables, { childList: true })(() => {\n        clone.textContent = globalStylesheet.textContent;\n    }));\n    globalStylesheetClones.add(clone);\n    disposables.add(toDisposable(() => globalStylesheetClones.delete(clone)));\n    return disposables;\n}\nexport const sharedMutationObserver = new class {\n    constructor() {\n        this.mutationObservers = new Map();\n    }\n    observe(target, disposables, options) {\n        let mutationObserversPerTarget = this.mutationObservers.get(target);\n        if (!mutationObserversPerTarget) {\n            mutationObserversPerTarget = new Map();\n            this.mutationObservers.set(target, mutationObserversPerTarget);\n        }\n        const optionsHash = hash(options);\n        let mutationObserverPerOptions = mutationObserversPerTarget.get(optionsHash);\n        if (!mutationObserverPerOptions) {\n            const onDidMutate = new event.Emitter();\n            const observer = new MutationObserver(mutations => onDidMutate.fire(mutations));\n            observer.observe(target, options);\n            const resolvedMutationObserverPerOptions = mutationObserverPerOptions = {\n                users: 1,\n                observer,\n                onDidMutate: onDidMutate.event\n            };\n            disposables.add(toDisposable(() => {\n                resolvedMutationObserverPerOptions.users -= 1;\n                if (resolvedMutationObserverPerOptions.users === 0) {\n                    onDidMutate.dispose();\n                    observer.disconnect();\n                    mutationObserversPerTarget?.delete(optionsHash);\n                    if (mutationObserversPerTarget?.size === 0) {\n                        this.mutationObservers.delete(target);\n                    }\n                }\n            }));\n            mutationObserversPerTarget.set(optionsHash, mutationObserverPerOptions);\n        }\n        else {\n            mutationObserverPerOptions.users += 1;\n        }\n        return mutationObserverPerOptions.onDidMutate;\n    }\n};\nlet _sharedStyleSheet = null;\nfunction getSharedStyleSheet() {\n    if (!_sharedStyleSheet) {\n        _sharedStyleSheet = createStyleSheet();\n    }\n    return _sharedStyleSheet;\n}\nfunction getDynamicStyleSheetRules(style) {\n    if (style?.sheet?.rules) {\n        // Chrome, IE\n        return style.sheet.rules;\n    }\n    if (style?.sheet?.cssRules) {\n        // FF\n        return style.sheet.cssRules;\n    }\n    return [];\n}\nexport function createCSSRule(selector, cssText, style = getSharedStyleSheet()) {\n    if (!style || !cssText) {\n        return;\n    }\n    style.sheet?.insertRule(`${selector} {${cssText}}`, 0);\n    // Apply rule also to all cloned global stylesheets\n    for (const clonedGlobalStylesheet of globalStylesheets.get(style) ?? []) {\n        createCSSRule(selector, cssText, clonedGlobalStylesheet);\n    }\n}\nexport function removeCSSRulesContainingSelector(ruleName, style = getSharedStyleSheet()) {\n    if (!style) {\n        return;\n    }\n    const rules = getDynamicStyleSheetRules(style);\n    const toDelete = [];\n    for (let i = 0; i < rules.length; i++) {\n        const rule = rules[i];\n        if (isCSSStyleRule(rule) && rule.selectorText.indexOf(ruleName) !== -1) {\n            toDelete.push(i);\n        }\n    }\n    for (let i = toDelete.length - 1; i >= 0; i--) {\n        style.sheet?.deleteRule(toDelete[i]);\n    }\n    // Remove rules also from all cloned global stylesheets\n    for (const clonedGlobalStylesheet of globalStylesheets.get(style) ?? []) {\n        removeCSSRulesContainingSelector(ruleName, clonedGlobalStylesheet);\n    }\n}\nfunction isCSSStyleRule(rule) {\n    return typeof rule.selectorText === 'string';\n}\nexport function isHTMLElement(e) {\n    // eslint-disable-next-line no-restricted-syntax\n    return e instanceof HTMLElement || e instanceof getWindow(e).HTMLElement;\n}\nexport function isHTMLAnchorElement(e) {\n    // eslint-disable-next-line no-restricted-syntax\n    return e instanceof HTMLAnchorElement || e instanceof getWindow(e).HTMLAnchorElement;\n}\nexport function isSVGElement(e) {\n    // eslint-disable-next-line no-restricted-syntax\n    return e instanceof SVGElement || e instanceof getWindow(e).SVGElement;\n}\nexport function isMouseEvent(e) {\n    // eslint-disable-next-line no-restricted-syntax\n    return e instanceof MouseEvent || e instanceof getWindow(e).MouseEvent;\n}\nexport function isKeyboardEvent(e) {\n    // eslint-disable-next-line no-restricted-syntax\n    return e instanceof KeyboardEvent || e instanceof getWindow(e).KeyboardEvent;\n}\nexport const EventType = {\n    // Mouse\n    CLICK: 'click',\n    AUXCLICK: 'auxclick',\n    DBLCLICK: 'dblclick',\n    MOUSE_UP: 'mouseup',\n    MOUSE_DOWN: 'mousedown',\n    MOUSE_OVER: 'mouseover',\n    MOUSE_MOVE: 'mousemove',\n    MOUSE_OUT: 'mouseout',\n    MOUSE_ENTER: 'mouseenter',\n    MOUSE_LEAVE: 'mouseleave',\n    MOUSE_WHEEL: 'wheel',\n    POINTER_UP: 'pointerup',\n    POINTER_DOWN: 'pointerdown',\n    POINTER_MOVE: 'pointermove',\n    POINTER_LEAVE: 'pointerleave',\n    CONTEXT_MENU: 'contextmenu',\n    WHEEL: 'wheel',\n    // Keyboard\n    KEY_DOWN: 'keydown',\n    KEY_PRESS: 'keypress',\n    KEY_UP: 'keyup',\n    // HTML Document\n    LOAD: 'load',\n    BEFORE_UNLOAD: 'beforeunload',\n    UNLOAD: 'unload',\n    PAGE_SHOW: 'pageshow',\n    PAGE_HIDE: 'pagehide',\n    PASTE: 'paste',\n    ABORT: 'abort',\n    ERROR: 'error',\n    RESIZE: 'resize',\n    SCROLL: 'scroll',\n    FULLSCREEN_CHANGE: 'fullscreenchange',\n    WK_FULLSCREEN_CHANGE: 'webkitfullscreenchange',\n    // Form\n    SELECT: 'select',\n    CHANGE: 'change',\n    SUBMIT: 'submit',\n    RESET: 'reset',\n    FOCUS: 'focus',\n    FOCUS_IN: 'focusin',\n    FOCUS_OUT: 'focusout',\n    BLUR: 'blur',\n    INPUT: 'input',\n    // Local Storage\n    STORAGE: 'storage',\n    // Drag\n    DRAG_START: 'dragstart',\n    DRAG: 'drag',\n    DRAG_ENTER: 'dragenter',\n    DRAG_LEAVE: 'dragleave',\n    DRAG_OVER: 'dragover',\n    DROP: 'drop',\n    DRAG_END: 'dragend',\n    // Animation\n    ANIMATION_START: browser.isWebKit ? 'webkitAnimationStart' : 'animationstart',\n    ANIMATION_END: browser.isWebKit ? 'webkitAnimationEnd' : 'animationend',\n    ANIMATION_ITERATION: browser.isWebKit ? 'webkitAnimationIteration' : 'animationiteration'\n};\nexport function isEventLike(obj) {\n    const candidate = obj;\n    return !!(candidate && typeof candidate.preventDefault === 'function' && typeof candidate.stopPropagation === 'function');\n}\nexport const EventHelper = {\n    stop: (e, cancelBubble) => {\n        e.preventDefault();\n        if (cancelBubble) {\n            e.stopPropagation();\n        }\n        return e;\n    }\n};\nexport function saveParentsScrollTop(node) {\n    const r = [];\n    for (let i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {\n        r[i] = node.scrollTop;\n        node = node.parentNode;\n    }\n    return r;\n}\nexport function restoreParentsScrollTop(node, state) {\n    for (let i = 0; node && node.nodeType === node.ELEMENT_NODE; i++) {\n        if (node.scrollTop !== state[i]) {\n            node.scrollTop = state[i];\n        }\n        node = node.parentNode;\n    }\n}\nclass FocusTracker extends Disposable {\n    static hasFocusWithin(element) {\n        if (isHTMLElement(element)) {\n            const shadowRoot = getShadowRoot(element);\n            const activeElement = (shadowRoot ? shadowRoot.activeElement : element.ownerDocument.activeElement);\n            return isAncestor(activeElement, element);\n        }\n        else {\n            const window = element;\n            return isAncestor(window.document.activeElement, window.document);\n        }\n    }\n    constructor(element) {\n        super();\n        this._onDidFocus = this._register(new event.Emitter());\n        this.onDidFocus = this._onDidFocus.event;\n        this._onDidBlur = this._register(new event.Emitter());\n        this.onDidBlur = this._onDidBlur.event;\n        let hasFocus = FocusTracker.hasFocusWithin(element);\n        let loosingFocus = false;\n        const onFocus = () => {\n            loosingFocus = false;\n            if (!hasFocus) {\n                hasFocus = true;\n                this._onDidFocus.fire();\n            }\n        };\n        const onBlur = () => {\n            if (hasFocus) {\n                loosingFocus = true;\n                (isHTMLElement(element) ? getWindow(element) : element).setTimeout(() => {\n                    if (loosingFocus) {\n                        loosingFocus = false;\n                        hasFocus = false;\n                        this._onDidBlur.fire();\n                    }\n                }, 0);\n            }\n        };\n        this._refreshStateHandler = () => {\n            const currentNodeHasFocus = FocusTracker.hasFocusWithin(element);\n            if (currentNodeHasFocus !== hasFocus) {\n                if (hasFocus) {\n                    onBlur();\n                }\n                else {\n                    onFocus();\n                }\n            }\n        };\n        this._register(addDisposableListener(element, EventType.FOCUS, onFocus, true));\n        this._register(addDisposableListener(element, EventType.BLUR, onBlur, true));\n        if (isHTMLElement(element)) {\n            this._register(addDisposableListener(element, EventType.FOCUS_IN, () => this._refreshStateHandler()));\n            this._register(addDisposableListener(element, EventType.FOCUS_OUT, () => this._refreshStateHandler()));\n        }\n    }\n}\n/**\n * Creates a new `IFocusTracker` instance that tracks focus changes on the given `element` and its descendants.\n *\n * @param element The `HTMLElement` or `Window` to track focus changes on.\n * @returns An `IFocusTracker` instance.\n */\nexport function trackFocus(element) {\n    return new FocusTracker(element);\n}\nexport function after(sibling, child) {\n    sibling.after(child);\n    return child;\n}\nexport function append(parent, ...children) {\n    parent.append(...children);\n    if (children.length === 1 && typeof children[0] !== 'string') {\n        return children[0];\n    }\n}\nexport function prepend(parent, child) {\n    parent.insertBefore(child, parent.firstChild);\n    return child;\n}\n/**\n * Removes all children from `parent` and appends `children`\n */\nexport function reset(parent, ...children) {\n    parent.innerText = '';\n    append(parent, ...children);\n}\nconst SELECTOR_REGEX = /([\\w\\-]+)?(#([\\w\\-]+))?((\\.([\\w\\-]+))*)/;\nexport var Namespace;\n(function (Namespace) {\n    Namespace[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    Namespace[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n})(Namespace || (Namespace = {}));\nfunction _$(namespace, description, attrs, ...children) {\n    const match = SELECTOR_REGEX.exec(description);\n    if (!match) {\n        throw new Error('Bad use of emmet');\n    }\n    const tagName = match[1] || 'div';\n    let result;\n    if (namespace !== Namespace.HTML) {\n        result = document.createElementNS(namespace, tagName);\n    }\n    else {\n        result = document.createElement(tagName);\n    }\n    if (match[3]) {\n        result.id = match[3];\n    }\n    if (match[4]) {\n        result.className = match[4].replace(/\\./g, ' ').trim();\n    }\n    if (attrs) {\n        Object.entries(attrs).forEach(([name, value]) => {\n            if (typeof value === 'undefined') {\n                return;\n            }\n            if (/^on\\w+$/.test(name)) {\n                result[name] = value;\n            }\n            else if (name === 'selected') {\n                if (value) {\n                    result.setAttribute(name, 'true');\n                }\n            }\n            else {\n                result.setAttribute(name, value);\n            }\n        });\n    }\n    result.append(...children);\n    return result;\n}\nexport function $(description, attrs, ...children) {\n    return _$(Namespace.HTML, description, attrs, ...children);\n}\n$.SVG = function (description, attrs, ...children) {\n    return _$(Namespace.SVG, description, attrs, ...children);\n};\nexport function setVisibility(visible, ...elements) {\n    if (visible) {\n        show(...elements);\n    }\n    else {\n        hide(...elements);\n    }\n}\nexport function show(...elements) {\n    for (const element of elements) {\n        element.style.display = '';\n        element.removeAttribute('aria-hidden');\n    }\n}\nexport function hide(...elements) {\n    for (const element of elements) {\n        element.style.display = 'none';\n        element.setAttribute('aria-hidden', 'true');\n    }\n}\n/**\n * Find a value usable for a dom node size such that the likelihood that it would be\n * displayed with constant screen pixels size is as high as possible.\n *\n * e.g. We would desire for the cursors to be 2px (CSS px) wide. Under a devicePixelRatio\n * of 1.25, the cursor will be 2.5 screen pixels wide. Depending on how the dom node aligns/\"snaps\"\n * with the screen pixels, it will sometimes be rendered with 2 screen pixels, and sometimes with 3 screen pixels.\n */\nexport function computeScreenAwareSize(window, cssPx) {\n    const screenPx = window.devicePixelRatio * cssPx;\n    return Math.max(1, Math.floor(screenPx)) / window.devicePixelRatio;\n}\n/**\n * Open safely a new window. This is the best way to do so, but you cannot tell\n * if the window was opened or if it was blocked by the browser's popup blocker.\n * If you want to tell if the browser blocked the new window, use {@link windowOpenWithSuccess}.\n *\n * See https://github.com/microsoft/monaco-editor/issues/601\n * To protect against malicious code in the linked site, particularly phishing attempts,\n * the window.opener should be set to null to prevent the linked site from having access\n * to change the location of the current page.\n * See https://mathiasbynens.github.io/rel-noopener/\n */\nexport function windowOpenNoOpener(url) {\n    // By using 'noopener' in the `windowFeatures` argument, the newly created window will\n    // not be able to use `window.opener` to reach back to the current page.\n    // See https://stackoverflow.com/a/46958731\n    // See https://developer.mozilla.org/en-US/docs/Web/API/Window/open#noopener\n    // However, this also doesn't allow us to realize if the browser blocked\n    // the creation of the window.\n    mainWindow.open(url, '_blank', 'noopener');\n}\nexport function animate(targetWindow, fn) {\n    const step = () => {\n        fn();\n        stepDisposable = scheduleAtNextAnimationFrame(targetWindow, step);\n    };\n    let stepDisposable = scheduleAtNextAnimationFrame(targetWindow, step);\n    return toDisposable(() => stepDisposable.dispose());\n}\nRemoteAuthorities.setPreferredWebSchema(/^https:/.test(mainWindow.location.href) ? 'https' : 'http');\n/**\n * returns url('...')\n */\nexport function asCSSUrl(uri) {\n    if (!uri) {\n        return `url('')`;\n    }\n    return `url('${FileAccess.uriToBrowserUri(uri).toString(true).replace(/'/g, '%27')}')`;\n}\nexport function asCSSPropertyValue(value) {\n    return `'${value.replace(/'/g, '%27')}'`;\n}\nexport function asCssValueWithDefault(cssPropertyValue, dflt) {\n    if (cssPropertyValue !== undefined) {\n        const variableMatch = cssPropertyValue.match(/^\\s*var\\((.+)\\)$/);\n        if (variableMatch) {\n            const varArguments = variableMatch[1].split(',', 2);\n            if (varArguments.length === 2) {\n                dflt = asCssValueWithDefault(varArguments[1].trim(), dflt);\n            }\n            return `var(${varArguments[0]}, ${dflt})`;\n        }\n        return cssPropertyValue;\n    }\n    return dflt;\n}\n// -- sanitize and trusted html\n/**\n * Hooks dompurify using `afterSanitizeAttributes` to check that all `href` and `src`\n * attributes are valid.\n */\nexport function hookDomPurifyHrefAndSrcSanitizer(allowedProtocols, allowDataImages = false) {\n    // https://github.com/cure53/DOMPurify/blob/main/demos/hooks-scheme-allowlist.html\n    // build an anchor to map URLs to\n    const anchor = document.createElement('a');\n    dompurify.addHook('afterSanitizeAttributes', (node) => {\n        // check all href/src attributes for validity\n        for (const attr of ['href', 'src']) {\n            if (node.hasAttribute(attr)) {\n                const attrValue = node.getAttribute(attr);\n                if (attr === 'href' && attrValue.startsWith('#')) {\n                    // Allow fragment links\n                    continue;\n                }\n                anchor.href = attrValue;\n                if (!allowedProtocols.includes(anchor.protocol.replace(/:$/, ''))) {\n                    if (allowDataImages && attr === 'src' && anchor.href.startsWith('data:')) {\n                        continue;\n                    }\n                    node.removeAttribute(attr);\n                }\n            }\n        }\n    });\n    return toDisposable(() => {\n        dompurify.removeHook('afterSanitizeAttributes');\n    });\n}\n/**\n * List of safe, non-input html tags.\n */\nexport const basicMarkupHtmlTags = Object.freeze([\n    'a',\n    'abbr',\n    'b',\n    'bdo',\n    'blockquote',\n    'br',\n    'caption',\n    'cite',\n    'code',\n    'col',\n    'colgroup',\n    'dd',\n    'del',\n    'details',\n    'dfn',\n    'div',\n    'dl',\n    'dt',\n    'em',\n    'figcaption',\n    'figure',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'hr',\n    'i',\n    'img',\n    'input',\n    'ins',\n    'kbd',\n    'label',\n    'li',\n    'mark',\n    'ol',\n    'p',\n    'pre',\n    'q',\n    'rp',\n    'rt',\n    'ruby',\n    'samp',\n    'small',\n    'small',\n    'source',\n    'span',\n    'strike',\n    'strong',\n    'sub',\n    'summary',\n    'sup',\n    'table',\n    'tbody',\n    'td',\n    'tfoot',\n    'th',\n    'thead',\n    'time',\n    'tr',\n    'tt',\n    'u',\n    'ul',\n    'var',\n    'video',\n    'wbr',\n]);\nconst defaultDomPurifyConfig = Object.freeze({\n    ALLOWED_TAGS: ['a', 'button', 'blockquote', 'code', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'input', 'label', 'li', 'p', 'pre', 'select', 'small', 'span', 'strong', 'textarea', 'ul', 'ol'],\n    ALLOWED_ATTR: ['href', 'data-href', 'data-command', 'target', 'title', 'name', 'src', 'alt', 'class', 'id', 'role', 'tabindex', 'style', 'data-code', 'width', 'height', 'align', 'x-dispatch', 'required', 'checked', 'placeholder', 'type', 'start'],\n    RETURN_DOM: false,\n    RETURN_DOM_FRAGMENT: false,\n    RETURN_TRUSTED_TYPE: true\n});\nexport class ModifierKeyEmitter extends event.Emitter {\n    constructor() {\n        super();\n        this._subscriptions = new DisposableStore();\n        this._keyStatus = {\n            altKey: false,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n        };\n        this._subscriptions.add(event.Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => this.registerListeners(window, disposables), { window: mainWindow, disposables: this._subscriptions }));\n    }\n    registerListeners(window, disposables) {\n        disposables.add(addDisposableListener(window, 'keydown', e => {\n            if (e.defaultPrevented) {\n                return;\n            }\n            const event = new StandardKeyboardEvent(e);\n            // If Alt-key keydown event is repeated, ignore it #112347\n            // Only known to be necessary for Alt-Key at the moment #115810\n            if (event.keyCode === 6 /* KeyCode.Alt */ && e.repeat) {\n                return;\n            }\n            if (e.altKey && !this._keyStatus.altKey) {\n                this._keyStatus.lastKeyPressed = 'alt';\n            }\n            else if (e.ctrlKey && !this._keyStatus.ctrlKey) {\n                this._keyStatus.lastKeyPressed = 'ctrl';\n            }\n            else if (e.metaKey && !this._keyStatus.metaKey) {\n                this._keyStatus.lastKeyPressed = 'meta';\n            }\n            else if (e.shiftKey && !this._keyStatus.shiftKey) {\n                this._keyStatus.lastKeyPressed = 'shift';\n            }\n            else if (event.keyCode !== 6 /* KeyCode.Alt */) {\n                this._keyStatus.lastKeyPressed = undefined;\n            }\n            else {\n                return;\n            }\n            this._keyStatus.altKey = e.altKey;\n            this._keyStatus.ctrlKey = e.ctrlKey;\n            this._keyStatus.metaKey = e.metaKey;\n            this._keyStatus.shiftKey = e.shiftKey;\n            if (this._keyStatus.lastKeyPressed) {\n                this._keyStatus.event = e;\n                this.fire(this._keyStatus);\n            }\n        }, true));\n        disposables.add(addDisposableListener(window, 'keyup', e => {\n            if (e.defaultPrevented) {\n                return;\n            }\n            if (!e.altKey && this._keyStatus.altKey) {\n                this._keyStatus.lastKeyReleased = 'alt';\n            }\n            else if (!e.ctrlKey && this._keyStatus.ctrlKey) {\n                this._keyStatus.lastKeyReleased = 'ctrl';\n            }\n            else if (!e.metaKey && this._keyStatus.metaKey) {\n                this._keyStatus.lastKeyReleased = 'meta';\n            }\n            else if (!e.shiftKey && this._keyStatus.shiftKey) {\n                this._keyStatus.lastKeyReleased = 'shift';\n            }\n            else {\n                this._keyStatus.lastKeyReleased = undefined;\n            }\n            if (this._keyStatus.lastKeyPressed !== this._keyStatus.lastKeyReleased) {\n                this._keyStatus.lastKeyPressed = undefined;\n            }\n            this._keyStatus.altKey = e.altKey;\n            this._keyStatus.ctrlKey = e.ctrlKey;\n            this._keyStatus.metaKey = e.metaKey;\n            this._keyStatus.shiftKey = e.shiftKey;\n            if (this._keyStatus.lastKeyReleased) {\n                this._keyStatus.event = e;\n                this.fire(this._keyStatus);\n            }\n        }, true));\n        disposables.add(addDisposableListener(window.document.body, 'mousedown', () => {\n            this._keyStatus.lastKeyPressed = undefined;\n        }, true));\n        disposables.add(addDisposableListener(window.document.body, 'mouseup', () => {\n            this._keyStatus.lastKeyPressed = undefined;\n        }, true));\n        disposables.add(addDisposableListener(window.document.body, 'mousemove', e => {\n            if (e.buttons) {\n                this._keyStatus.lastKeyPressed = undefined;\n            }\n        }, true));\n        disposables.add(addDisposableListener(window, 'blur', () => {\n            this.resetKeyStatus();\n        }));\n    }\n    get keyStatus() {\n        return this._keyStatus;\n    }\n    /**\n     * Allows to explicitly reset the key status based on more knowledge (#109062)\n     */\n    resetKeyStatus() {\n        this.doResetKeyStatus();\n        this.fire(this._keyStatus);\n    }\n    doResetKeyStatus() {\n        this._keyStatus = {\n            altKey: false,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n        };\n    }\n    static getInstance() {\n        if (!ModifierKeyEmitter.instance) {\n            ModifierKeyEmitter.instance = new ModifierKeyEmitter();\n        }\n        return ModifierKeyEmitter.instance;\n    }\n    dispose() {\n        super.dispose();\n        this._subscriptions.dispose();\n    }\n}\nexport class DragAndDropObserver extends Disposable {\n    constructor(element, callbacks) {\n        super();\n        this.element = element;\n        this.callbacks = callbacks;\n        // A helper to fix issues with repeated DRAG_ENTER / DRAG_LEAVE\n        // calls see https://github.com/microsoft/vscode/issues/14470\n        // when the element has child elements where the events are fired\n        // repeadedly.\n        this.counter = 0;\n        // Allows to measure the duration of the drag operation.\n        this.dragStartTime = 0;\n        this.registerListeners();\n    }\n    registerListeners() {\n        if (this.callbacks.onDragStart) {\n            this._register(addDisposableListener(this.element, EventType.DRAG_START, (e) => {\n                this.callbacks.onDragStart?.(e);\n            }));\n        }\n        if (this.callbacks.onDrag) {\n            this._register(addDisposableListener(this.element, EventType.DRAG, (e) => {\n                this.callbacks.onDrag?.(e);\n            }));\n        }\n        this._register(addDisposableListener(this.element, EventType.DRAG_ENTER, (e) => {\n            this.counter++;\n            this.dragStartTime = e.timeStamp;\n            this.callbacks.onDragEnter?.(e);\n        }));\n        this._register(addDisposableListener(this.element, EventType.DRAG_OVER, (e) => {\n            e.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            this.callbacks.onDragOver?.(e, e.timeStamp - this.dragStartTime);\n        }));\n        this._register(addDisposableListener(this.element, EventType.DRAG_LEAVE, (e) => {\n            this.counter--;\n            if (this.counter === 0) {\n                this.dragStartTime = 0;\n                this.callbacks.onDragLeave?.(e);\n            }\n        }));\n        this._register(addDisposableListener(this.element, EventType.DRAG_END, (e) => {\n            this.counter = 0;\n            this.dragStartTime = 0;\n            this.callbacks.onDragEnd?.(e);\n        }));\n        this._register(addDisposableListener(this.element, EventType.DROP, (e) => {\n            this.counter = 0;\n            this.dragStartTime = 0;\n            this.callbacks.onDrop?.(e);\n        }));\n    }\n}\nconst H_REGEX = /(?<tag>[\\w\\-]+)?(?:#(?<id>[\\w\\-]+))?(?<class>(?:\\.(?:[\\w\\-]+))*)(?:@(?<name>(?:[\\w\\_])+))?/;\nexport function h(tag, ...args) {\n    let attributes;\n    let children;\n    if (Array.isArray(args[0])) {\n        attributes = {};\n        children = args[0];\n    }\n    else {\n        attributes = args[0] || {};\n        children = args[1];\n    }\n    const match = H_REGEX.exec(tag);\n    if (!match || !match.groups) {\n        throw new Error('Bad use of h');\n    }\n    const tagName = match.groups['tag'] || 'div';\n    const el = document.createElement(tagName);\n    if (match.groups['id']) {\n        el.id = match.groups['id'];\n    }\n    const classNames = [];\n    if (match.groups['class']) {\n        for (const className of match.groups['class'].split('.')) {\n            if (className !== '') {\n                classNames.push(className);\n            }\n        }\n    }\n    if (attributes.className !== undefined) {\n        for (const className of attributes.className.split('.')) {\n            if (className !== '') {\n                classNames.push(className);\n            }\n        }\n    }\n    if (classNames.length > 0) {\n        el.className = classNames.join(' ');\n    }\n    const result = {};\n    if (match.groups['name']) {\n        result[match.groups['name']] = el;\n    }\n    if (children) {\n        for (const c of children) {\n            if (isHTMLElement(c)) {\n                el.appendChild(c);\n            }\n            else if (typeof c === 'string') {\n                el.append(c);\n            }\n            else if ('root' in c) {\n                Object.assign(result, c);\n                el.appendChild(c.root);\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n        if (key === 'className') {\n            continue;\n        }\n        else if (key === 'style') {\n            for (const [cssKey, cssValue] of Object.entries(value)) {\n                el.style.setProperty(camelCaseToHyphenCase(cssKey), typeof cssValue === 'number' ? cssValue + 'px' : '' + cssValue);\n            }\n        }\n        else if (key === 'tabIndex') {\n            el.tabIndex = value;\n        }\n        else {\n            el.setAttribute(camelCaseToHyphenCase(key), value.toString());\n        }\n    }\n    result['root'] = el;\n    return result;\n}\nexport function svgElem(tag, ...args) {\n    let attributes;\n    let children;\n    if (Array.isArray(args[0])) {\n        attributes = {};\n        children = args[0];\n    }\n    else {\n        attributes = args[0] || {};\n        children = args[1];\n    }\n    const match = H_REGEX.exec(tag);\n    if (!match || !match.groups) {\n        throw new Error('Bad use of h');\n    }\n    const tagName = match.groups['tag'] || 'div';\n    const el = document.createElementNS('http://www.w3.org/2000/svg', tagName);\n    if (match.groups['id']) {\n        el.id = match.groups['id'];\n    }\n    const classNames = [];\n    if (match.groups['class']) {\n        for (const className of match.groups['class'].split('.')) {\n            if (className !== '') {\n                classNames.push(className);\n            }\n        }\n    }\n    if (attributes.className !== undefined) {\n        for (const className of attributes.className.split('.')) {\n            if (className !== '') {\n                classNames.push(className);\n            }\n        }\n    }\n    if (classNames.length > 0) {\n        el.className = classNames.join(' ');\n    }\n    const result = {};\n    if (match.groups['name']) {\n        result[match.groups['name']] = el;\n    }\n    if (children) {\n        for (const c of children) {\n            if (isHTMLElement(c)) {\n                el.appendChild(c);\n            }\n            else if (typeof c === 'string') {\n                el.append(c);\n            }\n            else if ('root' in c) {\n                Object.assign(result, c);\n                el.appendChild(c.root);\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n        if (key === 'className') {\n            continue;\n        }\n        else if (key === 'style') {\n            for (const [cssKey, cssValue] of Object.entries(value)) {\n                el.style.setProperty(camelCaseToHyphenCase(cssKey), typeof cssValue === 'number' ? cssValue + 'px' : '' + cssValue);\n            }\n        }\n        else if (key === 'tabIndex') {\n            el.tabIndex = value;\n        }\n        else {\n            el.setAttribute(camelCaseToHyphenCase(key), value.toString());\n        }\n    }\n    result['root'] = el;\n    return result;\n}\nfunction camelCaseToHyphenCase(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../../../nls.js';\n// Import the effects we need\nimport { Color, RGBA } from '../../../../base/common/color.js';\nimport { registerColor, oneOf } from '../colorUtils.js';\n// Import the colors we need\nimport { editorWidgetBackground, editorWidgetForeground } from './editorColors.js';\nimport { listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground } from './listColors.js';\nexport const quickInputBackground = registerColor('quickInput.background', editorWidgetBackground, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', editorWidgetForeground, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', null, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', listActiveSelectionForeground, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', listActiveSelectionIconForeground, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nexport function decodeKeybinding(keybinding, OS) {\n    if (typeof keybinding === 'number') {\n        if (keybinding === 0) {\n            return null;\n        }\n        const firstChord = (keybinding & 0x0000FFFF) >>> 0;\n        const secondChord = (keybinding & 0xFFFF0000) >>> 16;\n        if (secondChord !== 0) {\n            return new Keybinding([\n                createSimpleKeybinding(firstChord, OS),\n                createSimpleKeybinding(secondChord, OS)\n            ]);\n        }\n        return new Keybinding([createSimpleKeybinding(firstChord, OS)]);\n    }\n    else {\n        const chords = [];\n        for (let i = 0; i < keybinding.length; i++) {\n            chords.push(createSimpleKeybinding(keybinding[i], OS));\n        }\n        return new Keybinding(chords);\n    }\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* BinaryKeybindingsMask.CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* BinaryKeybindingsMask.WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* OperatingSystem.Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* BinaryKeybindingsMask.Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* BinaryKeybindingsMask.Alt */ ? true : false);\n    const metaKey = (OS === 2 /* OperatingSystem.Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* BinaryKeybindingsMask.KeyCode */);\n    return new KeyCodeChord(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n/**\n * Represents a chord which uses the `keyCode` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class KeyCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (other instanceof KeyCodeChord\n            && this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* KeyCode.Unknown */\n            || this.keyCode === 5 /* KeyCode.Ctrl */\n            || this.keyCode === 57 /* KeyCode.Meta */\n            || this.keyCode === 6 /* KeyCode.Alt */\n            || this.keyCode === 4 /* KeyCode.Shift */);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* KeyCode.Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* KeyCode.Shift */)\n            || (this.altKey && this.keyCode === 6 /* KeyCode.Alt */)\n            || (this.metaKey && this.keyCode === 57 /* KeyCode.Meta */));\n    }\n}\n/**\n * Represents a chord which uses the `code` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class ScanCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, scanCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.scanCode = scanCode;\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && (this.scanCode === 157 /* ScanCode.ControlLeft */ || this.scanCode === 161 /* ScanCode.ControlRight */))\n            || (this.shiftKey && (this.scanCode === 158 /* ScanCode.ShiftLeft */ || this.scanCode === 162 /* ScanCode.ShiftRight */))\n            || (this.altKey && (this.scanCode === 159 /* ScanCode.AltLeft */ || this.scanCode === 163 /* ScanCode.AltRight */))\n            || (this.metaKey && (this.scanCode === 160 /* ScanCode.MetaLeft */ || this.scanCode === 164 /* ScanCode.MetaRight */)));\n    }\n}\n/**\n * A keybinding is a sequence of chords.\n */\nexport class Keybinding {\n    constructor(chords) {\n        if (chords.length === 0) {\n            throw illegalArgument(`chords`);\n        }\n        this.chords = chords;\n    }\n}\nexport class ResolvedChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyLabel, keyAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = keyLabel;\n        this.keyAriaLabel = keyAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Consists of one or multiple chords.\n */\nexport class ResolvedKeybinding {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CursorColumns } from '../core/cursorColumns.js';\nexport class AtomicTabMoveOperations {\n    /**\n     * Get the visible column at the position. If we get to a non-whitespace character first\n     * or past the end of string then return -1.\n     *\n     * **Note** `position` and the return value are 0-based.\n     */\n    static whitespaceVisibleColumn(lineContent, position, tabSize) {\n        const lineLength = lineContent.length;\n        let visibleColumn = 0;\n        let prevTabStopPosition = -1;\n        let prevTabStopVisibleColumn = -1;\n        for (let i = 0; i < lineLength; i++) {\n            if (i === position) {\n                return [prevTabStopPosition, prevTabStopVisibleColumn, visibleColumn];\n            }\n            if (visibleColumn % tabSize === 0) {\n                prevTabStopPosition = i;\n                prevTabStopVisibleColumn = visibleColumn;\n            }\n            const chCode = lineContent.charCodeAt(i);\n            switch (chCode) {\n                case 32 /* CharCode.Space */:\n                    visibleColumn += 1;\n                    break;\n                case 9 /* CharCode.Tab */:\n                    // Skip to the next multiple of tabSize.\n                    visibleColumn = CursorColumns.nextRenderTabStop(visibleColumn, tabSize);\n                    break;\n                default:\n                    return [-1, -1, -1];\n            }\n        }\n        if (position === lineLength) {\n            return [prevTabStopPosition, prevTabStopVisibleColumn, visibleColumn];\n        }\n        return [-1, -1, -1];\n    }\n    /**\n     * Return the position that should result from a move left, right or to the\n     * nearest tab, if atomic tabs are enabled. Left and right are used for the\n     * arrow key movements, nearest is used for mouse selection. It returns\n     * -1 if atomic tabs are not relevant and you should fall back to normal\n     * behaviour.\n     *\n     * **Note**: `position` and the return value are 0-based.\n     */\n    static atomicPosition(lineContent, position, tabSize, direction) {\n        const lineLength = lineContent.length;\n        // Get the 0-based visible column corresponding to the position, or return\n        // -1 if it is not in the initial whitespace.\n        const [prevTabStopPosition, prevTabStopVisibleColumn, visibleColumn] = AtomicTabMoveOperations.whitespaceVisibleColumn(lineContent, position, tabSize);\n        if (visibleColumn === -1) {\n            return -1;\n        }\n        // Is the output left or right of the current position. The case for nearest\n        // where it is the same as the current position is handled in the switch.\n        let left;\n        switch (direction) {\n            case 0 /* Direction.Left */:\n                left = true;\n                break;\n            case 1 /* Direction.Right */:\n                left = false;\n                break;\n            case 2 /* Direction.Nearest */:\n                // The code below assumes the output position is either left or right\n                // of the input position. If it is the same, return immediately.\n                if (visibleColumn % tabSize === 0) {\n                    return position;\n                }\n                // Go to the nearest indentation.\n                left = visibleColumn % tabSize <= (tabSize / 2);\n                break;\n        }\n        // If going left, we can just use the info about the last tab stop position and\n        // last tab stop visible column that we computed in the first walk over the whitespace.\n        if (left) {\n            if (prevTabStopPosition === -1) {\n                return -1;\n            }\n            // If the direction is left, we need to keep scanning right to ensure\n            // that targetVisibleColumn + tabSize is before non-whitespace.\n            // This is so that when we press left at the end of a partial\n            // indentation it only goes one character. For example '      foo' with\n            // tabSize 4, should jump from position 6 to position 5, not 4.\n            let currentVisibleColumn = prevTabStopVisibleColumn;\n            for (let i = prevTabStopPosition; i < lineLength; ++i) {\n                if (currentVisibleColumn === prevTabStopVisibleColumn + tabSize) {\n                    // It is a full indentation.\n                    return prevTabStopPosition;\n                }\n                const chCode = lineContent.charCodeAt(i);\n                switch (chCode) {\n                    case 32 /* CharCode.Space */:\n                        currentVisibleColumn += 1;\n                        break;\n                    case 9 /* CharCode.Tab */:\n                        currentVisibleColumn = CursorColumns.nextRenderTabStop(currentVisibleColumn, tabSize);\n                        break;\n                    default:\n                        return -1;\n                }\n            }\n            if (currentVisibleColumn === prevTabStopVisibleColumn + tabSize) {\n                return prevTabStopPosition;\n            }\n            // It must have been a partial indentation.\n            return -1;\n        }\n        // We are going right.\n        const targetVisibleColumn = CursorColumns.nextRenderTabStop(visibleColumn, tabSize);\n        // We can just continue from where whitespaceVisibleColumn got to.\n        let currentVisibleColumn = visibleColumn;\n        for (let i = position; i < lineLength; i++) {\n            if (currentVisibleColumn === targetVisibleColumn) {\n                return i;\n            }\n            const chCode = lineContent.charCodeAt(i);\n            switch (chCode) {\n                case 32 /* CharCode.Space */:\n                    currentVisibleColumn += 1;\n                    break;\n                case 9 /* CharCode.Tab */:\n                    currentVisibleColumn = CursorColumns.nextRenderTabStop(currentVisibleColumn, tabSize);\n                    break;\n                default:\n                    return -1;\n            }\n        }\n        // This condition handles when the target column is at the end of the line.\n        if (currentVisibleColumn === targetVisibleColumn) {\n            return lineLength;\n        }\n        return -1;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EDITOR_MODEL_DEFAULTS } from '../core/textModelDefaults.js';\nimport { USUAL_WORD_SEPARATORS } from '../core/wordHelper.js';\nimport * as nls from '../../../nls.js';\n/**\n * @internal\n * The width of the minimap gutter, in pixels.\n */\nexport const MINIMAP_GUTTER_WIDTH = 8;\n//#endregion\n/**\n * An event describing that the configuration of the editor has changed.\n */\nexport class ConfigurationChangedEvent {\n    /**\n     * @internal\n     */\n    constructor(values) {\n        this._values = values;\n    }\n    hasChanged(id) {\n        return this._values[id];\n    }\n}\n/**\n * @internal\n */\nexport class ComputeOptionsMemory {\n    constructor() {\n        this.stableMinimapLayoutInput = null;\n        this.stableFitMaxMinimapScale = 0;\n        this.stableFitRemainingWidth = 0;\n    }\n}\n/**\n * @internal\n */\nclass BaseEditorOption {\n    constructor(id, name, defaultValue, schema) {\n        this.id = id;\n        this.name = name;\n        this.defaultValue = defaultValue;\n        this.schema = schema;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    compute(env, options, value) {\n        return value;\n    }\n}\nexport class ApplyUpdateResult {\n    constructor(newValue, didChange) {\n        this.newValue = newValue;\n        this.didChange = didChange;\n    }\n}\nfunction applyUpdate(value, update) {\n    if (typeof value !== 'object' || typeof update !== 'object' || !value || !update) {\n        return new ApplyUpdateResult(update, value !== update);\n    }\n    if (Array.isArray(value) || Array.isArray(update)) {\n        const arrayEquals = Array.isArray(value) && Array.isArray(update) && arrays.equals(value, update);\n        return new ApplyUpdateResult(update, !arrayEquals);\n    }\n    let didChange = false;\n    for (const key in update) {\n        if (update.hasOwnProperty(key)) {\n            const result = applyUpdate(value[key], update[key]);\n            if (result.didChange) {\n                value[key] = result.newValue;\n                didChange = true;\n            }\n        }\n    }\n    return new ApplyUpdateResult(value, didChange);\n}\n/**\n * @internal\n */\nclass ComputedEditorOption {\n    constructor(id) {\n        this.schema = undefined;\n        this.id = id;\n        this.name = '_never_';\n        this.defaultValue = undefined;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    validate(input) {\n        return this.defaultValue;\n    }\n}\nclass SimpleEditorOption {\n    constructor(id, name, defaultValue, schema) {\n        this.id = id;\n        this.name = name;\n        this.defaultValue = defaultValue;\n        this.schema = schema;\n    }\n    applyUpdate(value, update) {\n        return applyUpdate(value, update);\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        return input;\n    }\n    compute(env, options, value) {\n        return value;\n    }\n}\n/**\n * @internal\n */\nexport function boolean(value, defaultValue) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    if (value === 'false') {\n        // treat the string 'false' as false\n        return false;\n    }\n    return Boolean(value);\n}\nclass EditorBooleanOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'boolean';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n    }\n    validate(input) {\n        return boolean(input, this.defaultValue);\n    }\n}\n/**\n * @internal\n */\nexport function clampedInt(value, defaultValue, minimum, maximum) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    let r = parseInt(value, 10);\n    if (isNaN(r)) {\n        return defaultValue;\n    }\n    r = Math.max(minimum, r);\n    r = Math.min(maximum, r);\n    return r | 0;\n}\nclass EditorIntOption extends SimpleEditorOption {\n    static clampedInt(value, defaultValue, minimum, maximum) {\n        return clampedInt(value, defaultValue, minimum, maximum);\n    }\n    constructor(id, name, defaultValue, minimum, maximum, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'integer';\n            schema.default = defaultValue;\n            schema.minimum = minimum;\n            schema.maximum = maximum;\n        }\n        super(id, name, defaultValue, schema);\n        this.minimum = minimum;\n        this.maximum = maximum;\n    }\n    validate(input) {\n        return EditorIntOption.clampedInt(input, this.defaultValue, this.minimum, this.maximum);\n    }\n}\n/**\n * @internal\n */\nexport function clampedFloat(value, defaultValue, minimum, maximum) {\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    const r = EditorFloatOption.float(value, defaultValue);\n    return EditorFloatOption.clamp(r, minimum, maximum);\n}\nclass EditorFloatOption extends SimpleEditorOption {\n    static clamp(n, min, max) {\n        if (n < min) {\n            return min;\n        }\n        if (n > max) {\n            return max;\n        }\n        return n;\n    }\n    static float(value, defaultValue) {\n        if (typeof value === 'number') {\n            return value;\n        }\n        if (typeof value === 'undefined') {\n            return defaultValue;\n        }\n        const r = parseFloat(value);\n        return (isNaN(r) ? defaultValue : r);\n    }\n    constructor(id, name, defaultValue, validationFn, schema) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'number';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n        this.validationFn = validationFn;\n    }\n    validate(input) {\n        return this.validationFn(EditorFloatOption.float(input, this.defaultValue));\n    }\n}\nclass EditorStringOption extends SimpleEditorOption {\n    static string(value, defaultValue) {\n        if (typeof value !== 'string') {\n            return defaultValue;\n        }\n        return value;\n    }\n    constructor(id, name, defaultValue, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n    }\n    validate(input) {\n        return EditorStringOption.string(input, this.defaultValue);\n    }\n}\n/**\n * @internal\n */\nexport function stringSet(value, defaultValue, allowedValues, renamedValues) {\n    if (typeof value !== 'string') {\n        return defaultValue;\n    }\n    if (renamedValues && value in renamedValues) {\n        return renamedValues[value];\n    }\n    if (allowedValues.indexOf(value) === -1) {\n        return defaultValue;\n    }\n    return value;\n}\nclass EditorStringEnumOption extends SimpleEditorOption {\n    constructor(id, name, defaultValue, allowedValues, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.enum = allowedValues;\n            schema.default = defaultValue;\n        }\n        super(id, name, defaultValue, schema);\n        this._allowedValues = allowedValues;\n    }\n    validate(input) {\n        return stringSet(input, this.defaultValue, this._allowedValues);\n    }\n}\nclass EditorEnumOption extends BaseEditorOption {\n    constructor(id, name, defaultValue, defaultStringValue, allowedValues, convert, schema = undefined) {\n        if (typeof schema !== 'undefined') {\n            schema.type = 'string';\n            schema.enum = allowedValues;\n            schema.default = defaultStringValue;\n        }\n        super(id, name, defaultValue, schema);\n        this._allowedValues = allowedValues;\n        this._convert = convert;\n    }\n    validate(input) {\n        if (typeof input !== 'string') {\n            return this.defaultValue;\n        }\n        if (this._allowedValues.indexOf(input) === -1) {\n            return this.defaultValue;\n        }\n        return this._convert(input);\n    }\n}\n//#endregion\n//#region autoIndent\nfunction _autoIndentFromString(autoIndent) {\n    switch (autoIndent) {\n        case 'none': return 0 /* EditorAutoIndentStrategy.None */;\n        case 'keep': return 1 /* EditorAutoIndentStrategy.Keep */;\n        case 'brackets': return 2 /* EditorAutoIndentStrategy.Brackets */;\n        case 'advanced': return 3 /* EditorAutoIndentStrategy.Advanced */;\n        case 'full': return 4 /* EditorAutoIndentStrategy.Full */;\n    }\n}\n//#endregion\n//#region accessibilitySupport\nclass EditorAccessibilitySupport extends BaseEditorOption {\n    constructor() {\n        super(2 /* EditorOption.accessibilitySupport */, 'accessibilitySupport', 0 /* AccessibilitySupport.Unknown */, {\n            type: 'string',\n            enum: ['auto', 'on', 'off'],\n            enumDescriptions: [\n                nls.localize('accessibilitySupport.auto', \"Use platform APIs to detect when a Screen Reader is attached.\"),\n                nls.localize('accessibilitySupport.on', \"Optimize for usage with a Screen Reader.\"),\n                nls.localize('accessibilitySupport.off', \"Assume a screen reader is not attached.\"),\n            ],\n            default: 'auto',\n            tags: ['accessibility'],\n            description: nls.localize('accessibilitySupport', \"Controls if the UI should run in a mode where it is optimized for screen readers.\")\n        });\n    }\n    validate(input) {\n        switch (input) {\n            case 'auto': return 0 /* AccessibilitySupport.Unknown */;\n            case 'off': return 1 /* AccessibilitySupport.Disabled */;\n            case 'on': return 2 /* AccessibilitySupport.Enabled */;\n        }\n        return this.defaultValue;\n    }\n    compute(env, options, value) {\n        if (value === 0 /* AccessibilitySupport.Unknown */) {\n            // The editor reads the `accessibilitySupport` from the environment\n            return env.accessibilitySupport;\n        }\n        return value;\n    }\n}\nclass EditorComments extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            insertSpace: true,\n            ignoreEmptyLines: true,\n        };\n        super(23 /* EditorOption.comments */, 'comments', defaults, {\n            'editor.comments.insertSpace': {\n                type: 'boolean',\n                default: defaults.insertSpace,\n                description: nls.localize('comments.insertSpace', \"Controls whether a space character is inserted when commenting.\")\n            },\n            'editor.comments.ignoreEmptyLines': {\n                type: 'boolean',\n                default: defaults.ignoreEmptyLines,\n                description: nls.localize('comments.ignoreEmptyLines', 'Controls if empty lines should be ignored with toggle, add or remove actions for line comments.')\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            insertSpace: boolean(input.insertSpace, this.defaultValue.insertSpace),\n            ignoreEmptyLines: boolean(input.ignoreEmptyLines, this.defaultValue.ignoreEmptyLines),\n        };\n    }\n}\nfunction _cursorBlinkingStyleFromString(cursorBlinkingStyle) {\n    switch (cursorBlinkingStyle) {\n        case 'blink': return 1 /* TextEditorCursorBlinkingStyle.Blink */;\n        case 'smooth': return 2 /* TextEditorCursorBlinkingStyle.Smooth */;\n        case 'phase': return 3 /* TextEditorCursorBlinkingStyle.Phase */;\n        case 'expand': return 4 /* TextEditorCursorBlinkingStyle.Expand */;\n        case 'solid': return 5 /* TextEditorCursorBlinkingStyle.Solid */;\n    }\n}\n//#endregion\n//#region cursorStyle\n/**\n * The style in which the editor's cursor should be rendered.\n */\nexport var TextEditorCursorStyle;\n(function (TextEditorCursorStyle) {\n    /**\n     * As a vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    /**\n     * As a block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    /**\n     * As a horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    /**\n     * As a thin vertical line (sitting between two characters).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    /**\n     * As an outlined block (sitting on top of a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    /**\n     * As a thin horizontal line (sitting under a character).\n     */\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\nfunction _cursorStyleFromString(cursorStyle) {\n    switch (cursorStyle) {\n        case 'line': return TextEditorCursorStyle.Line;\n        case 'block': return TextEditorCursorStyle.Block;\n        case 'underline': return TextEditorCursorStyle.Underline;\n        case 'line-thin': return TextEditorCursorStyle.LineThin;\n        case 'block-outline': return TextEditorCursorStyle.BlockOutline;\n        case 'underline-thin': return TextEditorCursorStyle.UnderlineThin;\n    }\n}\n//#endregion\n//#region editorClassName\nclass EditorClassName extends ComputedEditorOption {\n    constructor() {\n        super(143 /* EditorOption.editorClassName */);\n    }\n    compute(env, options, _) {\n        const classNames = ['monaco-editor'];\n        if (options.get(39 /* EditorOption.extraEditorClassName */)) {\n            classNames.push(options.get(39 /* EditorOption.extraEditorClassName */));\n        }\n        if (env.extraEditorClassName) {\n            classNames.push(env.extraEditorClassName);\n        }\n        if (options.get(74 /* EditorOption.mouseStyle */) === 'default') {\n            classNames.push('mouse-default');\n        }\n        else if (options.get(74 /* EditorOption.mouseStyle */) === 'copy') {\n            classNames.push('mouse-copy');\n        }\n        if (options.get(112 /* EditorOption.showUnused */)) {\n            classNames.push('showUnused');\n        }\n        if (options.get(141 /* EditorOption.showDeprecated */)) {\n            classNames.push('showDeprecated');\n        }\n        return classNames.join(' ');\n    }\n}\n//#endregion\n//#region emptySelectionClipboard\nclass EditorEmptySelectionClipboard extends EditorBooleanOption {\n    constructor() {\n        super(37 /* EditorOption.emptySelectionClipboard */, 'emptySelectionClipboard', true, { description: nls.localize('emptySelectionClipboard', \"Controls whether copying without a selection copies the current line.\") });\n    }\n    compute(env, options, value) {\n        return value && env.emptySelectionClipboard;\n    }\n}\nclass EditorFind extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            cursorMoveOnType: true,\n            seedSearchStringFromSelection: 'always',\n            autoFindInSelection: 'never',\n            globalFindClipboard: false,\n            addExtraSpaceOnTop: true,\n            loop: true\n        };\n        super(41 /* EditorOption.find */, 'find', defaults, {\n            'editor.find.cursorMoveOnType': {\n                type: 'boolean',\n                default: defaults.cursorMoveOnType,\n                description: nls.localize('find.cursorMoveOnType', \"Controls whether the cursor should jump to find matches while typing.\")\n            },\n            'editor.find.seedSearchStringFromSelection': {\n                type: 'string',\n                enum: ['never', 'always', 'selection'],\n                default: defaults.seedSearchStringFromSelection,\n                enumDescriptions: [\n                    nls.localize('editor.find.seedSearchStringFromSelection.never', 'Never seed search string from the editor selection.'),\n                    nls.localize('editor.find.seedSearchStringFromSelection.always', 'Always seed search string from the editor selection, including word at cursor position.'),\n                    nls.localize('editor.find.seedSearchStringFromSelection.selection', 'Only seed search string from the editor selection.')\n                ],\n                description: nls.localize('find.seedSearchStringFromSelection', \"Controls whether the search string in the Find Widget is seeded from the editor selection.\")\n            },\n            'editor.find.autoFindInSelection': {\n                type: 'string',\n                enum: ['never', 'always', 'multiline'],\n                default: defaults.autoFindInSelection,\n                enumDescriptions: [\n                    nls.localize('editor.find.autoFindInSelection.never', 'Never turn on Find in Selection automatically (default).'),\n                    nls.localize('editor.find.autoFindInSelection.always', 'Always turn on Find in Selection automatically.'),\n                    nls.localize('editor.find.autoFindInSelection.multiline', 'Turn on Find in Selection automatically when multiple lines of content are selected.')\n                ],\n                description: nls.localize('find.autoFindInSelection', \"Controls the condition for turning on Find in Selection automatically.\")\n            },\n            'editor.find.globalFindClipboard': {\n                type: 'boolean',\n                default: defaults.globalFindClipboard,\n                description: nls.localize('find.globalFindClipboard', \"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.\"),\n                included: platform.isMacintosh\n            },\n            'editor.find.addExtraSpaceOnTop': {\n                type: 'boolean',\n                default: defaults.addExtraSpaceOnTop,\n                description: nls.localize('find.addExtraSpaceOnTop', \"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.\")\n            },\n            'editor.find.loop': {\n                type: 'boolean',\n                default: defaults.loop,\n                description: nls.localize('find.loop', \"Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            cursorMoveOnType: boolean(input.cursorMoveOnType, this.defaultValue.cursorMoveOnType),\n            seedSearchStringFromSelection: typeof _input.seedSearchStringFromSelection === 'boolean'\n                ? (_input.seedSearchStringFromSelection ? 'always' : 'never')\n                : stringSet(input.seedSearchStringFromSelection, this.defaultValue.seedSearchStringFromSelection, ['never', 'always', 'selection']),\n            autoFindInSelection: typeof _input.autoFindInSelection === 'boolean'\n                ? (_input.autoFindInSelection ? 'always' : 'never')\n                : stringSet(input.autoFindInSelection, this.defaultValue.autoFindInSelection, ['never', 'always', 'multiline']),\n            globalFindClipboard: boolean(input.globalFindClipboard, this.defaultValue.globalFindClipboard),\n            addExtraSpaceOnTop: boolean(input.addExtraSpaceOnTop, this.defaultValue.addExtraSpaceOnTop),\n            loop: boolean(input.loop, this.defaultValue.loop),\n        };\n    }\n}\n//#endregion\n//#region fontLigatures\n/**\n * @internal\n */\nexport class EditorFontLigatures extends BaseEditorOption {\n    static { this.OFF = '\"liga\" off, \"calt\" off'; }\n    static { this.ON = '\"liga\" on, \"calt\" on'; }\n    constructor() {\n        super(51 /* EditorOption.fontLigatures */, 'fontLigatures', EditorFontLigatures.OFF, {\n            anyOf: [\n                {\n                    type: 'boolean',\n                    description: nls.localize('fontLigatures', \"Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property.\"),\n                },\n                {\n                    type: 'string',\n                    description: nls.localize('fontFeatureSettings', \"Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures.\")\n                }\n            ],\n            description: nls.localize('fontLigaturesGeneral', \"Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.\"),\n            default: false\n        });\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        if (typeof input === 'string') {\n            if (input === 'false' || input.length === 0) {\n                return EditorFontLigatures.OFF;\n            }\n            if (input === 'true') {\n                return EditorFontLigatures.ON;\n            }\n            return input;\n        }\n        if (Boolean(input)) {\n            return EditorFontLigatures.ON;\n        }\n        return EditorFontLigatures.OFF;\n    }\n}\n//#endregion\n//#region fontVariations\n/**\n * @internal\n */\nexport class EditorFontVariations extends BaseEditorOption {\n    // Text is laid out using default settings.\n    static { this.OFF = 'normal'; }\n    // Translate `fontWeight` config to the `font-variation-settings` CSS property.\n    static { this.TRANSLATE = 'translate'; }\n    constructor() {\n        super(54 /* EditorOption.fontVariations */, 'fontVariations', EditorFontVariations.OFF, {\n            anyOf: [\n                {\n                    type: 'boolean',\n                    description: nls.localize('fontVariations', \"Enables/Disables the translation from font-weight to font-variation-settings. Change this to a string for fine-grained control of the 'font-variation-settings' CSS property.\"),\n                },\n                {\n                    type: 'string',\n                    description: nls.localize('fontVariationSettings', \"Explicit 'font-variation-settings' CSS property. A boolean can be passed instead if one only needs to translate font-weight to font-variation-settings.\")\n                }\n            ],\n            description: nls.localize('fontVariationsGeneral', \"Configures font variations. Can be either a boolean to enable/disable the translation from font-weight to font-variation-settings or a string for the value of the CSS 'font-variation-settings' property.\"),\n            default: false\n        });\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        if (typeof input === 'string') {\n            if (input === 'false') {\n                return EditorFontVariations.OFF;\n            }\n            if (input === 'true') {\n                return EditorFontVariations.TRANSLATE;\n            }\n            return input;\n        }\n        if (Boolean(input)) {\n            return EditorFontVariations.TRANSLATE;\n        }\n        return EditorFontVariations.OFF;\n    }\n    compute(env, options, value) {\n        // The value is computed from the fontWeight if it is true.\n        // So take the result from env.fontInfo\n        return env.fontInfo.fontVariationSettings;\n    }\n}\n//#endregion\n//#region fontInfo\nclass EditorFontInfo extends ComputedEditorOption {\n    constructor() {\n        super(50 /* EditorOption.fontInfo */);\n    }\n    compute(env, options, _) {\n        return env.fontInfo;\n    }\n}\n//#endregion\n//#region fontSize\nclass EditorFontSize extends SimpleEditorOption {\n    constructor() {\n        super(52 /* EditorOption.fontSize */, 'fontSize', EDITOR_FONT_DEFAULTS.fontSize, {\n            type: 'number',\n            minimum: 6,\n            maximum: 100,\n            default: EDITOR_FONT_DEFAULTS.fontSize,\n            description: nls.localize('fontSize', \"Controls the font size in pixels.\")\n        });\n    }\n    validate(input) {\n        const r = EditorFloatOption.float(input, this.defaultValue);\n        if (r === 0) {\n            return EDITOR_FONT_DEFAULTS.fontSize;\n        }\n        return EditorFloatOption.clamp(r, 6, 100);\n    }\n    compute(env, options, value) {\n        // The final fontSize respects the editor zoom level.\n        // So take the result from env.fontInfo\n        return env.fontInfo.fontSize;\n    }\n}\n//#endregion\n//#region fontWeight\nclass EditorFontWeight extends BaseEditorOption {\n    static { this.SUGGESTION_VALUES = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900']; }\n    static { this.MINIMUM_VALUE = 1; }\n    static { this.MAXIMUM_VALUE = 1000; }\n    constructor() {\n        super(53 /* EditorOption.fontWeight */, 'fontWeight', EDITOR_FONT_DEFAULTS.fontWeight, {\n            anyOf: [\n                {\n                    type: 'number',\n                    minimum: EditorFontWeight.MINIMUM_VALUE,\n                    maximum: EditorFontWeight.MAXIMUM_VALUE,\n                    errorMessage: nls.localize('fontWeightErrorMessage', \"Only \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000 are allowed.\")\n                },\n                {\n                    type: 'string',\n                    pattern: '^(normal|bold|1000|[1-9][0-9]{0,2})$'\n                },\n                {\n                    enum: EditorFontWeight.SUGGESTION_VALUES\n                }\n            ],\n            default: EDITOR_FONT_DEFAULTS.fontWeight,\n            description: nls.localize('fontWeight', \"Controls the font weight. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.\")\n        });\n    }\n    validate(input) {\n        if (input === 'normal' || input === 'bold') {\n            return input;\n        }\n        return String(EditorIntOption.clampedInt(input, EDITOR_FONT_DEFAULTS.fontWeight, EditorFontWeight.MINIMUM_VALUE, EditorFontWeight.MAXIMUM_VALUE));\n    }\n}\nclass EditorGoToLocation extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            multiple: 'peek',\n            multipleDefinitions: 'peek',\n            multipleTypeDefinitions: 'peek',\n            multipleDeclarations: 'peek',\n            multipleImplementations: 'peek',\n            multipleReferences: 'peek',\n            multipleTests: 'peek',\n            alternativeDefinitionCommand: 'editor.action.goToReferences',\n            alternativeTypeDefinitionCommand: 'editor.action.goToReferences',\n            alternativeDeclarationCommand: 'editor.action.goToReferences',\n            alternativeImplementationCommand: '',\n            alternativeReferenceCommand: '',\n            alternativeTestsCommand: '',\n        };\n        const jsonSubset = {\n            type: 'string',\n            enum: ['peek', 'gotoAndPeek', 'goto'],\n            default: defaults.multiple,\n            enumDescriptions: [\n                nls.localize('editor.gotoLocation.multiple.peek', 'Show Peek view of the results (default)'),\n                nls.localize('editor.gotoLocation.multiple.gotoAndPeek', 'Go to the primary result and show a Peek view'),\n                nls.localize('editor.gotoLocation.multiple.goto', 'Go to the primary result and enable Peek-less navigation to others')\n            ]\n        };\n        const alternativeCommandOptions = ['', 'editor.action.referenceSearch.trigger', 'editor.action.goToReferences', 'editor.action.peekImplementation', 'editor.action.goToImplementation', 'editor.action.peekTypeDefinition', 'editor.action.goToTypeDefinition', 'editor.action.peekDeclaration', 'editor.action.revealDeclaration', 'editor.action.peekDefinition', 'editor.action.revealDefinitionAside', 'editor.action.revealDefinition'];\n        super(58 /* EditorOption.gotoLocation */, 'gotoLocation', defaults, {\n            'editor.gotoLocation.multiple': {\n                deprecationMessage: nls.localize('editor.gotoLocation.multiple.deprecated', \"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.\"),\n            },\n            'editor.gotoLocation.multipleDefinitions': {\n                description: nls.localize('editor.editor.gotoLocation.multipleDefinitions', \"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.\"),\n                ...jsonSubset,\n            },\n            'editor.gotoLocation.multipleTypeDefinitions': {\n                description: nls.localize('editor.editor.gotoLocation.multipleTypeDefinitions', \"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.\"),\n                ...jsonSubset,\n            },\n            'editor.gotoLocation.multipleDeclarations': {\n                description: nls.localize('editor.editor.gotoLocation.multipleDeclarations', \"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.\"),\n                ...jsonSubset,\n            },\n            'editor.gotoLocation.multipleImplementations': {\n                description: nls.localize('editor.editor.gotoLocation.multipleImplemenattions', \"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.\"),\n                ...jsonSubset,\n            },\n            'editor.gotoLocation.multipleReferences': {\n                description: nls.localize('editor.editor.gotoLocation.multipleReferences', \"Controls the behavior the 'Go to References'-command when multiple target locations exist.\"),\n                ...jsonSubset,\n            },\n            'editor.gotoLocation.alternativeDefinitionCommand': {\n                type: 'string',\n                default: defaults.alternativeDefinitionCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeTypeDefinitionCommand': {\n                type: 'string',\n                default: defaults.alternativeTypeDefinitionCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeTypeDefinitionCommand', \"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeDeclarationCommand': {\n                type: 'string',\n                default: defaults.alternativeDeclarationCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeDeclarationCommand', \"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeImplementationCommand': {\n                type: 'string',\n                default: defaults.alternativeImplementationCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeImplementationCommand', \"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.\")\n            },\n            'editor.gotoLocation.alternativeReferenceCommand': {\n                type: 'string',\n                default: defaults.alternativeReferenceCommand,\n                enum: alternativeCommandOptions,\n                description: nls.localize('alternativeReferenceCommand', \"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            multiple: stringSet(input.multiple, this.defaultValue.multiple, ['peek', 'gotoAndPeek', 'goto']),\n            multipleDefinitions: input.multipleDefinitions ?? stringSet(input.multipleDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleTypeDefinitions: input.multipleTypeDefinitions ?? stringSet(input.multipleTypeDefinitions, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleDeclarations: input.multipleDeclarations ?? stringSet(input.multipleDeclarations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleImplementations: input.multipleImplementations ?? stringSet(input.multipleImplementations, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleReferences: input.multipleReferences ?? stringSet(input.multipleReferences, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            multipleTests: input.multipleTests ?? stringSet(input.multipleTests, 'peek', ['peek', 'gotoAndPeek', 'goto']),\n            alternativeDefinitionCommand: EditorStringOption.string(input.alternativeDefinitionCommand, this.defaultValue.alternativeDefinitionCommand),\n            alternativeTypeDefinitionCommand: EditorStringOption.string(input.alternativeTypeDefinitionCommand, this.defaultValue.alternativeTypeDefinitionCommand),\n            alternativeDeclarationCommand: EditorStringOption.string(input.alternativeDeclarationCommand, this.defaultValue.alternativeDeclarationCommand),\n            alternativeImplementationCommand: EditorStringOption.string(input.alternativeImplementationCommand, this.defaultValue.alternativeImplementationCommand),\n            alternativeReferenceCommand: EditorStringOption.string(input.alternativeReferenceCommand, this.defaultValue.alternativeReferenceCommand),\n            alternativeTestsCommand: EditorStringOption.string(input.alternativeTestsCommand, this.defaultValue.alternativeTestsCommand),\n        };\n    }\n}\nclass EditorHover extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            delay: 300,\n            hidingDelay: 300,\n            sticky: true,\n            above: true,\n        };\n        super(60 /* EditorOption.hover */, 'hover', defaults, {\n            'editor.hover.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('hover.enabled', \"Controls whether the hover is shown.\")\n            },\n            'editor.hover.delay': {\n                type: 'number',\n                default: defaults.delay,\n                minimum: 0,\n                maximum: 10000,\n                description: nls.localize('hover.delay', \"Controls the delay in milliseconds after which the hover is shown.\")\n            },\n            'editor.hover.sticky': {\n                type: 'boolean',\n                default: defaults.sticky,\n                description: nls.localize('hover.sticky', \"Controls whether the hover should remain visible when mouse is moved over it.\")\n            },\n            'editor.hover.hidingDelay': {\n                type: 'integer',\n                minimum: 0,\n                default: defaults.hidingDelay,\n                description: nls.localize('hover.hidingDelay', \"Controls the delay in milliseconds after which the hover is hidden. Requires `editor.hover.sticky` to be enabled.\")\n            },\n            'editor.hover.above': {\n                type: 'boolean',\n                default: defaults.above,\n                description: nls.localize('hover.above', \"Prefer showing hovers above the line, if there's space.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            delay: EditorIntOption.clampedInt(input.delay, this.defaultValue.delay, 0, 10000),\n            sticky: boolean(input.sticky, this.defaultValue.sticky),\n            hidingDelay: EditorIntOption.clampedInt(input.hidingDelay, this.defaultValue.hidingDelay, 0, 600000),\n            above: boolean(input.above, this.defaultValue.above),\n        };\n    }\n}\n/**\n * @internal\n */\nexport class EditorLayoutInfoComputer extends ComputedEditorOption {\n    constructor() {\n        super(146 /* EditorOption.layoutInfo */);\n    }\n    compute(env, options, _) {\n        return EditorLayoutInfoComputer.computeLayout(options, {\n            memory: env.memory,\n            outerWidth: env.outerWidth,\n            outerHeight: env.outerHeight,\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            lineHeight: env.fontInfo.lineHeight,\n            viewLineCount: env.viewLineCount,\n            lineNumbersDigitCount: env.lineNumbersDigitCount,\n            typicalHalfwidthCharacterWidth: env.fontInfo.typicalHalfwidthCharacterWidth,\n            maxDigitWidth: env.fontInfo.maxDigitWidth,\n            pixelRatio: env.pixelRatio,\n            glyphMarginDecorationLaneCount: env.glyphMarginDecorationLaneCount\n        });\n    }\n    static computeContainedMinimapLineCount(input) {\n        const typicalViewportLineCount = input.height / input.lineHeight;\n        const extraLinesBeforeFirstLine = Math.floor(input.paddingTop / input.lineHeight);\n        let extraLinesBeyondLastLine = Math.floor(input.paddingBottom / input.lineHeight);\n        if (input.scrollBeyondLastLine) {\n            extraLinesBeyondLastLine = Math.max(extraLinesBeyondLastLine, typicalViewportLineCount - 1);\n        }\n        const desiredRatio = (extraLinesBeforeFirstLine + input.viewLineCount + extraLinesBeyondLastLine) / (input.pixelRatio * input.height);\n        const minimapLineCount = Math.floor(input.viewLineCount / desiredRatio);\n        return { typicalViewportLineCount, extraLinesBeforeFirstLine, extraLinesBeyondLastLine, desiredRatio, minimapLineCount };\n    }\n    static _computeMinimapLayout(input, memory) {\n        const outerWidth = input.outerWidth;\n        const outerHeight = input.outerHeight;\n        const pixelRatio = input.pixelRatio;\n        if (!input.minimap.enabled) {\n            return {\n                renderMinimap: 0 /* RenderMinimap.None */,\n                minimapLeft: 0,\n                minimapWidth: 0,\n                minimapHeightIsEditorHeight: false,\n                minimapIsSampling: false,\n                minimapScale: 1,\n                minimapLineHeight: 1,\n                minimapCanvasInnerWidth: 0,\n                minimapCanvasInnerHeight: Math.floor(pixelRatio * outerHeight),\n                minimapCanvasOuterWidth: 0,\n                minimapCanvasOuterHeight: outerHeight,\n            };\n        }\n        // Can use memory if only the `viewLineCount` and `remainingWidth` have changed\n        const stableMinimapLayoutInput = memory.stableMinimapLayoutInput;\n        const couldUseMemory = (stableMinimapLayoutInput\n            // && input.outerWidth === lastMinimapLayoutInput.outerWidth !!! INTENTIONAL OMITTED\n            && input.outerHeight === stableMinimapLayoutInput.outerHeight\n            && input.lineHeight === stableMinimapLayoutInput.lineHeight\n            && input.typicalHalfwidthCharacterWidth === stableMinimapLayoutInput.typicalHalfwidthCharacterWidth\n            && input.pixelRatio === stableMinimapLayoutInput.pixelRatio\n            && input.scrollBeyondLastLine === stableMinimapLayoutInput.scrollBeyondLastLine\n            && input.paddingTop === stableMinimapLayoutInput.paddingTop\n            && input.paddingBottom === stableMinimapLayoutInput.paddingBottom\n            && input.minimap.enabled === stableMinimapLayoutInput.minimap.enabled\n            && input.minimap.side === stableMinimapLayoutInput.minimap.side\n            && input.minimap.size === stableMinimapLayoutInput.minimap.size\n            && input.minimap.showSlider === stableMinimapLayoutInput.minimap.showSlider\n            && input.minimap.renderCharacters === stableMinimapLayoutInput.minimap.renderCharacters\n            && input.minimap.maxColumn === stableMinimapLayoutInput.minimap.maxColumn\n            && input.minimap.scale === stableMinimapLayoutInput.minimap.scale\n            && input.verticalScrollbarWidth === stableMinimapLayoutInput.verticalScrollbarWidth\n            // && input.viewLineCount === lastMinimapLayoutInput.viewLineCount !!! INTENTIONAL OMITTED\n            // && input.remainingWidth === lastMinimapLayoutInput.remainingWidth !!! INTENTIONAL OMITTED\n            && input.isViewportWrapping === stableMinimapLayoutInput.isViewportWrapping);\n        const lineHeight = input.lineHeight;\n        const typicalHalfwidthCharacterWidth = input.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastLine = input.scrollBeyondLastLine;\n        const minimapRenderCharacters = input.minimap.renderCharacters;\n        let minimapScale = (pixelRatio >= 2 ? Math.round(input.minimap.scale * 2) : input.minimap.scale);\n        const minimapMaxColumn = input.minimap.maxColumn;\n        const minimapSize = input.minimap.size;\n        const minimapSide = input.minimap.side;\n        const verticalScrollbarWidth = input.verticalScrollbarWidth;\n        const viewLineCount = input.viewLineCount;\n        const remainingWidth = input.remainingWidth;\n        const isViewportWrapping = input.isViewportWrapping;\n        const baseCharHeight = minimapRenderCharacters ? 2 : 3;\n        let minimapCanvasInnerHeight = Math.floor(pixelRatio * outerHeight);\n        const minimapCanvasOuterHeight = minimapCanvasInnerHeight / pixelRatio;\n        let minimapHeightIsEditorHeight = false;\n        let minimapIsSampling = false;\n        let minimapLineHeight = baseCharHeight * minimapScale;\n        let minimapCharWidth = minimapScale / pixelRatio;\n        let minimapWidthMultiplier = 1;\n        if (minimapSize === 'fill' || minimapSize === 'fit') {\n            const { typicalViewportLineCount, extraLinesBeforeFirstLine, extraLinesBeyondLastLine, desiredRatio, minimapLineCount } = EditorLayoutInfoComputer.computeContainedMinimapLineCount({\n                viewLineCount: viewLineCount,\n                scrollBeyondLastLine: scrollBeyondLastLine,\n                paddingTop: input.paddingTop,\n                paddingBottom: input.paddingBottom,\n                height: outerHeight,\n                lineHeight: lineHeight,\n                pixelRatio: pixelRatio\n            });\n            // ratio is intentionally not part of the layout to avoid the layout changing all the time\n            // when doing sampling\n            const ratio = viewLineCount / minimapLineCount;\n            if (ratio > 1) {\n                minimapHeightIsEditorHeight = true;\n                minimapIsSampling = true;\n                minimapScale = 1;\n                minimapLineHeight = 1;\n                minimapCharWidth = minimapScale / pixelRatio;\n            }\n            else {\n                let fitBecomesFill = false;\n                let maxMinimapScale = minimapScale + 1;\n                if (minimapSize === 'fit') {\n                    const effectiveMinimapHeight = Math.ceil((extraLinesBeforeFirstLine + viewLineCount + extraLinesBeyondLastLine) * minimapLineHeight);\n                    if (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n                        // There is a loop when using `fit` and viewport wrapping:\n                        // - view line count impacts minimap layout\n                        // - minimap layout impacts viewport width\n                        // - viewport width impacts view line count\n                        // To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n                        fitBecomesFill = true;\n                        maxMinimapScale = memory.stableFitMaxMinimapScale;\n                    }\n                    else {\n                        fitBecomesFill = (effectiveMinimapHeight > minimapCanvasInnerHeight);\n                    }\n                }\n                if (minimapSize === 'fill' || fitBecomesFill) {\n                    minimapHeightIsEditorHeight = true;\n                    const configuredMinimapScale = minimapScale;\n                    minimapLineHeight = Math.min(lineHeight * pixelRatio, Math.max(1, Math.floor(1 / desiredRatio)));\n                    if (isViewportWrapping && couldUseMemory && remainingWidth <= memory.stableFitRemainingWidth) {\n                        // There is a loop when using `fill` and viewport wrapping:\n                        // - view line count impacts minimap layout\n                        // - minimap layout impacts viewport width\n                        // - viewport width impacts view line count\n                        // To break the loop, once we go to a smaller minimap scale, we try to stick with it.\n                        maxMinimapScale = memory.stableFitMaxMinimapScale;\n                    }\n                    minimapScale = Math.min(maxMinimapScale, Math.max(1, Math.floor(minimapLineHeight / baseCharHeight)));\n                    if (minimapScale > configuredMinimapScale) {\n                        minimapWidthMultiplier = Math.min(2, minimapScale / configuredMinimapScale);\n                    }\n                    minimapCharWidth = minimapScale / pixelRatio / minimapWidthMultiplier;\n                    minimapCanvasInnerHeight = Math.ceil((Math.max(typicalViewportLineCount, extraLinesBeforeFirstLine + viewLineCount + extraLinesBeyondLastLine)) * minimapLineHeight);\n                    if (isViewportWrapping) {\n                        // remember for next time\n                        memory.stableMinimapLayoutInput = input;\n                        memory.stableFitRemainingWidth = remainingWidth;\n                        memory.stableFitMaxMinimapScale = minimapScale;\n                    }\n                    else {\n                        memory.stableMinimapLayoutInput = null;\n                        memory.stableFitRemainingWidth = 0;\n                    }\n                }\n            }\n        }\n        // Given:\n        // (leaving 2px for the cursor to have space after the last character)\n        // viewportColumn = (contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth\n        // minimapWidth = viewportColumn * minimapCharWidth\n        // contentWidth = remainingWidth - minimapWidth\n        // What are good values for contentWidth and minimapWidth ?\n        // minimapWidth = ((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth) * minimapCharWidth\n        // typicalHalfwidthCharacterWidth * minimapWidth = (contentWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // typicalHalfwidthCharacterWidth * minimapWidth = (remainingWidth - minimapWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // (typicalHalfwidthCharacterWidth + minimapCharWidth) * minimapWidth = (remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth\n        // minimapWidth = ((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth)\n        const minimapMaxWidth = Math.floor(minimapMaxColumn * minimapCharWidth);\n        const minimapWidth = Math.min(minimapMaxWidth, Math.max(0, Math.floor(((remainingWidth - verticalScrollbarWidth - 2) * minimapCharWidth) / (typicalHalfwidthCharacterWidth + minimapCharWidth))) + MINIMAP_GUTTER_WIDTH);\n        let minimapCanvasInnerWidth = Math.floor(pixelRatio * minimapWidth);\n        const minimapCanvasOuterWidth = minimapCanvasInnerWidth / pixelRatio;\n        minimapCanvasInnerWidth = Math.floor(minimapCanvasInnerWidth * minimapWidthMultiplier);\n        const renderMinimap = (minimapRenderCharacters ? 1 /* RenderMinimap.Text */ : 2 /* RenderMinimap.Blocks */);\n        const minimapLeft = (minimapSide === 'left' ? 0 : (outerWidth - minimapWidth - verticalScrollbarWidth));\n        return {\n            renderMinimap,\n            minimapLeft,\n            minimapWidth,\n            minimapHeightIsEditorHeight,\n            minimapIsSampling,\n            minimapScale,\n            minimapLineHeight,\n            minimapCanvasInnerWidth,\n            minimapCanvasInnerHeight,\n            minimapCanvasOuterWidth,\n            minimapCanvasOuterHeight,\n        };\n    }\n    static computeLayout(options, env) {\n        const outerWidth = env.outerWidth | 0;\n        const outerHeight = env.outerHeight | 0;\n        const lineHeight = env.lineHeight | 0;\n        const lineNumbersDigitCount = env.lineNumbersDigitCount | 0;\n        const typicalHalfwidthCharacterWidth = env.typicalHalfwidthCharacterWidth;\n        const maxDigitWidth = env.maxDigitWidth;\n        const pixelRatio = env.pixelRatio;\n        const viewLineCount = env.viewLineCount;\n        const wordWrapOverride2 = options.get(138 /* EditorOption.wordWrapOverride2 */);\n        const wordWrapOverride1 = (wordWrapOverride2 === 'inherit' ? options.get(137 /* EditorOption.wordWrapOverride1 */) : wordWrapOverride2);\n        const wordWrap = (wordWrapOverride1 === 'inherit' ? options.get(133 /* EditorOption.wordWrap */) : wordWrapOverride1);\n        const wordWrapColumn = options.get(136 /* EditorOption.wordWrapColumn */);\n        const isDominatedByLongLines = env.isDominatedByLongLines;\n        const showGlyphMargin = options.get(57 /* EditorOption.glyphMargin */);\n        const showLineNumbers = (options.get(68 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */);\n        const lineNumbersMinChars = options.get(69 /* EditorOption.lineNumbersMinChars */);\n        const scrollBeyondLastLine = options.get(106 /* EditorOption.scrollBeyondLastLine */);\n        const padding = options.get(84 /* EditorOption.padding */);\n        const minimap = options.get(73 /* EditorOption.minimap */);\n        const scrollbar = options.get(104 /* EditorOption.scrollbar */);\n        const verticalScrollbarWidth = scrollbar.verticalScrollbarSize;\n        const verticalScrollbarHasArrows = scrollbar.verticalHasArrows;\n        const scrollbarArrowSize = scrollbar.arrowSize;\n        const horizontalScrollbarHeight = scrollbar.horizontalScrollbarSize;\n        const folding = options.get(43 /* EditorOption.folding */);\n        const showFoldingDecoration = options.get(111 /* EditorOption.showFoldingControls */) !== 'never';\n        let lineDecorationsWidth = options.get(66 /* EditorOption.lineDecorationsWidth */);\n        if (folding && showFoldingDecoration) {\n            lineDecorationsWidth += 16;\n        }\n        let lineNumbersWidth = 0;\n        if (showLineNumbers) {\n            const digitCount = Math.max(lineNumbersDigitCount, lineNumbersMinChars);\n            lineNumbersWidth = Math.round(digitCount * maxDigitWidth);\n        }\n        let glyphMarginWidth = 0;\n        if (showGlyphMargin) {\n            glyphMarginWidth = lineHeight * env.glyphMarginDecorationLaneCount;\n        }\n        let glyphMarginLeft = 0;\n        let lineNumbersLeft = glyphMarginLeft + glyphMarginWidth;\n        let decorationsLeft = lineNumbersLeft + lineNumbersWidth;\n        let contentLeft = decorationsLeft + lineDecorationsWidth;\n        const remainingWidth = outerWidth - glyphMarginWidth - lineNumbersWidth - lineDecorationsWidth;\n        let isWordWrapMinified = false;\n        let isViewportWrapping = false;\n        let wrappingColumn = -1;\n        if (wordWrapOverride1 === 'inherit' && isDominatedByLongLines) {\n            // Force viewport width wrapping if model is dominated by long lines\n            isWordWrapMinified = true;\n            isViewportWrapping = true;\n        }\n        else if (wordWrap === 'on' || wordWrap === 'bounded') {\n            isViewportWrapping = true;\n        }\n        else if (wordWrap === 'wordWrapColumn') {\n            wrappingColumn = wordWrapColumn;\n        }\n        const minimapLayout = EditorLayoutInfoComputer._computeMinimapLayout({\n            outerWidth: outerWidth,\n            outerHeight: outerHeight,\n            lineHeight: lineHeight,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacterWidth,\n            pixelRatio: pixelRatio,\n            scrollBeyondLastLine: scrollBeyondLastLine,\n            paddingTop: padding.top,\n            paddingBottom: padding.bottom,\n            minimap: minimap,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            viewLineCount: viewLineCount,\n            remainingWidth: remainingWidth,\n            isViewportWrapping: isViewportWrapping,\n        }, env.memory || new ComputeOptionsMemory());\n        if (minimapLayout.renderMinimap !== 0 /* RenderMinimap.None */ && minimapLayout.minimapLeft === 0) {\n            // the minimap is rendered to the left, so move everything to the right\n            glyphMarginLeft += minimapLayout.minimapWidth;\n            lineNumbersLeft += minimapLayout.minimapWidth;\n            decorationsLeft += minimapLayout.minimapWidth;\n            contentLeft += minimapLayout.minimapWidth;\n        }\n        const contentWidth = remainingWidth - minimapLayout.minimapWidth;\n        // (leaving 2px for the cursor to have space after the last character)\n        const viewportColumn = Math.max(1, Math.floor((contentWidth - verticalScrollbarWidth - 2) / typicalHalfwidthCharacterWidth));\n        const verticalArrowSize = (verticalScrollbarHasArrows ? scrollbarArrowSize : 0);\n        if (isViewportWrapping) {\n            // compute the actual wrappingColumn\n            wrappingColumn = Math.max(1, viewportColumn);\n            if (wordWrap === 'bounded') {\n                wrappingColumn = Math.min(wrappingColumn, wordWrapColumn);\n            }\n        }\n        return {\n            width: outerWidth,\n            height: outerHeight,\n            glyphMarginLeft: glyphMarginLeft,\n            glyphMarginWidth: glyphMarginWidth,\n            glyphMarginDecorationLaneCount: env.glyphMarginDecorationLaneCount,\n            lineNumbersLeft: lineNumbersLeft,\n            lineNumbersWidth: lineNumbersWidth,\n            decorationsLeft: decorationsLeft,\n            decorationsWidth: lineDecorationsWidth,\n            contentLeft: contentLeft,\n            contentWidth: contentWidth,\n            minimap: minimapLayout,\n            viewportColumn: viewportColumn,\n            isWordWrapMinified: isWordWrapMinified,\n            isViewportWrapping: isViewportWrapping,\n            wrappingColumn: wrappingColumn,\n            verticalScrollbarWidth: verticalScrollbarWidth,\n            horizontalScrollbarHeight: horizontalScrollbarHeight,\n            overviewRuler: {\n                top: verticalArrowSize,\n                width: verticalScrollbarWidth,\n                height: (outerHeight - 2 * verticalArrowSize),\n                right: 0\n            }\n        };\n    }\n}\n//#endregion\n//#region WrappingStrategy\nclass WrappingStrategy extends BaseEditorOption {\n    constructor() {\n        super(140 /* EditorOption.wrappingStrategy */, 'wrappingStrategy', 'simple', {\n            'editor.wrappingStrategy': {\n                enumDescriptions: [\n                    nls.localize('wrappingStrategy.simple', \"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.\"),\n                    nls.localize('wrappingStrategy.advanced', \"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.\")\n                ],\n                type: 'string',\n                enum: ['simple', 'advanced'],\n                default: 'simple',\n                description: nls.localize('wrappingStrategy', \"Controls the algorithm that computes wrapping points. Note that when in accessibility mode, advanced will be used for the best experience.\")\n            }\n        });\n    }\n    validate(input) {\n        return stringSet(input, 'simple', ['simple', 'advanced']);\n    }\n    compute(env, options, value) {\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 2 /* AccessibilitySupport.Enabled */) {\n            // if we know for a fact that a screen reader is attached, we switch our strategy to advanced to\n            // help that the editor's wrapping points match the textarea's wrapping points\n            return 'advanced';\n        }\n        return value;\n    }\n}\n//#endregion\n//#region lightbulb\nexport var ShowLightbulbIconMode;\n(function (ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {}));\nclass EditorLightbulb extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: ShowLightbulbIconMode.OnCode };\n        super(65 /* EditorOption.lightbulb */, 'lightbulb', defaults, {\n            'editor.lightbulb.enabled': {\n                type: 'string',\n                tags: ['experimental'],\n                enum: [ShowLightbulbIconMode.Off, ShowLightbulbIconMode.OnCode, ShowLightbulbIconMode.On],\n                default: defaults.enabled,\n                enumDescriptions: [\n                    nls.localize('editor.lightbulb.enabled.off', 'Disable the code action menu.'),\n                    nls.localize('editor.lightbulb.enabled.onCode', 'Show the code action menu when the cursor is on lines with code.'),\n                    nls.localize('editor.lightbulb.enabled.on', 'Show the code action menu when the cursor is on lines with code or on empty lines.'),\n                ],\n                description: nls.localize('enabled', \"Enables the Code Action lightbulb in the editor.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: stringSet(input.enabled, this.defaultValue.enabled, [ShowLightbulbIconMode.Off, ShowLightbulbIconMode.OnCode, ShowLightbulbIconMode.On])\n        };\n    }\n}\nclass EditorStickyScroll extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true, maxLineCount: 5, defaultModel: 'outlineModel', scrollWithEditor: true };\n        super(116 /* EditorOption.stickyScroll */, 'stickyScroll', defaults, {\n            'editor.stickyScroll.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('editor.stickyScroll.enabled', \"Shows the nested current scopes during the scroll at the top of the editor.\"),\n                tags: ['experimental']\n            },\n            'editor.stickyScroll.maxLineCount': {\n                type: 'number',\n                default: defaults.maxLineCount,\n                minimum: 1,\n                maximum: 20,\n                description: nls.localize('editor.stickyScroll.maxLineCount', \"Defines the maximum number of sticky lines to show.\")\n            },\n            'editor.stickyScroll.defaultModel': {\n                type: 'string',\n                enum: ['outlineModel', 'foldingProviderModel', 'indentationModel'],\n                default: defaults.defaultModel,\n                description: nls.localize('editor.stickyScroll.defaultModel', \"Defines the model to use for determining which lines to stick. If the outline model does not exist, it will fall back on the folding provider model which falls back on the indentation model. This order is respected in all three cases.\")\n            },\n            'editor.stickyScroll.scrollWithEditor': {\n                type: 'boolean',\n                default: defaults.scrollWithEditor,\n                description: nls.localize('editor.stickyScroll.scrollWithEditor', \"Enable scrolling of Sticky Scroll with the editor's horizontal scrollbar.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            maxLineCount: EditorIntOption.clampedInt(input.maxLineCount, this.defaultValue.maxLineCount, 1, 20),\n            defaultModel: stringSet(input.defaultModel, this.defaultValue.defaultModel, ['outlineModel', 'foldingProviderModel', 'indentationModel']),\n            scrollWithEditor: boolean(input.scrollWithEditor, this.defaultValue.scrollWithEditor)\n        };\n    }\n}\nclass EditorInlayHints extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: 'on', fontSize: 0, fontFamily: '', padding: false };\n        super(142 /* EditorOption.inlayHints */, 'inlayHints', defaults, {\n            'editor.inlayHints.enabled': {\n                type: 'string',\n                default: defaults.enabled,\n                description: nls.localize('inlayHints.enable', \"Enables the inlay hints in the editor.\"),\n                enum: ['on', 'onUnlessPressed', 'offUnlessPressed', 'off'],\n                markdownEnumDescriptions: [\n                    nls.localize('editor.inlayHints.on', \"Inlay hints are enabled\"),\n                    nls.localize('editor.inlayHints.onUnlessPressed', \"Inlay hints are showing by default and hide when holding {0}\", platform.isMacintosh ? `Ctrl+Option` : `Ctrl+Alt`),\n                    nls.localize('editor.inlayHints.offUnlessPressed', \"Inlay hints are hidden by default and show when holding {0}\", platform.isMacintosh ? `Ctrl+Option` : `Ctrl+Alt`),\n                    nls.localize('editor.inlayHints.off', \"Inlay hints are disabled\"),\n                ],\n            },\n            'editor.inlayHints.fontSize': {\n                type: 'number',\n                default: defaults.fontSize,\n                markdownDescription: nls.localize('inlayHints.fontSize', \"Controls font size of inlay hints in the editor. As default the {0} is used when the configured value is less than {1} or greater than the editor font size.\", '`#editor.fontSize#`', '`5`')\n            },\n            'editor.inlayHints.fontFamily': {\n                type: 'string',\n                default: defaults.fontFamily,\n                markdownDescription: nls.localize('inlayHints.fontFamily', \"Controls font family of inlay hints in the editor. When set to empty, the {0} is used.\", '`#editor.fontFamily#`')\n            },\n            'editor.inlayHints.padding': {\n                type: 'boolean',\n                default: defaults.padding,\n                description: nls.localize('inlayHints.padding', \"Enables the padding around the inlay hints in the editor.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        if (typeof input.enabled === 'boolean') {\n            input.enabled = input.enabled ? 'on' : 'off';\n        }\n        return {\n            enabled: stringSet(input.enabled, this.defaultValue.enabled, ['on', 'off', 'offUnlessPressed', 'onUnlessPressed']),\n            fontSize: EditorIntOption.clampedInt(input.fontSize, this.defaultValue.fontSize, 0, 100),\n            fontFamily: EditorStringOption.string(input.fontFamily, this.defaultValue.fontFamily),\n            padding: boolean(input.padding, this.defaultValue.padding)\n        };\n    }\n}\n//#endregion\n//#region lineDecorationsWidth\nclass EditorLineDecorationsWidth extends BaseEditorOption {\n    constructor() {\n        super(66 /* EditorOption.lineDecorationsWidth */, 'lineDecorationsWidth', 10);\n    }\n    validate(input) {\n        if (typeof input === 'string' && /^\\d+(\\.\\d+)?ch$/.test(input)) {\n            const multiple = parseFloat(input.substring(0, input.length - 2));\n            return -multiple; // negative numbers signal a multiple\n        }\n        else {\n            return EditorIntOption.clampedInt(input, this.defaultValue, 0, 1000);\n        }\n    }\n    compute(env, options, value) {\n        if (value < 0) {\n            // negative numbers signal a multiple\n            return EditorIntOption.clampedInt(-value * env.fontInfo.typicalHalfwidthCharacterWidth, this.defaultValue, 0, 1000);\n        }\n        else {\n            return value;\n        }\n    }\n}\n//#endregion\n//#region lineHeight\nclass EditorLineHeight extends EditorFloatOption {\n    constructor() {\n        super(67 /* EditorOption.lineHeight */, 'lineHeight', EDITOR_FONT_DEFAULTS.lineHeight, x => EditorFloatOption.clamp(x, 0, 150), { markdownDescription: nls.localize('lineHeight', \"Controls the line height. \\n - Use 0 to automatically compute the line height from the font size.\\n - Values between 0 and 8 will be used as a multiplier with the font size.\\n - Values greater than or equal to 8 will be used as effective values.\") });\n    }\n    compute(env, options, value) {\n        // The lineHeight is computed from the fontSize if it is 0.\n        // Moreover, the final lineHeight respects the editor zoom level.\n        // So take the result from env.fontInfo\n        return env.fontInfo.lineHeight;\n    }\n}\nclass EditorMinimap extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            size: 'proportional',\n            side: 'right',\n            showSlider: 'mouseover',\n            autohide: false,\n            renderCharacters: true,\n            maxColumn: 120,\n            scale: 1,\n            showRegionSectionHeaders: true,\n            showMarkSectionHeaders: true,\n            sectionHeaderFontSize: 9,\n            sectionHeaderLetterSpacing: 1,\n        };\n        super(73 /* EditorOption.minimap */, 'minimap', defaults, {\n            'editor.minimap.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('minimap.enabled', \"Controls whether the minimap is shown.\")\n            },\n            'editor.minimap.autohide': {\n                type: 'boolean',\n                default: defaults.autohide,\n                description: nls.localize('minimap.autohide', \"Controls whether the minimap is hidden automatically.\")\n            },\n            'editor.minimap.size': {\n                type: 'string',\n                enum: ['proportional', 'fill', 'fit'],\n                enumDescriptions: [\n                    nls.localize('minimap.size.proportional', \"The minimap has the same size as the editor contents (and might scroll).\"),\n                    nls.localize('minimap.size.fill', \"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).\"),\n                    nls.localize('minimap.size.fit', \"The minimap will shrink as necessary to never be larger than the editor (no scrolling).\"),\n                ],\n                default: defaults.size,\n                description: nls.localize('minimap.size', \"Controls the size of the minimap.\")\n            },\n            'editor.minimap.side': {\n                type: 'string',\n                enum: ['left', 'right'],\n                default: defaults.side,\n                description: nls.localize('minimap.side', \"Controls the side where to render the minimap.\")\n            },\n            'editor.minimap.showSlider': {\n                type: 'string',\n                enum: ['always', 'mouseover'],\n                default: defaults.showSlider,\n                description: nls.localize('minimap.showSlider', \"Controls when the minimap slider is shown.\")\n            },\n            'editor.minimap.scale': {\n                type: 'number',\n                default: defaults.scale,\n                minimum: 1,\n                maximum: 3,\n                enum: [1, 2, 3],\n                description: nls.localize('minimap.scale', \"Scale of content drawn in the minimap: 1, 2 or 3.\")\n            },\n            'editor.minimap.renderCharacters': {\n                type: 'boolean',\n                default: defaults.renderCharacters,\n                description: nls.localize('minimap.renderCharacters', \"Render the actual characters on a line as opposed to color blocks.\")\n            },\n            'editor.minimap.maxColumn': {\n                type: 'number',\n                default: defaults.maxColumn,\n                description: nls.localize('minimap.maxColumn', \"Limit the width of the minimap to render at most a certain number of columns.\")\n            },\n            'editor.minimap.showRegionSectionHeaders': {\n                type: 'boolean',\n                default: defaults.showRegionSectionHeaders,\n                description: nls.localize('minimap.showRegionSectionHeaders', \"Controls whether named regions are shown as section headers in the minimap.\")\n            },\n            'editor.minimap.showMarkSectionHeaders': {\n                type: 'boolean',\n                default: defaults.showMarkSectionHeaders,\n                description: nls.localize('minimap.showMarkSectionHeaders', \"Controls whether MARK: comments are shown as section headers in the minimap.\")\n            },\n            'editor.minimap.sectionHeaderFontSize': {\n                type: 'number',\n                default: defaults.sectionHeaderFontSize,\n                description: nls.localize('minimap.sectionHeaderFontSize', \"Controls the font size of section headers in the minimap.\")\n            },\n            'editor.minimap.sectionHeaderLetterSpacing': {\n                type: 'number',\n                default: defaults.sectionHeaderLetterSpacing,\n                description: nls.localize('minimap.sectionHeaderLetterSpacing', \"Controls the amount of space (in pixels) between characters of section header. This helps the readability of the header in small font sizes.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            autohide: boolean(input.autohide, this.defaultValue.autohide),\n            size: stringSet(input.size, this.defaultValue.size, ['proportional', 'fill', 'fit']),\n            side: stringSet(input.side, this.defaultValue.side, ['right', 'left']),\n            showSlider: stringSet(input.showSlider, this.defaultValue.showSlider, ['always', 'mouseover']),\n            renderCharacters: boolean(input.renderCharacters, this.defaultValue.renderCharacters),\n            scale: EditorIntOption.clampedInt(input.scale, 1, 1, 3),\n            maxColumn: EditorIntOption.clampedInt(input.maxColumn, this.defaultValue.maxColumn, 1, 10000),\n            showRegionSectionHeaders: boolean(input.showRegionSectionHeaders, this.defaultValue.showRegionSectionHeaders),\n            showMarkSectionHeaders: boolean(input.showMarkSectionHeaders, this.defaultValue.showMarkSectionHeaders),\n            sectionHeaderFontSize: EditorFloatOption.clamp(input.sectionHeaderFontSize ?? this.defaultValue.sectionHeaderFontSize, 4, 32),\n            sectionHeaderLetterSpacing: EditorFloatOption.clamp(input.sectionHeaderLetterSpacing ?? this.defaultValue.sectionHeaderLetterSpacing, 0, 5),\n        };\n    }\n}\n//#endregion\n//#region multiCursorModifier\nfunction _multiCursorModifierFromString(multiCursorModifier) {\n    if (multiCursorModifier === 'ctrlCmd') {\n        return (platform.isMacintosh ? 'metaKey' : 'ctrlKey');\n    }\n    return 'altKey';\n}\nclass EditorPadding extends BaseEditorOption {\n    constructor() {\n        super(84 /* EditorOption.padding */, 'padding', { top: 0, bottom: 0 }, {\n            'editor.padding.top': {\n                type: 'number',\n                default: 0,\n                minimum: 0,\n                maximum: 1000,\n                description: nls.localize('padding.top', \"Controls the amount of space between the top edge of the editor and the first line.\")\n            },\n            'editor.padding.bottom': {\n                type: 'number',\n                default: 0,\n                minimum: 0,\n                maximum: 1000,\n                description: nls.localize('padding.bottom', \"Controls the amount of space between the bottom edge of the editor and the last line.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            top: EditorIntOption.clampedInt(input.top, 0, 0, 1000),\n            bottom: EditorIntOption.clampedInt(input.bottom, 0, 0, 1000)\n        };\n    }\n}\nclass EditorParameterHints extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            cycle: true\n        };\n        super(86 /* EditorOption.parameterHints */, 'parameterHints', defaults, {\n            'editor.parameterHints.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('parameterHints.enabled', \"Enables a pop-up that shows parameter documentation and type information as you type.\")\n            },\n            'editor.parameterHints.cycle': {\n                type: 'boolean',\n                default: defaults.cycle,\n                description: nls.localize('parameterHints.cycle', \"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            cycle: boolean(input.cycle, this.defaultValue.cycle)\n        };\n    }\n}\n//#endregion\n//#region pixelRatio\nclass EditorPixelRatio extends ComputedEditorOption {\n    constructor() {\n        super(144 /* EditorOption.pixelRatio */);\n    }\n    compute(env, options, _) {\n        return env.pixelRatio;\n    }\n}\n//#endregion\n//#region\nclass PlaceholderOption extends BaseEditorOption {\n    constructor() {\n        super(88 /* EditorOption.placeholder */, 'placeholder', undefined);\n    }\n    validate(input) {\n        if (typeof input === 'undefined') {\n            return this.defaultValue;\n        }\n        if (typeof input === 'string') {\n            return input;\n        }\n        return this.defaultValue;\n    }\n}\nclass EditorQuickSuggestions extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            other: 'on',\n            comments: 'off',\n            strings: 'off'\n        };\n        const types = [\n            { type: 'boolean' },\n            {\n                type: 'string',\n                enum: ['on', 'inline', 'off'],\n                enumDescriptions: [nls.localize('on', \"Quick suggestions show inside the suggest widget\"), nls.localize('inline', \"Quick suggestions show as ghost text\"), nls.localize('off', \"Quick suggestions are disabled\")]\n            }\n        ];\n        super(90 /* EditorOption.quickSuggestions */, 'quickSuggestions', defaults, {\n            type: 'object',\n            additionalProperties: false,\n            properties: {\n                strings: {\n                    anyOf: types,\n                    default: defaults.strings,\n                    description: nls.localize('quickSuggestions.strings', \"Enable quick suggestions inside strings.\")\n                },\n                comments: {\n                    anyOf: types,\n                    default: defaults.comments,\n                    description: nls.localize('quickSuggestions.comments', \"Enable quick suggestions inside comments.\")\n                },\n                other: {\n                    anyOf: types,\n                    default: defaults.other,\n                    description: nls.localize('quickSuggestions.other', \"Enable quick suggestions outside of strings and comments.\")\n                },\n            },\n            default: defaults,\n            markdownDescription: nls.localize('quickSuggestions', \"Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the {0}-setting which controls if suggestions are triggered by special characters.\", '`#editor.suggestOnTriggerCharacters#`')\n        });\n        this.defaultValue = defaults;\n    }\n    validate(input) {\n        if (typeof input === 'boolean') {\n            // boolean -> all on/off\n            const value = input ? 'on' : 'off';\n            return { comments: value, strings: value, other: value };\n        }\n        if (!input || typeof input !== 'object') {\n            // invalid object\n            return this.defaultValue;\n        }\n        const { other, comments, strings } = input;\n        const allowedValues = ['on', 'inline', 'off'];\n        let validatedOther;\n        let validatedComments;\n        let validatedStrings;\n        if (typeof other === 'boolean') {\n            validatedOther = other ? 'on' : 'off';\n        }\n        else {\n            validatedOther = stringSet(other, this.defaultValue.other, allowedValues);\n        }\n        if (typeof comments === 'boolean') {\n            validatedComments = comments ? 'on' : 'off';\n        }\n        else {\n            validatedComments = stringSet(comments, this.defaultValue.comments, allowedValues);\n        }\n        if (typeof strings === 'boolean') {\n            validatedStrings = strings ? 'on' : 'off';\n        }\n        else {\n            validatedStrings = stringSet(strings, this.defaultValue.strings, allowedValues);\n        }\n        return {\n            other: validatedOther,\n            comments: validatedComments,\n            strings: validatedStrings\n        };\n    }\n}\nclass EditorRenderLineNumbersOption extends BaseEditorOption {\n    constructor() {\n        super(68 /* EditorOption.lineNumbers */, 'lineNumbers', { renderType: 1 /* RenderLineNumbersType.On */, renderFn: null }, {\n            type: 'string',\n            enum: ['off', 'on', 'relative', 'interval'],\n            enumDescriptions: [\n                nls.localize('lineNumbers.off', \"Line numbers are not rendered.\"),\n                nls.localize('lineNumbers.on', \"Line numbers are rendered as absolute number.\"),\n                nls.localize('lineNumbers.relative', \"Line numbers are rendered as distance in lines to cursor position.\"),\n                nls.localize('lineNumbers.interval', \"Line numbers are rendered every 10 lines.\")\n            ],\n            default: 'on',\n            description: nls.localize('lineNumbers', \"Controls the display of line numbers.\")\n        });\n    }\n    validate(lineNumbers) {\n        let renderType = this.defaultValue.renderType;\n        let renderFn = this.defaultValue.renderFn;\n        if (typeof lineNumbers !== 'undefined') {\n            if (typeof lineNumbers === 'function') {\n                renderType = 4 /* RenderLineNumbersType.Custom */;\n                renderFn = lineNumbers;\n            }\n            else if (lineNumbers === 'interval') {\n                renderType = 3 /* RenderLineNumbersType.Interval */;\n            }\n            else if (lineNumbers === 'relative') {\n                renderType = 2 /* RenderLineNumbersType.Relative */;\n            }\n            else if (lineNumbers === 'on') {\n                renderType = 1 /* RenderLineNumbersType.On */;\n            }\n            else {\n                renderType = 0 /* RenderLineNumbersType.Off */;\n            }\n        }\n        return {\n            renderType,\n            renderFn\n        };\n    }\n}\n//#endregion\n//#region renderValidationDecorations\n/**\n * @internal\n */\nexport function filterValidationDecorations(options) {\n    const renderValidationDecorations = options.get(99 /* EditorOption.renderValidationDecorations */);\n    if (renderValidationDecorations === 'editable') {\n        return options.get(92 /* EditorOption.readOnly */);\n    }\n    return renderValidationDecorations === 'on' ? false : true;\n}\nclass EditorRulers extends BaseEditorOption {\n    constructor() {\n        const defaults = [];\n        const columnSchema = { type: 'number', description: nls.localize('rulers.size', \"Number of monospace characters at which this editor ruler will render.\") };\n        super(103 /* EditorOption.rulers */, 'rulers', defaults, {\n            type: 'array',\n            items: {\n                anyOf: [\n                    columnSchema,\n                    {\n                        type: [\n                            'object'\n                        ],\n                        properties: {\n                            column: columnSchema,\n                            color: {\n                                type: 'string',\n                                description: nls.localize('rulers.color', \"Color of this editor ruler.\"),\n                                format: 'color-hex'\n                            }\n                        }\n                    }\n                ]\n            },\n            default: defaults,\n            description: nls.localize('rulers', \"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.\")\n        });\n    }\n    validate(input) {\n        if (Array.isArray(input)) {\n            const rulers = [];\n            for (const _element of input) {\n                if (typeof _element === 'number') {\n                    rulers.push({\n                        column: EditorIntOption.clampedInt(_element, 0, 0, 10000),\n                        color: null\n                    });\n                }\n                else if (_element && typeof _element === 'object') {\n                    const element = _element;\n                    rulers.push({\n                        column: EditorIntOption.clampedInt(element.column, 0, 0, 10000),\n                        color: element.color\n                    });\n                }\n            }\n            rulers.sort((a, b) => a.column - b.column);\n            return rulers;\n        }\n        return this.defaultValue;\n    }\n}\n//#endregion\n//#region readonly\n/**\n * Configuration options for readonly message\n */\nclass ReadonlyMessage extends BaseEditorOption {\n    constructor() {\n        const defaults = undefined;\n        super(93 /* EditorOption.readOnlyMessage */, 'readOnlyMessage', defaults);\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        return _input;\n    }\n}\nfunction _scrollbarVisibilityFromString(visibility, defaultValue) {\n    if (typeof visibility !== 'string') {\n        return defaultValue;\n    }\n    switch (visibility) {\n        case 'hidden': return 2 /* ScrollbarVisibility.Hidden */;\n        case 'visible': return 3 /* ScrollbarVisibility.Visible */;\n        default: return 1 /* ScrollbarVisibility.Auto */;\n    }\n}\nclass EditorScrollbar extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            vertical: 1 /* ScrollbarVisibility.Auto */,\n            horizontal: 1 /* ScrollbarVisibility.Auto */,\n            arrowSize: 11,\n            useShadows: true,\n            verticalHasArrows: false,\n            horizontalHasArrows: false,\n            horizontalScrollbarSize: 12,\n            horizontalSliderSize: 12,\n            verticalScrollbarSize: 14,\n            verticalSliderSize: 14,\n            handleMouseWheel: true,\n            alwaysConsumeMouseWheel: true,\n            scrollByPage: false,\n            ignoreHorizontalScrollbarInContentHeight: false,\n        };\n        super(104 /* EditorOption.scrollbar */, 'scrollbar', defaults, {\n            'editor.scrollbar.vertical': {\n                type: 'string',\n                enum: ['auto', 'visible', 'hidden'],\n                enumDescriptions: [\n                    nls.localize('scrollbar.vertical.auto', \"The vertical scrollbar will be visible only when necessary.\"),\n                    nls.localize('scrollbar.vertical.visible', \"The vertical scrollbar will always be visible.\"),\n                    nls.localize('scrollbar.vertical.fit', \"The vertical scrollbar will always be hidden.\"),\n                ],\n                default: 'auto',\n                description: nls.localize('scrollbar.vertical', \"Controls the visibility of the vertical scrollbar.\")\n            },\n            'editor.scrollbar.horizontal': {\n                type: 'string',\n                enum: ['auto', 'visible', 'hidden'],\n                enumDescriptions: [\n                    nls.localize('scrollbar.horizontal.auto', \"The horizontal scrollbar will be visible only when necessary.\"),\n                    nls.localize('scrollbar.horizontal.visible', \"The horizontal scrollbar will always be visible.\"),\n                    nls.localize('scrollbar.horizontal.fit', \"The horizontal scrollbar will always be hidden.\"),\n                ],\n                default: 'auto',\n                description: nls.localize('scrollbar.horizontal', \"Controls the visibility of the horizontal scrollbar.\")\n            },\n            'editor.scrollbar.verticalScrollbarSize': {\n                type: 'number',\n                default: defaults.verticalScrollbarSize,\n                description: nls.localize('scrollbar.verticalScrollbarSize', \"The width of the vertical scrollbar.\")\n            },\n            'editor.scrollbar.horizontalScrollbarSize': {\n                type: 'number',\n                default: defaults.horizontalScrollbarSize,\n                description: nls.localize('scrollbar.horizontalScrollbarSize', \"The height of the horizontal scrollbar.\")\n            },\n            'editor.scrollbar.scrollByPage': {\n                type: 'boolean',\n                default: defaults.scrollByPage,\n                description: nls.localize('scrollbar.scrollByPage', \"Controls whether clicks scroll by page or jump to click position.\")\n            },\n            'editor.scrollbar.ignoreHorizontalScrollbarInContentHeight': {\n                type: 'boolean',\n                default: defaults.ignoreHorizontalScrollbarInContentHeight,\n                description: nls.localize('scrollbar.ignoreHorizontalScrollbarInContentHeight', \"When set, the horizontal scrollbar will not increase the size of the editor's content.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        const horizontalScrollbarSize = EditorIntOption.clampedInt(input.horizontalScrollbarSize, this.defaultValue.horizontalScrollbarSize, 0, 1000);\n        const verticalScrollbarSize = EditorIntOption.clampedInt(input.verticalScrollbarSize, this.defaultValue.verticalScrollbarSize, 0, 1000);\n        return {\n            arrowSize: EditorIntOption.clampedInt(input.arrowSize, this.defaultValue.arrowSize, 0, 1000),\n            vertical: _scrollbarVisibilityFromString(input.vertical, this.defaultValue.vertical),\n            horizontal: _scrollbarVisibilityFromString(input.horizontal, this.defaultValue.horizontal),\n            useShadows: boolean(input.useShadows, this.defaultValue.useShadows),\n            verticalHasArrows: boolean(input.verticalHasArrows, this.defaultValue.verticalHasArrows),\n            horizontalHasArrows: boolean(input.horizontalHasArrows, this.defaultValue.horizontalHasArrows),\n            handleMouseWheel: boolean(input.handleMouseWheel, this.defaultValue.handleMouseWheel),\n            alwaysConsumeMouseWheel: boolean(input.alwaysConsumeMouseWheel, this.defaultValue.alwaysConsumeMouseWheel),\n            horizontalScrollbarSize: horizontalScrollbarSize,\n            horizontalSliderSize: EditorIntOption.clampedInt(input.horizontalSliderSize, horizontalScrollbarSize, 0, 1000),\n            verticalScrollbarSize: verticalScrollbarSize,\n            verticalSliderSize: EditorIntOption.clampedInt(input.verticalSliderSize, verticalScrollbarSize, 0, 1000),\n            scrollByPage: boolean(input.scrollByPage, this.defaultValue.scrollByPage),\n            ignoreHorizontalScrollbarInContentHeight: boolean(input.ignoreHorizontalScrollbarInContentHeight, this.defaultValue.ignoreHorizontalScrollbarInContentHeight),\n        };\n    }\n}\n/**\n * @internal\n*/\nexport const inUntrustedWorkspace = 'inUntrustedWorkspace';\n/**\n * @internal\n */\nexport const unicodeHighlightConfigKeys = {\n    allowedCharacters: 'editor.unicodeHighlight.allowedCharacters',\n    invisibleCharacters: 'editor.unicodeHighlight.invisibleCharacters',\n    nonBasicASCII: 'editor.unicodeHighlight.nonBasicASCII',\n    ambiguousCharacters: 'editor.unicodeHighlight.ambiguousCharacters',\n    includeComments: 'editor.unicodeHighlight.includeComments',\n    includeStrings: 'editor.unicodeHighlight.includeStrings',\n    allowedLocales: 'editor.unicodeHighlight.allowedLocales',\n};\nclass UnicodeHighlight extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            nonBasicASCII: inUntrustedWorkspace,\n            invisibleCharacters: true,\n            ambiguousCharacters: true,\n            includeComments: inUntrustedWorkspace,\n            includeStrings: true,\n            allowedCharacters: {},\n            allowedLocales: { _os: true, _vscode: true },\n        };\n        super(126 /* EditorOption.unicodeHighlighting */, 'unicodeHighlight', defaults, {\n            [unicodeHighlightConfigKeys.nonBasicASCII]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.nonBasicASCII,\n                description: nls.localize('unicodeHighlight.nonBasicASCII', \"Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.\")\n            },\n            [unicodeHighlightConfigKeys.invisibleCharacters]: {\n                restricted: true,\n                type: 'boolean',\n                default: defaults.invisibleCharacters,\n                description: nls.localize('unicodeHighlight.invisibleCharacters', \"Controls whether characters that just reserve space or have no width at all are highlighted.\")\n            },\n            [unicodeHighlightConfigKeys.ambiguousCharacters]: {\n                restricted: true,\n                type: 'boolean',\n                default: defaults.ambiguousCharacters,\n                description: nls.localize('unicodeHighlight.ambiguousCharacters', \"Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.\")\n            },\n            [unicodeHighlightConfigKeys.includeComments]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.includeComments,\n                description: nls.localize('unicodeHighlight.includeComments', \"Controls whether characters in comments should also be subject to Unicode highlighting.\")\n            },\n            [unicodeHighlightConfigKeys.includeStrings]: {\n                restricted: true,\n                type: ['boolean', 'string'],\n                enum: [true, false, inUntrustedWorkspace],\n                default: defaults.includeStrings,\n                description: nls.localize('unicodeHighlight.includeStrings', \"Controls whether characters in strings should also be subject to Unicode highlighting.\")\n            },\n            [unicodeHighlightConfigKeys.allowedCharacters]: {\n                restricted: true,\n                type: 'object',\n                default: defaults.allowedCharacters,\n                description: nls.localize('unicodeHighlight.allowedCharacters', \"Defines allowed characters that are not being highlighted.\"),\n                additionalProperties: {\n                    type: 'boolean'\n                }\n            },\n            [unicodeHighlightConfigKeys.allowedLocales]: {\n                restricted: true,\n                type: 'object',\n                additionalProperties: {\n                    type: 'boolean'\n                },\n                default: defaults.allowedLocales,\n                description: nls.localize('unicodeHighlight.allowedLocales', \"Unicode characters that are common in allowed locales are not being highlighted.\")\n            },\n        });\n    }\n    applyUpdate(value, update) {\n        let didChange = false;\n        if (update.allowedCharacters && value) {\n            // Treat allowedCharacters atomically\n            if (!objects.equals(value.allowedCharacters, update.allowedCharacters)) {\n                value = { ...value, allowedCharacters: update.allowedCharacters };\n                didChange = true;\n            }\n        }\n        if (update.allowedLocales && value) {\n            // Treat allowedLocales atomically\n            if (!objects.equals(value.allowedLocales, update.allowedLocales)) {\n                value = { ...value, allowedLocales: update.allowedLocales };\n                didChange = true;\n            }\n        }\n        const result = super.applyUpdate(value, update);\n        if (didChange) {\n            return new ApplyUpdateResult(result.newValue, true);\n        }\n        return result;\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            nonBasicASCII: primitiveSet(input.nonBasicASCII, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            invisibleCharacters: boolean(input.invisibleCharacters, this.defaultValue.invisibleCharacters),\n            ambiguousCharacters: boolean(input.ambiguousCharacters, this.defaultValue.ambiguousCharacters),\n            includeComments: primitiveSet(input.includeComments, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            includeStrings: primitiveSet(input.includeStrings, inUntrustedWorkspace, [true, false, inUntrustedWorkspace]),\n            allowedCharacters: this.validateBooleanMap(_input.allowedCharacters, this.defaultValue.allowedCharacters),\n            allowedLocales: this.validateBooleanMap(_input.allowedLocales, this.defaultValue.allowedLocales),\n        };\n    }\n    validateBooleanMap(map, defaultValue) {\n        if ((typeof map !== 'object') || !map) {\n            return defaultValue;\n        }\n        const result = {};\n        for (const [key, value] of Object.entries(map)) {\n            if (value === true) {\n                result[key] = true;\n            }\n        }\n        return result;\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass InlineEditorSuggest extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: true,\n            mode: 'subwordSmart',\n            showToolbar: 'onHover',\n            suppressSuggestions: false,\n            keepOnBlur: false,\n            fontFamily: 'default'\n        };\n        super(62 /* EditorOption.inlineSuggest */, 'inlineSuggest', defaults, {\n            'editor.inlineSuggest.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('inlineSuggest.enabled', \"Controls whether to automatically show inline suggestions in the editor.\")\n            },\n            'editor.inlineSuggest.showToolbar': {\n                type: 'string',\n                default: defaults.showToolbar,\n                enum: ['always', 'onHover', 'never'],\n                enumDescriptions: [\n                    nls.localize('inlineSuggest.showToolbar.always', \"Show the inline suggestion toolbar whenever an inline suggestion is shown.\"),\n                    nls.localize('inlineSuggest.showToolbar.onHover', \"Show the inline suggestion toolbar when hovering over an inline suggestion.\"),\n                    nls.localize('inlineSuggest.showToolbar.never', \"Never show the inline suggestion toolbar.\"),\n                ],\n                description: nls.localize('inlineSuggest.showToolbar', \"Controls when to show the inline suggestion toolbar.\"),\n            },\n            'editor.inlineSuggest.suppressSuggestions': {\n                type: 'boolean',\n                default: defaults.suppressSuggestions,\n                description: nls.localize('inlineSuggest.suppressSuggestions', \"Controls how inline suggestions interact with the suggest widget. If enabled, the suggest widget is not shown automatically when inline suggestions are available.\")\n            },\n            'editor.inlineSuggest.fontFamily': {\n                type: 'string',\n                default: defaults.fontFamily,\n                description: nls.localize('inlineSuggest.fontFamily', \"Controls the font family of the inline suggestions.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            mode: stringSet(input.mode, this.defaultValue.mode, ['prefix', 'subword', 'subwordSmart']),\n            showToolbar: stringSet(input.showToolbar, this.defaultValue.showToolbar, ['always', 'onHover', 'never']),\n            suppressSuggestions: boolean(input.suppressSuggestions, this.defaultValue.suppressSuggestions),\n            keepOnBlur: boolean(input.keepOnBlur, this.defaultValue.keepOnBlur),\n            fontFamily: EditorStringOption.string(input.fontFamily, this.defaultValue.fontFamily)\n        };\n    }\n}\nclass InlineEditorEdit extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: false,\n            showToolbar: 'onHover',\n            fontFamily: 'default',\n            keepOnBlur: false,\n        };\n        super(63 /* EditorOption.inlineEdit */, 'experimentalInlineEdit', defaults, {\n            'editor.experimentalInlineEdit.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                description: nls.localize('inlineEdit.enabled', \"Controls whether to show inline edits in the editor.\")\n            },\n            'editor.experimentalInlineEdit.showToolbar': {\n                type: 'string',\n                default: defaults.showToolbar,\n                enum: ['always', 'onHover', 'never'],\n                enumDescriptions: [\n                    nls.localize('inlineEdit.showToolbar.always', \"Show the inline edit toolbar whenever an inline suggestion is shown.\"),\n                    nls.localize('inlineEdit.showToolbar.onHover', \"Show the inline edit toolbar when hovering over an inline suggestion.\"),\n                    nls.localize('inlineEdit.showToolbar.never', \"Never show the inline edit toolbar.\"),\n                ],\n                description: nls.localize('inlineEdit.showToolbar', \"Controls when to show the inline edit toolbar.\"),\n            },\n            'editor.experimentalInlineEdit.fontFamily': {\n                type: 'string',\n                default: defaults.fontFamily,\n                description: nls.localize('inlineEdit.fontFamily', \"Controls the font family of the inline edit.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            showToolbar: stringSet(input.showToolbar, this.defaultValue.showToolbar, ['always', 'onHover', 'never']),\n            fontFamily: EditorStringOption.string(input.fontFamily, this.defaultValue.fontFamily),\n            keepOnBlur: boolean(input.keepOnBlur, this.defaultValue.keepOnBlur),\n        };\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass BracketPairColorization extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            enabled: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions.enabled,\n            independentColorPoolPerBracketType: EDITOR_MODEL_DEFAULTS.bracketPairColorizationOptions.independentColorPoolPerBracketType,\n        };\n        super(15 /* EditorOption.bracketPairColorization */, 'bracketPairColorization', defaults, {\n            'editor.bracketPairColorization.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('bracketPairColorization.enabled', \"Controls whether bracket pair colorization is enabled or not. Use {0} to override the bracket highlight colors.\", '`#workbench.colorCustomizations#`')\n            },\n            'editor.bracketPairColorization.independentColorPoolPerBracketType': {\n                type: 'boolean',\n                default: defaults.independentColorPoolPerBracketType,\n                description: nls.localize('bracketPairColorization.independentColorPoolPerBracketType', \"Controls whether each bracket type has its own independent color pool.\")\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            independentColorPoolPerBracketType: boolean(input.independentColorPoolPerBracketType, this.defaultValue.independentColorPoolPerBracketType),\n        };\n    }\n}\n/**\n * Configuration options for inline suggestions\n */\nclass GuideOptions extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            bracketPairs: false,\n            bracketPairsHorizontal: 'active',\n            highlightActiveBracketPair: true,\n            indentation: true,\n            highlightActiveIndentation: true\n        };\n        super(16 /* EditorOption.guides */, 'guides', defaults, {\n            'editor.guides.bracketPairs': {\n                type: ['boolean', 'string'],\n                enum: [true, 'active', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.bracketPairs.true', \"Enables bracket pair guides.\"),\n                    nls.localize('editor.guides.bracketPairs.active', \"Enables bracket pair guides only for the active bracket pair.\"),\n                    nls.localize('editor.guides.bracketPairs.false', \"Disables bracket pair guides.\"),\n                ],\n                default: defaults.bracketPairs,\n                description: nls.localize('editor.guides.bracketPairs', \"Controls whether bracket pair guides are enabled or not.\")\n            },\n            'editor.guides.bracketPairsHorizontal': {\n                type: ['boolean', 'string'],\n                enum: [true, 'active', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.bracketPairsHorizontal.true', \"Enables horizontal guides as addition to vertical bracket pair guides.\"),\n                    nls.localize('editor.guides.bracketPairsHorizontal.active', \"Enables horizontal guides only for the active bracket pair.\"),\n                    nls.localize('editor.guides.bracketPairsHorizontal.false', \"Disables horizontal bracket pair guides.\"),\n                ],\n                default: defaults.bracketPairsHorizontal,\n                description: nls.localize('editor.guides.bracketPairsHorizontal', \"Controls whether horizontal bracket pair guides are enabled or not.\")\n            },\n            'editor.guides.highlightActiveBracketPair': {\n                type: 'boolean',\n                default: defaults.highlightActiveBracketPair,\n                description: nls.localize('editor.guides.highlightActiveBracketPair', \"Controls whether the editor should highlight the active bracket pair.\")\n            },\n            'editor.guides.indentation': {\n                type: 'boolean',\n                default: defaults.indentation,\n                description: nls.localize('editor.guides.indentation', \"Controls whether the editor should render indent guides.\")\n            },\n            'editor.guides.highlightActiveIndentation': {\n                type: ['boolean', 'string'],\n                enum: [true, 'always', false],\n                enumDescriptions: [\n                    nls.localize('editor.guides.highlightActiveIndentation.true', \"Highlights the active indent guide.\"),\n                    nls.localize('editor.guides.highlightActiveIndentation.always', \"Highlights the active indent guide even if bracket guides are highlighted.\"),\n                    nls.localize('editor.guides.highlightActiveIndentation.false', \"Do not highlight the active indent guide.\"),\n                ],\n                default: defaults.highlightActiveIndentation,\n                description: nls.localize('editor.guides.highlightActiveIndentation', \"Controls whether the editor should highlight the active indent guide.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            bracketPairs: primitiveSet(input.bracketPairs, this.defaultValue.bracketPairs, [true, false, 'active']),\n            bracketPairsHorizontal: primitiveSet(input.bracketPairsHorizontal, this.defaultValue.bracketPairsHorizontal, [true, false, 'active']),\n            highlightActiveBracketPair: boolean(input.highlightActiveBracketPair, this.defaultValue.highlightActiveBracketPair),\n            indentation: boolean(input.indentation, this.defaultValue.indentation),\n            highlightActiveIndentation: primitiveSet(input.highlightActiveIndentation, this.defaultValue.highlightActiveIndentation, [true, false, 'always']),\n        };\n    }\n}\nfunction primitiveSet(value, defaultValue, allowedValues) {\n    const idx = allowedValues.indexOf(value);\n    if (idx === -1) {\n        return defaultValue;\n    }\n    return allowedValues[idx];\n}\nclass EditorSuggest extends BaseEditorOption {\n    constructor() {\n        const defaults = {\n            insertMode: 'insert',\n            filterGraceful: true,\n            snippetsPreventQuickSuggestions: false,\n            localityBonus: false,\n            shareSuggestSelections: false,\n            selectionMode: 'always',\n            showIcons: true,\n            showStatusBar: false,\n            preview: false,\n            previewMode: 'subwordSmart',\n            showInlineDetails: true,\n            showMethods: true,\n            showFunctions: true,\n            showConstructors: true,\n            showDeprecated: true,\n            matchOnWordStartOnly: true,\n            showFields: true,\n            showVariables: true,\n            showClasses: true,\n            showStructs: true,\n            showInterfaces: true,\n            showModules: true,\n            showProperties: true,\n            showEvents: true,\n            showOperators: true,\n            showUnits: true,\n            showValues: true,\n            showConstants: true,\n            showEnums: true,\n            showEnumMembers: true,\n            showKeywords: true,\n            showWords: true,\n            showColors: true,\n            showFiles: true,\n            showReferences: true,\n            showFolders: true,\n            showTypeParameters: true,\n            showSnippets: true,\n            showUsers: true,\n            showIssues: true,\n        };\n        super(119 /* EditorOption.suggest */, 'suggest', defaults, {\n            'editor.suggest.insertMode': {\n                type: 'string',\n                enum: ['insert', 'replace'],\n                enumDescriptions: [\n                    nls.localize('suggest.insertMode.insert', \"Insert suggestion without overwriting text right of the cursor.\"),\n                    nls.localize('suggest.insertMode.replace', \"Insert suggestion and overwrite text right of the cursor.\"),\n                ],\n                default: defaults.insertMode,\n                description: nls.localize('suggest.insertMode', \"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.\")\n            },\n            'editor.suggest.filterGraceful': {\n                type: 'boolean',\n                default: defaults.filterGraceful,\n                description: nls.localize('suggest.filterGraceful', \"Controls whether filtering and sorting suggestions accounts for small typos.\")\n            },\n            'editor.suggest.localityBonus': {\n                type: 'boolean',\n                default: defaults.localityBonus,\n                description: nls.localize('suggest.localityBonus', \"Controls whether sorting favors words that appear close to the cursor.\")\n            },\n            'editor.suggest.shareSuggestSelections': {\n                type: 'boolean',\n                default: defaults.shareSuggestSelections,\n                markdownDescription: nls.localize('suggest.shareSuggestSelections', \"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).\")\n            },\n            'editor.suggest.selectionMode': {\n                type: 'string',\n                enum: ['always', 'never', 'whenTriggerCharacter', 'whenQuickSuggestion'],\n                enumDescriptions: [\n                    nls.localize('suggest.insertMode.always', \"Always select a suggestion when automatically triggering IntelliSense.\"),\n                    nls.localize('suggest.insertMode.never', \"Never select a suggestion when automatically triggering IntelliSense.\"),\n                    nls.localize('suggest.insertMode.whenTriggerCharacter', \"Select a suggestion only when triggering IntelliSense from a trigger character.\"),\n                    nls.localize('suggest.insertMode.whenQuickSuggestion', \"Select a suggestion only when triggering IntelliSense as you type.\"),\n                ],\n                default: defaults.selectionMode,\n                markdownDescription: nls.localize('suggest.selectionMode', \"Controls whether a suggestion is selected when the widget shows. Note that this only applies to automatically triggered suggestions ({0} and {1}) and that a suggestion is always selected when explicitly invoked, e.g via `Ctrl+Space`.\", '`#editor.quickSuggestions#`', '`#editor.suggestOnTriggerCharacters#`')\n            },\n            'editor.suggest.snippetsPreventQuickSuggestions': {\n                type: 'boolean',\n                default: defaults.snippetsPreventQuickSuggestions,\n                description: nls.localize('suggest.snippetsPreventQuickSuggestions', \"Controls whether an active snippet prevents quick suggestions.\")\n            },\n            'editor.suggest.showIcons': {\n                type: 'boolean',\n                default: defaults.showIcons,\n                description: nls.localize('suggest.showIcons', \"Controls whether to show or hide icons in suggestions.\")\n            },\n            'editor.suggest.showStatusBar': {\n                type: 'boolean',\n                default: defaults.showStatusBar,\n                description: nls.localize('suggest.showStatusBar', \"Controls the visibility of the status bar at the bottom of the suggest widget.\")\n            },\n            'editor.suggest.preview': {\n                type: 'boolean',\n                default: defaults.preview,\n                description: nls.localize('suggest.preview', \"Controls whether to preview the suggestion outcome in the editor.\")\n            },\n            'editor.suggest.showInlineDetails': {\n                type: 'boolean',\n                default: defaults.showInlineDetails,\n                description: nls.localize('suggest.showInlineDetails', \"Controls whether suggest details show inline with the label or only in the details widget.\")\n            },\n            'editor.suggest.maxVisibleSuggestions': {\n                type: 'number',\n                deprecationMessage: nls.localize('suggest.maxVisibleSuggestions.dep', \"This setting is deprecated. The suggest widget can now be resized.\"),\n            },\n            'editor.suggest.filteredTypes': {\n                type: 'object',\n                deprecationMessage: nls.localize('deprecated', \"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.\")\n            },\n            'editor.suggest.showMethods': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showMethods', \"When enabled IntelliSense shows `method`-suggestions.\")\n            },\n            'editor.suggest.showFunctions': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFunctions', \"When enabled IntelliSense shows `function`-suggestions.\")\n            },\n            'editor.suggest.showConstructors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showConstructors', \"When enabled IntelliSense shows `constructor`-suggestions.\")\n            },\n            'editor.suggest.showDeprecated': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showDeprecated', \"When enabled IntelliSense shows `deprecated`-suggestions.\")\n            },\n            'editor.suggest.matchOnWordStartOnly': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.matchOnWordStartOnly', \"When enabled IntelliSense filtering requires that the first character matches on a word start. For example, `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.\")\n            },\n            'editor.suggest.showFields': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFields', \"When enabled IntelliSense shows `field`-suggestions.\")\n            },\n            'editor.suggest.showVariables': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showVariables', \"When enabled IntelliSense shows `variable`-suggestions.\")\n            },\n            'editor.suggest.showClasses': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showClasss', \"When enabled IntelliSense shows `class`-suggestions.\")\n            },\n            'editor.suggest.showStructs': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showStructs', \"When enabled IntelliSense shows `struct`-suggestions.\")\n            },\n            'editor.suggest.showInterfaces': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showInterfaces', \"When enabled IntelliSense shows `interface`-suggestions.\")\n            },\n            'editor.suggest.showModules': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showModules', \"When enabled IntelliSense shows `module`-suggestions.\")\n            },\n            'editor.suggest.showProperties': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showPropertys', \"When enabled IntelliSense shows `property`-suggestions.\")\n            },\n            'editor.suggest.showEvents': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEvents', \"When enabled IntelliSense shows `event`-suggestions.\")\n            },\n            'editor.suggest.showOperators': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showOperators', \"When enabled IntelliSense shows `operator`-suggestions.\")\n            },\n            'editor.suggest.showUnits': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showUnits', \"When enabled IntelliSense shows `unit`-suggestions.\")\n            },\n            'editor.suggest.showValues': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showValues', \"When enabled IntelliSense shows `value`-suggestions.\")\n            },\n            'editor.suggest.showConstants': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showConstants', \"When enabled IntelliSense shows `constant`-suggestions.\")\n            },\n            'editor.suggest.showEnums': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEnums', \"When enabled IntelliSense shows `enum`-suggestions.\")\n            },\n            'editor.suggest.showEnumMembers': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showEnumMembers', \"When enabled IntelliSense shows `enumMember`-suggestions.\")\n            },\n            'editor.suggest.showKeywords': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showKeywords', \"When enabled IntelliSense shows `keyword`-suggestions.\")\n            },\n            'editor.suggest.showWords': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showTexts', \"When enabled IntelliSense shows `text`-suggestions.\")\n            },\n            'editor.suggest.showColors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showColors', \"When enabled IntelliSense shows `color`-suggestions.\")\n            },\n            'editor.suggest.showFiles': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFiles', \"When enabled IntelliSense shows `file`-suggestions.\")\n            },\n            'editor.suggest.showReferences': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showReferences', \"When enabled IntelliSense shows `reference`-suggestions.\")\n            },\n            'editor.suggest.showCustomcolors': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showCustomcolors', \"When enabled IntelliSense shows `customcolor`-suggestions.\")\n            },\n            'editor.suggest.showFolders': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showFolders', \"When enabled IntelliSense shows `folder`-suggestions.\")\n            },\n            'editor.suggest.showTypeParameters': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showTypeParameters', \"When enabled IntelliSense shows `typeParameter`-suggestions.\")\n            },\n            'editor.suggest.showSnippets': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showSnippets', \"When enabled IntelliSense shows `snippet`-suggestions.\")\n            },\n            'editor.suggest.showUsers': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showUsers', \"When enabled IntelliSense shows `user`-suggestions.\")\n            },\n            'editor.suggest.showIssues': {\n                type: 'boolean',\n                default: true,\n                markdownDescription: nls.localize('editor.suggest.showIssues', \"When enabled IntelliSense shows `issues`-suggestions.\")\n            }\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            insertMode: stringSet(input.insertMode, this.defaultValue.insertMode, ['insert', 'replace']),\n            filterGraceful: boolean(input.filterGraceful, this.defaultValue.filterGraceful),\n            snippetsPreventQuickSuggestions: boolean(input.snippetsPreventQuickSuggestions, this.defaultValue.filterGraceful),\n            localityBonus: boolean(input.localityBonus, this.defaultValue.localityBonus),\n            shareSuggestSelections: boolean(input.shareSuggestSelections, this.defaultValue.shareSuggestSelections),\n            selectionMode: stringSet(input.selectionMode, this.defaultValue.selectionMode, ['always', 'never', 'whenQuickSuggestion', 'whenTriggerCharacter']),\n            showIcons: boolean(input.showIcons, this.defaultValue.showIcons),\n            showStatusBar: boolean(input.showStatusBar, this.defaultValue.showStatusBar),\n            preview: boolean(input.preview, this.defaultValue.preview),\n            previewMode: stringSet(input.previewMode, this.defaultValue.previewMode, ['prefix', 'subword', 'subwordSmart']),\n            showInlineDetails: boolean(input.showInlineDetails, this.defaultValue.showInlineDetails),\n            showMethods: boolean(input.showMethods, this.defaultValue.showMethods),\n            showFunctions: boolean(input.showFunctions, this.defaultValue.showFunctions),\n            showConstructors: boolean(input.showConstructors, this.defaultValue.showConstructors),\n            showDeprecated: boolean(input.showDeprecated, this.defaultValue.showDeprecated),\n            matchOnWordStartOnly: boolean(input.matchOnWordStartOnly, this.defaultValue.matchOnWordStartOnly),\n            showFields: boolean(input.showFields, this.defaultValue.showFields),\n            showVariables: boolean(input.showVariables, this.defaultValue.showVariables),\n            showClasses: boolean(input.showClasses, this.defaultValue.showClasses),\n            showStructs: boolean(input.showStructs, this.defaultValue.showStructs),\n            showInterfaces: boolean(input.showInterfaces, this.defaultValue.showInterfaces),\n            showModules: boolean(input.showModules, this.defaultValue.showModules),\n            showProperties: boolean(input.showProperties, this.defaultValue.showProperties),\n            showEvents: boolean(input.showEvents, this.defaultValue.showEvents),\n            showOperators: boolean(input.showOperators, this.defaultValue.showOperators),\n            showUnits: boolean(input.showUnits, this.defaultValue.showUnits),\n            showValues: boolean(input.showValues, this.defaultValue.showValues),\n            showConstants: boolean(input.showConstants, this.defaultValue.showConstants),\n            showEnums: boolean(input.showEnums, this.defaultValue.showEnums),\n            showEnumMembers: boolean(input.showEnumMembers, this.defaultValue.showEnumMembers),\n            showKeywords: boolean(input.showKeywords, this.defaultValue.showKeywords),\n            showWords: boolean(input.showWords, this.defaultValue.showWords),\n            showColors: boolean(input.showColors, this.defaultValue.showColors),\n            showFiles: boolean(input.showFiles, this.defaultValue.showFiles),\n            showReferences: boolean(input.showReferences, this.defaultValue.showReferences),\n            showFolders: boolean(input.showFolders, this.defaultValue.showFolders),\n            showTypeParameters: boolean(input.showTypeParameters, this.defaultValue.showTypeParameters),\n            showSnippets: boolean(input.showSnippets, this.defaultValue.showSnippets),\n            showUsers: boolean(input.showUsers, this.defaultValue.showUsers),\n            showIssues: boolean(input.showIssues, this.defaultValue.showIssues),\n        };\n    }\n}\nclass SmartSelect extends BaseEditorOption {\n    constructor() {\n        super(114 /* EditorOption.smartSelect */, 'smartSelect', {\n            selectLeadingAndTrailingWhitespace: true,\n            selectSubwords: true,\n        }, {\n            'editor.smartSelect.selectLeadingAndTrailingWhitespace': {\n                description: nls.localize('selectLeadingAndTrailingWhitespace', \"Whether leading and trailing whitespace should always be selected.\"),\n                default: true,\n                type: 'boolean'\n            },\n            'editor.smartSelect.selectSubwords': {\n                description: nls.localize('selectSubwords', \"Whether subwords (like 'foo' in 'fooBar' or 'foo_bar') should be selected.\"),\n                default: true,\n                type: 'boolean'\n            }\n        });\n    }\n    validate(input) {\n        if (!input || typeof input !== 'object') {\n            return this.defaultValue;\n        }\n        return {\n            selectLeadingAndTrailingWhitespace: boolean(input.selectLeadingAndTrailingWhitespace, this.defaultValue.selectLeadingAndTrailingWhitespace),\n            selectSubwords: boolean(input.selectSubwords, this.defaultValue.selectSubwords),\n        };\n    }\n}\n//#endregion\n//#region wordSegmenterLocales\n/**\n * Locales used for segmenting lines into words when doing word related navigations or operations.\n *\n * Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).\n */\nclass WordSegmenterLocales extends BaseEditorOption {\n    constructor() {\n        const defaults = [];\n        super(131 /* EditorOption.wordSegmenterLocales */, 'wordSegmenterLocales', defaults, {\n            anyOf: [\n                {\n                    description: nls.localize('wordSegmenterLocales', \"Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).\"),\n                    type: 'string',\n                }, {\n                    description: nls.localize('wordSegmenterLocales', \"Locales to be used for word segmentation when doing word related navigations or operations. Specify the BCP 47 language tag of the word you wish to recognize (e.g., ja, zh-CN, zh-Hant-TW, etc.).\"),\n                    type: 'array',\n                    items: {\n                        type: 'string'\n                    }\n                }\n            ]\n        });\n    }\n    validate(input) {\n        if (typeof input === 'string') {\n            input = [input];\n        }\n        if (Array.isArray(input)) {\n            const validLocales = [];\n            for (const locale of input) {\n                if (typeof locale === 'string') {\n                    try {\n                        if (Intl.Segmenter.supportedLocalesOf(locale).length > 0) {\n                            validLocales.push(locale);\n                        }\n                    }\n                    catch {\n                        // ignore invalid locales\n                    }\n                }\n            }\n            return validLocales;\n        }\n        return this.defaultValue;\n    }\n}\nclass WrappingIndentOption extends BaseEditorOption {\n    constructor() {\n        super(139 /* EditorOption.wrappingIndent */, 'wrappingIndent', 1 /* WrappingIndent.Same */, {\n            'editor.wrappingIndent': {\n                type: 'string',\n                enum: ['none', 'same', 'indent', 'deepIndent'],\n                enumDescriptions: [\n                    nls.localize('wrappingIndent.none', \"No indentation. Wrapped lines begin at column 1.\"),\n                    nls.localize('wrappingIndent.same', \"Wrapped lines get the same indentation as the parent.\"),\n                    nls.localize('wrappingIndent.indent', \"Wrapped lines get +1 indentation toward the parent.\"),\n                    nls.localize('wrappingIndent.deepIndent', \"Wrapped lines get +2 indentation toward the parent.\"),\n                ],\n                description: nls.localize('wrappingIndent', \"Controls the indentation of wrapped lines.\"),\n                default: 'same'\n            }\n        });\n    }\n    validate(input) {\n        switch (input) {\n            case 'none': return 0 /* WrappingIndent.None */;\n            case 'same': return 1 /* WrappingIndent.Same */;\n            case 'indent': return 2 /* WrappingIndent.Indent */;\n            case 'deepIndent': return 3 /* WrappingIndent.DeepIndent */;\n        }\n        return 1 /* WrappingIndent.Same */;\n    }\n    compute(env, options, value) {\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 2 /* AccessibilitySupport.Enabled */) {\n            // if we know for a fact that a screen reader is attached, we use no indent wrapping to\n            // help that the editor's wrapping points match the textarea's wrapping points\n            return 0 /* WrappingIndent.None */;\n        }\n        return value;\n    }\n}\nclass EditorWrappingInfoComputer extends ComputedEditorOption {\n    constructor() {\n        super(147 /* EditorOption.wrappingInfo */);\n    }\n    compute(env, options, _) {\n        const layoutInfo = options.get(146 /* EditorOption.layoutInfo */);\n        return {\n            isDominatedByLongLines: env.isDominatedByLongLines,\n            isWordWrapMinified: layoutInfo.isWordWrapMinified,\n            isViewportWrapping: layoutInfo.isViewportWrapping,\n            wrappingColumn: layoutInfo.wrappingColumn,\n        };\n    }\n}\nclass EditorDropIntoEditor extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true, showDropSelector: 'afterDrop' };\n        super(36 /* EditorOption.dropIntoEditor */, 'dropIntoEditor', defaults, {\n            'editor.dropIntoEditor.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('dropIntoEditor.enabled', \"Controls whether you can drag and drop a file into a text editor by holding down the `Shift` key (instead of opening the file in an editor).\"),\n            },\n            'editor.dropIntoEditor.showDropSelector': {\n                type: 'string',\n                markdownDescription: nls.localize('dropIntoEditor.showDropSelector', \"Controls if a widget is shown when dropping files into the editor. This widget lets you control how the file is dropped.\"),\n                enum: [\n                    'afterDrop',\n                    'never'\n                ],\n                enumDescriptions: [\n                    nls.localize('dropIntoEditor.showDropSelector.afterDrop', \"Show the drop selector widget after a file is dropped into the editor.\"),\n                    nls.localize('dropIntoEditor.showDropSelector.never', \"Never show the drop selector widget. Instead the default drop provider is always used.\"),\n                ],\n                default: 'afterDrop',\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            showDropSelector: stringSet(input.showDropSelector, this.defaultValue.showDropSelector, ['afterDrop', 'never']),\n        };\n    }\n}\nclass EditorPasteAs extends BaseEditorOption {\n    constructor() {\n        const defaults = { enabled: true, showPasteSelector: 'afterPaste' };\n        super(85 /* EditorOption.pasteAs */, 'pasteAs', defaults, {\n            'editor.pasteAs.enabled': {\n                type: 'boolean',\n                default: defaults.enabled,\n                markdownDescription: nls.localize('pasteAs.enabled', \"Controls whether you can paste content in different ways.\"),\n            },\n            'editor.pasteAs.showPasteSelector': {\n                type: 'string',\n                markdownDescription: nls.localize('pasteAs.showPasteSelector', \"Controls if a widget is shown when pasting content in to the editor. This widget lets you control how the file is pasted.\"),\n                enum: [\n                    'afterPaste',\n                    'never'\n                ],\n                enumDescriptions: [\n                    nls.localize('pasteAs.showPasteSelector.afterPaste', \"Show the paste selector widget after content is pasted into the editor.\"),\n                    nls.localize('pasteAs.showPasteSelector.never', \"Never show the paste selector widget. Instead the default pasting behavior is always used.\"),\n                ],\n                default: 'afterPaste',\n            },\n        });\n    }\n    validate(_input) {\n        if (!_input || typeof _input !== 'object') {\n            return this.defaultValue;\n        }\n        const input = _input;\n        return {\n            enabled: boolean(input.enabled, this.defaultValue.enabled),\n            showPasteSelector: stringSet(input.showPasteSelector, this.defaultValue.showPasteSelector, ['afterPaste', 'never']),\n        };\n    }\n}\n//#endregion\nconst DEFAULT_WINDOWS_FONT_FAMILY = 'Consolas, \\'Courier New\\', monospace';\nconst DEFAULT_MAC_FONT_FAMILY = 'Menlo, Monaco, \\'Courier New\\', monospace';\nconst DEFAULT_LINUX_FONT_FAMILY = '\\'Droid Sans Mono\\', \\'monospace\\', monospace';\n/**\n * @internal\n */\nexport const EDITOR_FONT_DEFAULTS = {\n    fontFamily: (platform.isMacintosh ? DEFAULT_MAC_FONT_FAMILY : (platform.isLinux ? DEFAULT_LINUX_FONT_FAMILY : DEFAULT_WINDOWS_FONT_FAMILY)),\n    fontWeight: 'normal',\n    fontSize: (platform.isMacintosh ? 12 : 14),\n    lineHeight: 0,\n    letterSpacing: 0,\n};\n/**\n * @internal\n */\nexport const editorOptionsRegistry = [];\nfunction register(option) {\n    editorOptionsRegistry[option.id] = option;\n    return option;\n}\nexport const EditorOptions = {\n    acceptSuggestionOnCommitCharacter: register(new EditorBooleanOption(0 /* EditorOption.acceptSuggestionOnCommitCharacter */, 'acceptSuggestionOnCommitCharacter', true, { markdownDescription: nls.localize('acceptSuggestionOnCommitCharacter', \"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.\") })),\n    acceptSuggestionOnEnter: register(new EditorStringEnumOption(1 /* EditorOption.acceptSuggestionOnEnter */, 'acceptSuggestionOnEnter', 'on', ['on', 'smart', 'off'], {\n        markdownEnumDescriptions: [\n            '',\n            nls.localize('acceptSuggestionOnEnterSmart', \"Only accept a suggestion with `Enter` when it makes a textual change.\"),\n            ''\n        ],\n        markdownDescription: nls.localize('acceptSuggestionOnEnter', \"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.\")\n    })),\n    accessibilitySupport: register(new EditorAccessibilitySupport()),\n    accessibilityPageSize: register(new EditorIntOption(3 /* EditorOption.accessibilityPageSize */, 'accessibilityPageSize', 10, 1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, {\n        description: nls.localize('accessibilityPageSize', \"Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.\"),\n        tags: ['accessibility']\n    })),\n    ariaLabel: register(new EditorStringOption(4 /* EditorOption.ariaLabel */, 'ariaLabel', nls.localize('editorViewAccessibleLabel', \"Editor content\"))),\n    ariaRequired: register(new EditorBooleanOption(5 /* EditorOption.ariaRequired */, 'ariaRequired', false, undefined)),\n    screenReaderAnnounceInlineSuggestion: register(new EditorBooleanOption(8 /* EditorOption.screenReaderAnnounceInlineSuggestion */, 'screenReaderAnnounceInlineSuggestion', true, {\n        description: nls.localize('screenReaderAnnounceInlineSuggestion', \"Control whether inline suggestions are announced by a screen reader.\"),\n        tags: ['accessibility']\n    })),\n    autoClosingBrackets: register(new EditorStringEnumOption(6 /* EditorOption.autoClosingBrackets */, 'autoClosingBrackets', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingBrackets.languageDefined', \"Use language configurations to determine when to autoclose brackets.\"),\n            nls.localize('editor.autoClosingBrackets.beforeWhitespace', \"Autoclose brackets only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingBrackets', \"Controls whether the editor should automatically close brackets after the user adds an opening bracket.\")\n    })),\n    autoClosingComments: register(new EditorStringEnumOption(7 /* EditorOption.autoClosingComments */, 'autoClosingComments', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingComments.languageDefined', \"Use language configurations to determine when to autoclose comments.\"),\n            nls.localize('editor.autoClosingComments.beforeWhitespace', \"Autoclose comments only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingComments', \"Controls whether the editor should automatically close comments after the user adds an opening comment.\")\n    })),\n    autoClosingDelete: register(new EditorStringEnumOption(9 /* EditorOption.autoClosingDelete */, 'autoClosingDelete', 'auto', ['always', 'auto', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingDelete.auto', \"Remove adjacent closing quotes or brackets only if they were automatically inserted.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingDelete', \"Controls whether the editor should remove adjacent closing quotes or brackets when deleting.\")\n    })),\n    autoClosingOvertype: register(new EditorStringEnumOption(10 /* EditorOption.autoClosingOvertype */, 'autoClosingOvertype', 'auto', ['always', 'auto', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingOvertype.auto', \"Type over closing quotes or brackets only if they were automatically inserted.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingOvertype', \"Controls whether the editor should type over closing quotes or brackets.\")\n    })),\n    autoClosingQuotes: register(new EditorStringEnumOption(11 /* EditorOption.autoClosingQuotes */, 'autoClosingQuotes', 'languageDefined', ['always', 'languageDefined', 'beforeWhitespace', 'never'], {\n        enumDescriptions: [\n            '',\n            nls.localize('editor.autoClosingQuotes.languageDefined', \"Use language configurations to determine when to autoclose quotes.\"),\n            nls.localize('editor.autoClosingQuotes.beforeWhitespace', \"Autoclose quotes only when the cursor is to the left of whitespace.\"),\n            '',\n        ],\n        description: nls.localize('autoClosingQuotes', \"Controls whether the editor should automatically close quotes after the user adds an opening quote.\")\n    })),\n    autoIndent: register(new EditorEnumOption(12 /* EditorOption.autoIndent */, 'autoIndent', 4 /* EditorAutoIndentStrategy.Full */, 'full', ['none', 'keep', 'brackets', 'advanced', 'full'], _autoIndentFromString, {\n        enumDescriptions: [\n            nls.localize('editor.autoIndent.none', \"The editor will not insert indentation automatically.\"),\n            nls.localize('editor.autoIndent.keep', \"The editor will keep the current line's indentation.\"),\n            nls.localize('editor.autoIndent.brackets', \"The editor will keep the current line's indentation and honor language defined brackets.\"),\n            nls.localize('editor.autoIndent.advanced', \"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.\"),\n            nls.localize('editor.autoIndent.full', \"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.\"),\n        ],\n        description: nls.localize('autoIndent', \"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.\")\n    })),\n    automaticLayout: register(new EditorBooleanOption(13 /* EditorOption.automaticLayout */, 'automaticLayout', false)),\n    autoSurround: register(new EditorStringEnumOption(14 /* EditorOption.autoSurround */, 'autoSurround', 'languageDefined', ['languageDefined', 'quotes', 'brackets', 'never'], {\n        enumDescriptions: [\n            nls.localize('editor.autoSurround.languageDefined', \"Use language configurations to determine when to automatically surround selections.\"),\n            nls.localize('editor.autoSurround.quotes', \"Surround with quotes but not brackets.\"),\n            nls.localize('editor.autoSurround.brackets', \"Surround with brackets but not quotes.\"),\n            ''\n        ],\n        description: nls.localize('autoSurround', \"Controls whether the editor should automatically surround selections when typing quotes or brackets.\")\n    })),\n    bracketPairColorization: register(new BracketPairColorization()),\n    bracketPairGuides: register(new GuideOptions()),\n    stickyTabStops: register(new EditorBooleanOption(117 /* EditorOption.stickyTabStops */, 'stickyTabStops', false, { description: nls.localize('stickyTabStops', \"Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.\") })),\n    codeLens: register(new EditorBooleanOption(17 /* EditorOption.codeLens */, 'codeLens', true, { description: nls.localize('codeLens', \"Controls whether the editor shows CodeLens.\") })),\n    codeLensFontFamily: register(new EditorStringOption(18 /* EditorOption.codeLensFontFamily */, 'codeLensFontFamily', '', { description: nls.localize('codeLensFontFamily', \"Controls the font family for CodeLens.\") })),\n    codeLensFontSize: register(new EditorIntOption(19 /* EditorOption.codeLensFontSize */, 'codeLensFontSize', 0, 0, 100, {\n        type: 'number',\n        default: 0,\n        minimum: 0,\n        maximum: 100,\n        markdownDescription: nls.localize('codeLensFontSize', \"Controls the font size in pixels for CodeLens. When set to 0, 90% of `#editor.fontSize#` is used.\")\n    })),\n    colorDecorators: register(new EditorBooleanOption(20 /* EditorOption.colorDecorators */, 'colorDecorators', true, { description: nls.localize('colorDecorators', \"Controls whether the editor should render the inline color decorators and color picker.\") })),\n    colorDecoratorActivatedOn: register(new EditorStringEnumOption(149 /* EditorOption.colorDecoratorsActivatedOn */, 'colorDecoratorsActivatedOn', 'clickAndHover', ['clickAndHover', 'hover', 'click'], {\n        enumDescriptions: [\n            nls.localize('editor.colorDecoratorActivatedOn.clickAndHover', \"Make the color picker appear both on click and hover of the color decorator\"),\n            nls.localize('editor.colorDecoratorActivatedOn.hover', \"Make the color picker appear on hover of the color decorator\"),\n            nls.localize('editor.colorDecoratorActivatedOn.click', \"Make the color picker appear on click of the color decorator\")\n        ],\n        description: nls.localize('colorDecoratorActivatedOn', \"Controls the condition to make a color picker appear from a color decorator\")\n    })),\n    colorDecoratorsLimit: register(new EditorIntOption(21 /* EditorOption.colorDecoratorsLimit */, 'colorDecoratorsLimit', 500, 1, 1000000, {\n        markdownDescription: nls.localize('colorDecoratorsLimit', \"Controls the max number of color decorators that can be rendered in an editor at once.\")\n    })),\n    columnSelection: register(new EditorBooleanOption(22 /* EditorOption.columnSelection */, 'columnSelection', false, { description: nls.localize('columnSelection', \"Enable that the selection with the mouse and keys is doing column selection.\") })),\n    comments: register(new EditorComments()),\n    contextmenu: register(new EditorBooleanOption(24 /* EditorOption.contextmenu */, 'contextmenu', true)),\n    copyWithSyntaxHighlighting: register(new EditorBooleanOption(25 /* EditorOption.copyWithSyntaxHighlighting */, 'copyWithSyntaxHighlighting', true, { description: nls.localize('copyWithSyntaxHighlighting', \"Controls whether syntax highlighting should be copied into the clipboard.\") })),\n    cursorBlinking: register(new EditorEnumOption(26 /* EditorOption.cursorBlinking */, 'cursorBlinking', 1 /* TextEditorCursorBlinkingStyle.Blink */, 'blink', ['blink', 'smooth', 'phase', 'expand', 'solid'], _cursorBlinkingStyleFromString, { description: nls.localize('cursorBlinking', \"Control the cursor animation style.\") })),\n    cursorSmoothCaretAnimation: register(new EditorStringEnumOption(27 /* EditorOption.cursorSmoothCaretAnimation */, 'cursorSmoothCaretAnimation', 'off', ['off', 'explicit', 'on'], {\n        enumDescriptions: [\n            nls.localize('cursorSmoothCaretAnimation.off', \"Smooth caret animation is disabled.\"),\n            nls.localize('cursorSmoothCaretAnimation.explicit', \"Smooth caret animation is enabled only when the user moves the cursor with an explicit gesture.\"),\n            nls.localize('cursorSmoothCaretAnimation.on', \"Smooth caret animation is always enabled.\")\n        ],\n        description: nls.localize('cursorSmoothCaretAnimation', \"Controls whether the smooth caret animation should be enabled.\")\n    })),\n    cursorStyle: register(new EditorEnumOption(28 /* EditorOption.cursorStyle */, 'cursorStyle', TextEditorCursorStyle.Line, 'line', ['line', 'block', 'underline', 'line-thin', 'block-outline', 'underline-thin'], _cursorStyleFromString, { description: nls.localize('cursorStyle', \"Controls the cursor style.\") })),\n    cursorSurroundingLines: register(new EditorIntOption(29 /* EditorOption.cursorSurroundingLines */, 'cursorSurroundingLines', 0, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('cursorSurroundingLines', \"Controls the minimal number of visible leading lines (minimum 0) and trailing lines (minimum 1) surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.\") })),\n    cursorSurroundingLinesStyle: register(new EditorStringEnumOption(30 /* EditorOption.cursorSurroundingLinesStyle */, 'cursorSurroundingLinesStyle', 'default', ['default', 'all'], {\n        enumDescriptions: [\n            nls.localize('cursorSurroundingLinesStyle.default', \"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.\"),\n            nls.localize('cursorSurroundingLinesStyle.all', \"`cursorSurroundingLines` is enforced always.\")\n        ],\n        markdownDescription: nls.localize('cursorSurroundingLinesStyle', \"Controls when `#editor.cursorSurroundingLines#` should be enforced.\")\n    })),\n    cursorWidth: register(new EditorIntOption(31 /* EditorOption.cursorWidth */, 'cursorWidth', 0, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { markdownDescription: nls.localize('cursorWidth', \"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.\") })),\n    disableLayerHinting: register(new EditorBooleanOption(32 /* EditorOption.disableLayerHinting */, 'disableLayerHinting', false)),\n    disableMonospaceOptimizations: register(new EditorBooleanOption(33 /* EditorOption.disableMonospaceOptimizations */, 'disableMonospaceOptimizations', false)),\n    domReadOnly: register(new EditorBooleanOption(34 /* EditorOption.domReadOnly */, 'domReadOnly', false)),\n    dragAndDrop: register(new EditorBooleanOption(35 /* EditorOption.dragAndDrop */, 'dragAndDrop', true, { description: nls.localize('dragAndDrop', \"Controls whether the editor should allow moving selections via drag and drop.\") })),\n    emptySelectionClipboard: register(new EditorEmptySelectionClipboard()),\n    dropIntoEditor: register(new EditorDropIntoEditor()),\n    stickyScroll: register(new EditorStickyScroll()),\n    experimentalWhitespaceRendering: register(new EditorStringEnumOption(38 /* EditorOption.experimentalWhitespaceRendering */, 'experimentalWhitespaceRendering', 'svg', ['svg', 'font', 'off'], {\n        enumDescriptions: [\n            nls.localize('experimentalWhitespaceRendering.svg', \"Use a new rendering method with svgs.\"),\n            nls.localize('experimentalWhitespaceRendering.font', \"Use a new rendering method with font characters.\"),\n            nls.localize('experimentalWhitespaceRendering.off', \"Use the stable rendering method.\"),\n        ],\n        description: nls.localize('experimentalWhitespaceRendering', \"Controls whether whitespace is rendered with a new, experimental method.\")\n    })),\n    extraEditorClassName: register(new EditorStringOption(39 /* EditorOption.extraEditorClassName */, 'extraEditorClassName', '')),\n    fastScrollSensitivity: register(new EditorFloatOption(40 /* EditorOption.fastScrollSensitivity */, 'fastScrollSensitivity', 5, x => (x <= 0 ? 5 : x), { markdownDescription: nls.localize('fastScrollSensitivity', \"Scrolling speed multiplier when pressing `Alt`.\") })),\n    find: register(new EditorFind()),\n    fixedOverflowWidgets: register(new EditorBooleanOption(42 /* EditorOption.fixedOverflowWidgets */, 'fixedOverflowWidgets', false)),\n    folding: register(new EditorBooleanOption(43 /* EditorOption.folding */, 'folding', true, { description: nls.localize('folding', \"Controls whether the editor has code folding enabled.\") })),\n    foldingStrategy: register(new EditorStringEnumOption(44 /* EditorOption.foldingStrategy */, 'foldingStrategy', 'auto', ['auto', 'indentation'], {\n        enumDescriptions: [\n            nls.localize('foldingStrategy.auto', \"Use a language-specific folding strategy if available, else the indentation-based one.\"),\n            nls.localize('foldingStrategy.indentation', \"Use the indentation-based folding strategy.\"),\n        ],\n        description: nls.localize('foldingStrategy', \"Controls the strategy for computing folding ranges.\")\n    })),\n    foldingHighlight: register(new EditorBooleanOption(45 /* EditorOption.foldingHighlight */, 'foldingHighlight', true, { description: nls.localize('foldingHighlight', \"Controls whether the editor should highlight folded ranges.\") })),\n    foldingImportsByDefault: register(new EditorBooleanOption(46 /* EditorOption.foldingImportsByDefault */, 'foldingImportsByDefault', false, { description: nls.localize('foldingImportsByDefault', \"Controls whether the editor automatically collapses import ranges.\") })),\n    foldingMaximumRegions: register(new EditorIntOption(47 /* EditorOption.foldingMaximumRegions */, 'foldingMaximumRegions', 5000, 10, 65000, // limit must be less than foldingRanges MAX_FOLDING_REGIONS\n    { description: nls.localize('foldingMaximumRegions', \"The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.\") })),\n    unfoldOnClickAfterEndOfLine: register(new EditorBooleanOption(48 /* EditorOption.unfoldOnClickAfterEndOfLine */, 'unfoldOnClickAfterEndOfLine', false, { description: nls.localize('unfoldOnClickAfterEndOfLine', \"Controls whether clicking on the empty content after a folded line will unfold the line.\") })),\n    fontFamily: register(new EditorStringOption(49 /* EditorOption.fontFamily */, 'fontFamily', EDITOR_FONT_DEFAULTS.fontFamily, { description: nls.localize('fontFamily', \"Controls the font family.\") })),\n    fontInfo: register(new EditorFontInfo()),\n    fontLigatures2: register(new EditorFontLigatures()),\n    fontSize: register(new EditorFontSize()),\n    fontWeight: register(new EditorFontWeight()),\n    fontVariations: register(new EditorFontVariations()),\n    formatOnPaste: register(new EditorBooleanOption(55 /* EditorOption.formatOnPaste */, 'formatOnPaste', false, { description: nls.localize('formatOnPaste', \"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.\") })),\n    formatOnType: register(new EditorBooleanOption(56 /* EditorOption.formatOnType */, 'formatOnType', false, { description: nls.localize('formatOnType', \"Controls whether the editor should automatically format the line after typing.\") })),\n    glyphMargin: register(new EditorBooleanOption(57 /* EditorOption.glyphMargin */, 'glyphMargin', true, { description: nls.localize('glyphMargin', \"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.\") })),\n    gotoLocation: register(new EditorGoToLocation()),\n    hideCursorInOverviewRuler: register(new EditorBooleanOption(59 /* EditorOption.hideCursorInOverviewRuler */, 'hideCursorInOverviewRuler', false, { description: nls.localize('hideCursorInOverviewRuler', \"Controls whether the cursor should be hidden in the overview ruler.\") })),\n    hover: register(new EditorHover()),\n    inDiffEditor: register(new EditorBooleanOption(61 /* EditorOption.inDiffEditor */, 'inDiffEditor', false)),\n    letterSpacing: register(new EditorFloatOption(64 /* EditorOption.letterSpacing */, 'letterSpacing', EDITOR_FONT_DEFAULTS.letterSpacing, x => EditorFloatOption.clamp(x, -5, 20), { description: nls.localize('letterSpacing', \"Controls the letter spacing in pixels.\") })),\n    lightbulb: register(new EditorLightbulb()),\n    lineDecorationsWidth: register(new EditorLineDecorationsWidth()),\n    lineHeight: register(new EditorLineHeight()),\n    lineNumbers: register(new EditorRenderLineNumbersOption()),\n    lineNumbersMinChars: register(new EditorIntOption(69 /* EditorOption.lineNumbersMinChars */, 'lineNumbersMinChars', 5, 1, 300)),\n    linkedEditing: register(new EditorBooleanOption(70 /* EditorOption.linkedEditing */, 'linkedEditing', false, { description: nls.localize('linkedEditing', \"Controls whether the editor has linked editing enabled. Depending on the language, related symbols such as HTML tags, are updated while editing.\") })),\n    links: register(new EditorBooleanOption(71 /* EditorOption.links */, 'links', true, { description: nls.localize('links', \"Controls whether the editor should detect links and make them clickable.\") })),\n    matchBrackets: register(new EditorStringEnumOption(72 /* EditorOption.matchBrackets */, 'matchBrackets', 'always', ['always', 'near', 'never'], { description: nls.localize('matchBrackets', \"Highlight matching brackets.\") })),\n    minimap: register(new EditorMinimap()),\n    mouseStyle: register(new EditorStringEnumOption(74 /* EditorOption.mouseStyle */, 'mouseStyle', 'text', ['text', 'default', 'copy'])),\n    mouseWheelScrollSensitivity: register(new EditorFloatOption(75 /* EditorOption.mouseWheelScrollSensitivity */, 'mouseWheelScrollSensitivity', 1, x => (x === 0 ? 1 : x), { markdownDescription: nls.localize('mouseWheelScrollSensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\") })),\n    mouseWheelZoom: register(new EditorBooleanOption(76 /* EditorOption.mouseWheelZoom */, 'mouseWheelZoom', false, {\n        markdownDescription: platform.isMacintosh\n            ? nls.localize('mouseWheelZoom.mac', \"Zoom the font of the editor when using mouse wheel and holding `Cmd`.\")\n            : nls.localize('mouseWheelZoom', \"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.\")\n    })),\n    multiCursorMergeOverlapping: register(new EditorBooleanOption(77 /* EditorOption.multiCursorMergeOverlapping */, 'multiCursorMergeOverlapping', true, { description: nls.localize('multiCursorMergeOverlapping', \"Merge multiple cursors when they are overlapping.\") })),\n    multiCursorModifier: register(new EditorEnumOption(78 /* EditorOption.multiCursorModifier */, 'multiCursorModifier', 'altKey', 'alt', ['ctrlCmd', 'alt'], _multiCursorModifierFromString, {\n        markdownEnumDescriptions: [\n            nls.localize('multiCursorModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n            nls.localize('multiCursorModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n        ],\n        markdownDescription: nls.localize({\n            key: 'multiCursorModifier',\n            comment: [\n                '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n            ]\n        }, \"The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the [multicursor modifier](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).\")\n    })),\n    multiCursorPaste: register(new EditorStringEnumOption(79 /* EditorOption.multiCursorPaste */, 'multiCursorPaste', 'spread', ['spread', 'full'], {\n        markdownEnumDescriptions: [\n            nls.localize('multiCursorPaste.spread', \"Each cursor pastes a single line of the text.\"),\n            nls.localize('multiCursorPaste.full', \"Each cursor pastes the full text.\")\n        ],\n        markdownDescription: nls.localize('multiCursorPaste', \"Controls pasting when the line count of the pasted text matches the cursor count.\")\n    })),\n    multiCursorLimit: register(new EditorIntOption(80 /* EditorOption.multiCursorLimit */, 'multiCursorLimit', 10000, 1, 100000, {\n        markdownDescription: nls.localize('multiCursorLimit', \"Controls the max number of cursors that can be in an active editor at once.\")\n    })),\n    occurrencesHighlight: register(new EditorStringEnumOption(81 /* EditorOption.occurrencesHighlight */, 'occurrencesHighlight', 'singleFile', ['off', 'singleFile', 'multiFile'], {\n        markdownEnumDescriptions: [\n            nls.localize('occurrencesHighlight.off', \"Does not highlight occurrences.\"),\n            nls.localize('occurrencesHighlight.singleFile', \"Highlights occurrences only in the current file.\"),\n            nls.localize('occurrencesHighlight.multiFile', \"Experimental: Highlights occurrences across all valid open files.\")\n        ],\n        markdownDescription: nls.localize('occurrencesHighlight', \"Controls whether occurrences should be highlighted across open files.\")\n    })),\n    overviewRulerBorder: register(new EditorBooleanOption(82 /* EditorOption.overviewRulerBorder */, 'overviewRulerBorder', true, { description: nls.localize('overviewRulerBorder', \"Controls whether a border should be drawn around the overview ruler.\") })),\n    overviewRulerLanes: register(new EditorIntOption(83 /* EditorOption.overviewRulerLanes */, 'overviewRulerLanes', 3, 0, 3)),\n    padding: register(new EditorPadding()),\n    pasteAs: register(new EditorPasteAs()),\n    parameterHints: register(new EditorParameterHints()),\n    peekWidgetDefaultFocus: register(new EditorStringEnumOption(87 /* EditorOption.peekWidgetDefaultFocus */, 'peekWidgetDefaultFocus', 'tree', ['tree', 'editor'], {\n        enumDescriptions: [\n            nls.localize('peekWidgetDefaultFocus.tree', \"Focus the tree when opening peek\"),\n            nls.localize('peekWidgetDefaultFocus.editor', \"Focus the editor when opening peek\")\n        ],\n        description: nls.localize('peekWidgetDefaultFocus', \"Controls whether to focus the inline editor or the tree in the peek widget.\")\n    })),\n    placeholder: register(new PlaceholderOption()),\n    definitionLinkOpensInPeek: register(new EditorBooleanOption(89 /* EditorOption.definitionLinkOpensInPeek */, 'definitionLinkOpensInPeek', false, { description: nls.localize('definitionLinkOpensInPeek', \"Controls whether the Go to Definition mouse gesture always opens the peek widget.\") })),\n    quickSuggestions: register(new EditorQuickSuggestions()),\n    quickSuggestionsDelay: register(new EditorIntOption(91 /* EditorOption.quickSuggestionsDelay */, 'quickSuggestionsDelay', 10, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('quickSuggestionsDelay', \"Controls the delay in milliseconds after which quick suggestions will show up.\") })),\n    readOnly: register(new EditorBooleanOption(92 /* EditorOption.readOnly */, 'readOnly', false)),\n    readOnlyMessage: register(new ReadonlyMessage()),\n    renameOnType: register(new EditorBooleanOption(94 /* EditorOption.renameOnType */, 'renameOnType', false, { description: nls.localize('renameOnType', \"Controls whether the editor auto renames on type.\"), markdownDeprecationMessage: nls.localize('renameOnTypeDeprecate', \"Deprecated, use `editor.linkedEditing` instead.\") })),\n    renderControlCharacters: register(new EditorBooleanOption(95 /* EditorOption.renderControlCharacters */, 'renderControlCharacters', true, { description: nls.localize('renderControlCharacters', \"Controls whether the editor should render control characters.\"), restricted: true })),\n    renderFinalNewline: register(new EditorStringEnumOption(96 /* EditorOption.renderFinalNewline */, 'renderFinalNewline', (platform.isLinux ? 'dimmed' : 'on'), ['off', 'on', 'dimmed'], { description: nls.localize('renderFinalNewline', \"Render last line number when the file ends with a newline.\") })),\n    renderLineHighlight: register(new EditorStringEnumOption(97 /* EditorOption.renderLineHighlight */, 'renderLineHighlight', 'line', ['none', 'gutter', 'line', 'all'], {\n        enumDescriptions: [\n            '',\n            '',\n            '',\n            nls.localize('renderLineHighlight.all', \"Highlights both the gutter and the current line.\"),\n        ],\n        description: nls.localize('renderLineHighlight', \"Controls how the editor should render the current line highlight.\")\n    })),\n    renderLineHighlightOnlyWhenFocus: register(new EditorBooleanOption(98 /* EditorOption.renderLineHighlightOnlyWhenFocus */, 'renderLineHighlightOnlyWhenFocus', false, { description: nls.localize('renderLineHighlightOnlyWhenFocus', \"Controls if the editor should render the current line highlight only when the editor is focused.\") })),\n    renderValidationDecorations: register(new EditorStringEnumOption(99 /* EditorOption.renderValidationDecorations */, 'renderValidationDecorations', 'editable', ['editable', 'on', 'off'])),\n    renderWhitespace: register(new EditorStringEnumOption(100 /* EditorOption.renderWhitespace */, 'renderWhitespace', 'selection', ['none', 'boundary', 'selection', 'trailing', 'all'], {\n        enumDescriptions: [\n            '',\n            nls.localize('renderWhitespace.boundary', \"Render whitespace characters except for single spaces between words.\"),\n            nls.localize('renderWhitespace.selection', \"Render whitespace characters only on selected text.\"),\n            nls.localize('renderWhitespace.trailing', \"Render only trailing whitespace characters.\"),\n            ''\n        ],\n        description: nls.localize('renderWhitespace', \"Controls how the editor should render whitespace characters.\")\n    })),\n    revealHorizontalRightPadding: register(new EditorIntOption(101 /* EditorOption.revealHorizontalRightPadding */, 'revealHorizontalRightPadding', 15, 0, 1000)),\n    roundedSelection: register(new EditorBooleanOption(102 /* EditorOption.roundedSelection */, 'roundedSelection', true, { description: nls.localize('roundedSelection', \"Controls whether selections should have rounded corners.\") })),\n    rulers: register(new EditorRulers()),\n    scrollbar: register(new EditorScrollbar()),\n    scrollBeyondLastColumn: register(new EditorIntOption(105 /* EditorOption.scrollBeyondLastColumn */, 'scrollBeyondLastColumn', 4, 0, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, { description: nls.localize('scrollBeyondLastColumn', \"Controls the number of extra characters beyond which the editor will scroll horizontally.\") })),\n    scrollBeyondLastLine: register(new EditorBooleanOption(106 /* EditorOption.scrollBeyondLastLine */, 'scrollBeyondLastLine', true, { description: nls.localize('scrollBeyondLastLine', \"Controls whether the editor will scroll beyond the last line.\") })),\n    scrollPredominantAxis: register(new EditorBooleanOption(107 /* EditorOption.scrollPredominantAxis */, 'scrollPredominantAxis', true, { description: nls.localize('scrollPredominantAxis', \"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.\") })),\n    selectionClipboard: register(new EditorBooleanOption(108 /* EditorOption.selectionClipboard */, 'selectionClipboard', true, {\n        description: nls.localize('selectionClipboard', \"Controls whether the Linux primary clipboard should be supported.\"),\n        included: platform.isLinux\n    })),\n    selectionHighlight: register(new EditorBooleanOption(109 /* EditorOption.selectionHighlight */, 'selectionHighlight', true, { description: nls.localize('selectionHighlight', \"Controls whether the editor should highlight matches similar to the selection.\") })),\n    selectOnLineNumbers: register(new EditorBooleanOption(110 /* EditorOption.selectOnLineNumbers */, 'selectOnLineNumbers', true)),\n    showFoldingControls: register(new EditorStringEnumOption(111 /* EditorOption.showFoldingControls */, 'showFoldingControls', 'mouseover', ['always', 'never', 'mouseover'], {\n        enumDescriptions: [\n            nls.localize('showFoldingControls.always', \"Always show the folding controls.\"),\n            nls.localize('showFoldingControls.never', \"Never show the folding controls and reduce the gutter size.\"),\n            nls.localize('showFoldingControls.mouseover', \"Only show the folding controls when the mouse is over the gutter.\"),\n        ],\n        description: nls.localize('showFoldingControls', \"Controls when the folding controls on the gutter are shown.\")\n    })),\n    showUnused: register(new EditorBooleanOption(112 /* EditorOption.showUnused */, 'showUnused', true, { description: nls.localize('showUnused', \"Controls fading out of unused code.\") })),\n    showDeprecated: register(new EditorBooleanOption(141 /* EditorOption.showDeprecated */, 'showDeprecated', true, { description: nls.localize('showDeprecated', \"Controls strikethrough deprecated variables.\") })),\n    inlayHints: register(new EditorInlayHints()),\n    snippetSuggestions: register(new EditorStringEnumOption(113 /* EditorOption.snippetSuggestions */, 'snippetSuggestions', 'inline', ['top', 'bottom', 'inline', 'none'], {\n        enumDescriptions: [\n            nls.localize('snippetSuggestions.top', \"Show snippet suggestions on top of other suggestions.\"),\n            nls.localize('snippetSuggestions.bottom', \"Show snippet suggestions below other suggestions.\"),\n            nls.localize('snippetSuggestions.inline', \"Show snippets suggestions with other suggestions.\"),\n            nls.localize('snippetSuggestions.none', \"Do not show snippet suggestions.\"),\n        ],\n        description: nls.localize('snippetSuggestions', \"Controls whether snippets are shown with other suggestions and how they are sorted.\")\n    })),\n    smartSelect: register(new SmartSelect()),\n    smoothScrolling: register(new EditorBooleanOption(115 /* EditorOption.smoothScrolling */, 'smoothScrolling', false, { description: nls.localize('smoothScrolling', \"Controls whether the editor will scroll using an animation.\") })),\n    stopRenderingLineAfter: register(new EditorIntOption(118 /* EditorOption.stopRenderingLineAfter */, 'stopRenderingLineAfter', 10000, -1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */)),\n    suggest: register(new EditorSuggest()),\n    inlineSuggest: register(new InlineEditorSuggest()),\n    inlineEdit: register(new InlineEditorEdit()),\n    inlineCompletionsAccessibilityVerbose: register(new EditorBooleanOption(150 /* EditorOption.inlineCompletionsAccessibilityVerbose */, 'inlineCompletionsAccessibilityVerbose', false, { description: nls.localize('inlineCompletionsAccessibilityVerbose', \"Controls whether the accessibility hint should be provided to screen reader users when an inline completion is shown.\") })),\n    suggestFontSize: register(new EditorIntOption(120 /* EditorOption.suggestFontSize */, 'suggestFontSize', 0, 0, 1000, { markdownDescription: nls.localize('suggestFontSize', \"Font size for the suggest widget. When set to {0}, the value of {1} is used.\", '`0`', '`#editor.fontSize#`') })),\n    suggestLineHeight: register(new EditorIntOption(121 /* EditorOption.suggestLineHeight */, 'suggestLineHeight', 0, 0, 1000, { markdownDescription: nls.localize('suggestLineHeight', \"Line height for the suggest widget. When set to {0}, the value of {1} is used. The minimum value is 8.\", '`0`', '`#editor.lineHeight#`') })),\n    suggestOnTriggerCharacters: register(new EditorBooleanOption(122 /* EditorOption.suggestOnTriggerCharacters */, 'suggestOnTriggerCharacters', true, { description: nls.localize('suggestOnTriggerCharacters', \"Controls whether suggestions should automatically show up when typing trigger characters.\") })),\n    suggestSelection: register(new EditorStringEnumOption(123 /* EditorOption.suggestSelection */, 'suggestSelection', 'first', ['first', 'recentlyUsed', 'recentlyUsedByPrefix'], {\n        markdownEnumDescriptions: [\n            nls.localize('suggestSelection.first', \"Always select the first suggestion.\"),\n            nls.localize('suggestSelection.recentlyUsed', \"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.\"),\n            nls.localize('suggestSelection.recentlyUsedByPrefix', \"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.\"),\n        ],\n        description: nls.localize('suggestSelection', \"Controls how suggestions are pre-selected when showing the suggest list.\")\n    })),\n    tabCompletion: register(new EditorStringEnumOption(124 /* EditorOption.tabCompletion */, 'tabCompletion', 'off', ['on', 'off', 'onlySnippets'], {\n        enumDescriptions: [\n            nls.localize('tabCompletion.on', \"Tab complete will insert the best matching suggestion when pressing tab.\"),\n            nls.localize('tabCompletion.off', \"Disable tab completions.\"),\n            nls.localize('tabCompletion.onlySnippets', \"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.\"),\n        ],\n        description: nls.localize('tabCompletion', \"Enables tab completions.\")\n    })),\n    tabIndex: register(new EditorIntOption(125 /* EditorOption.tabIndex */, 'tabIndex', 0, -1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */)),\n    unicodeHighlight: register(new UnicodeHighlight()),\n    unusualLineTerminators: register(new EditorStringEnumOption(127 /* EditorOption.unusualLineTerminators */, 'unusualLineTerminators', 'prompt', ['auto', 'off', 'prompt'], {\n        enumDescriptions: [\n            nls.localize('unusualLineTerminators.auto', \"Unusual line terminators are automatically removed.\"),\n            nls.localize('unusualLineTerminators.off', \"Unusual line terminators are ignored.\"),\n            nls.localize('unusualLineTerminators.prompt', \"Unusual line terminators prompt to be removed.\"),\n        ],\n        description: nls.localize('unusualLineTerminators', \"Remove unusual line terminators that might cause problems.\")\n    })),\n    useShadowDOM: register(new EditorBooleanOption(128 /* EditorOption.useShadowDOM */, 'useShadowDOM', true)),\n    useTabStops: register(new EditorBooleanOption(129 /* EditorOption.useTabStops */, 'useTabStops', true, { description: nls.localize('useTabStops', \"Spaces and tabs are inserted and deleted in alignment with tab stops.\") })),\n    wordBreak: register(new EditorStringEnumOption(130 /* EditorOption.wordBreak */, 'wordBreak', 'normal', ['normal', 'keepAll'], {\n        markdownEnumDescriptions: [\n            nls.localize('wordBreak.normal', \"Use the default line break rule.\"),\n            nls.localize('wordBreak.keepAll', \"Word breaks should not be used for Chinese/Japanese/Korean (CJK) text. Non-CJK text behavior is the same as for normal.\"),\n        ],\n        description: nls.localize('wordBreak', \"Controls the word break rules used for Chinese/Japanese/Korean (CJK) text.\")\n    })),\n    wordSegmenterLocales: register(new WordSegmenterLocales()),\n    wordSeparators: register(new EditorStringOption(132 /* EditorOption.wordSeparators */, 'wordSeparators', USUAL_WORD_SEPARATORS, { description: nls.localize('wordSeparators', \"Characters that will be used as word separators when doing word related navigations or operations.\") })),\n    wordWrap: register(new EditorStringEnumOption(133 /* EditorOption.wordWrap */, 'wordWrap', 'off', ['off', 'on', 'wordWrapColumn', 'bounded'], {\n        markdownEnumDescriptions: [\n            nls.localize('wordWrap.off', \"Lines will never wrap.\"),\n            nls.localize('wordWrap.on', \"Lines will wrap at the viewport width.\"),\n            nls.localize({\n                key: 'wordWrap.wordWrapColumn',\n                comment: [\n                    '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n                ]\n            }, \"Lines will wrap at `#editor.wordWrapColumn#`.\"),\n            nls.localize({\n                key: 'wordWrap.bounded',\n                comment: [\n                    '- viewport means the edge of the visible window size.',\n                    '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n                ]\n            }, \"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.\"),\n        ],\n        description: nls.localize({\n            key: 'wordWrap',\n            comment: [\n                '- \\'off\\', \\'on\\', \\'wordWrapColumn\\' and \\'bounded\\' refer to values the setting can take and should not be localized.',\n                '- `editor.wordWrapColumn` refers to a different setting and should not be localized.'\n            ]\n        }, \"Controls how lines should wrap.\")\n    })),\n    wordWrapBreakAfterCharacters: register(new EditorStringOption(134 /* EditorOption.wordWrapBreakAfterCharacters */, 'wordWrapBreakAfterCharacters', \n    // allow-any-unicode-next-line\n    ' \\t})]?|/&.,;¢°′″‰℃、。｡､￠，．：；？！％・･ゝゞヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻ｧｨｩｪｫｬｭｮｯｰ”〉》」』】〕）］｝｣')),\n    wordWrapBreakBeforeCharacters: register(new EditorStringOption(135 /* EditorOption.wordWrapBreakBeforeCharacters */, 'wordWrapBreakBeforeCharacters', \n    // allow-any-unicode-next-line\n    '([{‘“〈《「『【〔（［｛｢£¥＄￡￥+＋')),\n    wordWrapColumn: register(new EditorIntOption(136 /* EditorOption.wordWrapColumn */, 'wordWrapColumn', 80, 1, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */, {\n        markdownDescription: nls.localize({\n            key: 'wordWrapColumn',\n            comment: [\n                '- `editor.wordWrap` refers to a different setting and should not be localized.',\n                '- \\'wordWrapColumn\\' and \\'bounded\\' refer to values the different setting can take and should not be localized.'\n            ]\n        }, \"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.\")\n    })),\n    wordWrapOverride1: register(new EditorStringEnumOption(137 /* EditorOption.wordWrapOverride1 */, 'wordWrapOverride1', 'inherit', ['off', 'on', 'inherit'])),\n    wordWrapOverride2: register(new EditorStringEnumOption(138 /* EditorOption.wordWrapOverride2 */, 'wordWrapOverride2', 'inherit', ['off', 'on', 'inherit'])),\n    // Leave these at the end (because they have dependencies!)\n    editorClassName: register(new EditorClassName()),\n    defaultColorDecorators: register(new EditorBooleanOption(148 /* EditorOption.defaultColorDecorators */, 'defaultColorDecorators', false, { markdownDescription: nls.localize('defaultColorDecorators', \"Controls whether inline color decorations should be shown using the default document color provider\") })),\n    pixelRatio: register(new EditorPixelRatio()),\n    tabFocusMode: register(new EditorBooleanOption(145 /* EditorOption.tabFocusMode */, 'tabFocusMode', false, { markdownDescription: nls.localize('tabFocusMode', \"Controls whether the editor receives tabs or defers them to the workbench for navigation.\") })),\n    layoutInfo: register(new EditorLayoutInfoComputer()),\n    wrappingInfo: register(new EditorWrappingInfoComputer()),\n    wrappingIndent: register(new WrappingIndentOption()),\n    wrappingStrategy: register(new WrappingStrategy())\n};\n","export function identity(t) {\n    return t;\n}\n/**\n * Uses a LRU cache to make a given parametrized function cached.\n * Caches just the last key/value.\n*/\nexport class LRUCachedFunction {\n    constructor(arg1, arg2) {\n        this.lastCache = undefined;\n        this.lastArgKey = undefined;\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this.lastArgKey !== key) {\n            this.lastArgKey = key;\n            this.lastCache = this._fn(arg);\n        }\n        return this.lastCache;\n    }\n}\n/**\n * Uses an unbounded cache to memoize the results of the given function.\n*/\nexport class CachedFunction {\n    get cachedValues() {\n        return this._map;\n    }\n    constructor(arg1, arg2) {\n        this._map = new Map();\n        this._map2 = new Map();\n        if (typeof arg1 === 'function') {\n            this._fn = arg1;\n            this._computeKey = identity;\n        }\n        else {\n            this._fn = arg2;\n            this._computeKey = arg1.getCacheKey;\n        }\n    }\n    get(arg) {\n        const key = this._computeKey(arg);\n        if (this._map2.has(key)) {\n            return this._map2.get(key);\n        }\n        const value = this._fn(arg);\n        this._map.set(arg, value);\n        this._map2.set(key, value);\n        return value;\n    }\n}\n"],"names":["ensureCodeWindow","targetWindow","fallbackWindowId","codeWindow","vscodeWindowId","Object","defineProperty","get","mainWindow","window","listFocusBackground","listFocusForeground","listFocusOutline","dark","light","hcDark","hcLight","listFocusAndSelectionOutline","listActiveSelectionBackground","fromHex","transparent","listActiveSelectionForeground","white","listActiveSelectionIconForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listInactiveSelectionIconForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropOverBackground","listDropBetweenBackground","listHighlightForeground","listFocusHighlightForeground","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","tail","array","n","length","tail2","arr","Error","slice","equals","one","other","itemEquals","a","b","i","len","removeFastWithoutKeepingOrder","index","last","pop","binarySearch","key","comparator","compareToKey","low","high","mid","comp","binarySearch2","quickSelect","nth","data","compare","TypeError","pivotValue","Math","floor","random","lower","higher","pivots","value","val","push","groupBy","result","currentGroup","element","sort","groupAdjacentBy","items","shouldBeGrouped","item","undefined","forEachAdjacent","f","forEachWithNeighbors","coalesce","filter","e","coalesceInPlace","to","isFalsyOrEmpty","obj","Array","isArray","isNonEmptyArray","distinct","keyFn","seen","Set","has","add","firstOrDefault","notFoundValue","range","arg","from","arrayInsert","target","insertIndex","insertArr","before","after","concat","pushToStart","indexOf","splice","unshift","pushToEnd","pushMany","asArray","x","start","deleteCount","newItems","getActualStartIndex","startIdx","originalLength","newItemsLength","insertInto","max","min","CompareResult","compareBy","selector","tieBreakComparators","comparators","item1","item2","isNeitherLessOrGreaterThan","neitherLessOrGreaterThan","isLessThan","isLessThanOrEqual","isGreaterThan","greaterThan","lessThan","numberComparator","booleanComparator","reverseOrder","ArrayQueue","constructor","this","firstIdx","lastIdx","takeWhile","predicate","takeFromEndWhile","endIdx","peek","dequeue","takeCount","count","CallbackIterable","empty","_callback","iterate","toArray","cb","map","mapFn","findLast","findLastMaxBy","first","Permutation","_indexMap","createSortPermutation","compareFn","sortIndices","keys","index1","index2","apply","_","inverse","inverseIndexMap","RangeUtil","_createRange","_handyReadyRange","document","createRange","_detachRange","endNode","selectNodeContents","_readClientRects","startElement","startOffset","endElement","endOffset","setStart","setEnd","getClientRects","_mergeAdjacentRanges","ranges","resultLen","prev","left","width","_createHorizontalRangesFromClientRects","clientRects","clientRectDeltaLeft","clientRectScale","clientRect","readHorizontalRanges","domNode","startChildIndex","endChildIndex","context","children","firstChild","markDidDomLayout","textContent","canUseFastRenderedViewLine","platform","browser","monospaceAssumptionsAreValid","ViewLineOptions","config","themeType","options","fontInfo","experimentalWhitespaceRendering","renderWhitespace","renderControlCharacters","spaceWidth","middotWidth","wsmiddotWidth","useMonospaceOptimizations","isMonospace","canUseHalfwidthRightwardsArrow","lineHeight","stopRenderingLineAfter","fontLigatures","ViewLine","CLASS_NAME","_options","_isMaybeInvalid","_renderedViewLine","getDomNode","setDomNode","onContentChanged","onTokensChanged","onDecorationsChanged","onOptionsChanged","newOptions","onSelectionChanged","renderLine","lineNumber","deltaTop","viewportData","sb","lineData","getViewLineRenderingData","actualInlineDecorations","inlineDecorations","minColumn","maxColumn","selectionsOnLine","selections","selection","endLineNumber","startLineNumber","startColumn","endColumn","renderLineInput","content","continuesWithWrappedLine","isBasicASCII","containsRTL","tokens","tabSize","startVisibleColumn","OFF","input","appendString","String","output","renderedViewLine","containsForeignElements","FastRenderedViewLine","characterMapping","createRenderedLine","layoutLine","setTop","setHeight","getWidth","getWidthIsFast","needsMonospaceFontCheck","onMonospaceAssumptionsInvalidated","toSlowRenderedLine","getVisibleRangesForRange","lineContent","horizontalRanges","getColumnOfNodeOffset","spanNode","offset","_cachedWidth","keyColumnCount","_keyColumnPixelOffsetCache","Float32Array","_characterMapping","_charWidth","horizontalOffset","getHorizontalOffset","round","_getReadingTarget","offsetWidth","expectedWidth","actualWidth","abs","console","warn","startPosition","_getColumnPixelOffset","endPosition","column","keyColumnOrdinal","keyColumn","keyColumnPixelOffset","_actualReadPixelOffset","keyColumnHorizontalOffset","myDomNode","domPosition","getDomPosition","r","partIndex","charIndex","RenderedViewLine","_isWhitespaceOnly","test","_containsForeignElements","_pixelOffsetCache","_readPixelOffset","_readVisibleRangesForRange","pixelOffset","_readRawVisibleRangesForRange","readingTarget","cachedPixelOffset","expectedResult","startDomPosition","endDomPosition","WebKitRenderedViewLine","super","endPixelOffset","lastRange","spanNodeTextContentLength","spanIndex","previousSibling","getColumn","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","construct","Reflect","fun","thisValue","args","Func","arrayForEach","unapply","prototype","forEach","arrayPop","arrayPush","stringToLowerCase","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","stringTrim","trim","objectHasOwnProperty","hasOwnProperty","regExpTest","RegExp","typeErrorCreate","func","_len2","arguments","_key2","thisArg","_len","_key","addToSet","set","transformCaseFunc","l","lcElement","cleanArray","clone","object","newObject","property","lookupGetter","prop","desc","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","getGlobal","purify","createDOMPurify","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","trustedTypes","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","createHTML","createScriptURL","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","scriptUrl","_createTrustedTypesPolicy","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_forceRemove","node","removeChild","_removeAttribute","name","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","elm","nodeName","attributes","namespaceURI","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","tagName","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childClone","__removalCount","parent","parentTagName","Boolean","_checkValidNamespace","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","ViewPart","_context","addEventHandler","dispose","removeEventHandler","PartFingerprints","write","partId","read","parseInt","collect","child","stopAt","ELEMENT_NODE","parentElement","Uint8Array","BrowserFeatures","clipboard","writeText","queryCommandSupported","navigator","readText","keyboard","touch","maxTouchPoints","pointerEvents","PointerEvent","GlobalPointerMoveMonitor","_hooks","_pointerMoveCallback","_onStopCallback","stopMonitoring","invokeStopCallback","browserEvent","isMonitoring","clear","onStopCallback","startMonitoring","initialElement","pointerId","initialButtons","pointerMoveCallback","eventSource","setPointerCapture","releasePointerCapture","err","POINTER_MOVE","buttons","preventDefault","POINTER_UP","isThenable","then","createCancelablePromise","callback","source","thenable","token","promise","Promise","resolve","reject","subscription","onCancellationRequested","cancel","onfinally","finally","raceCancellation","defaultValue","ref","Throttler","isDisposed","activePromise","queuedPromise","queuedPromiseFactory","queue","promiseFactory","onComplete","Delayer","defaultDelay","deferred","completionPromise","doResolve","doReject","task","trigger","delay","cancelTimeout","fn","scheduled","queueMicrotask","isTriggered","microtaskDeferred","timeout","handle","setTimeout","clearTimeout","timeoutDeferred","ThrottledDelayer","delayer","throttler","millis","disposable","disposableTimeout","handler","store","timer","deleteAndLeak","promiseFactories","shouldStop","t","loop","factory","TimeoutTimer","runner","_isDisposed","_token","setIfNotSet","cancelAndSet","IntervalTimer","interval","globalThis","setInterval","clearInterval","RunOnceScheduler","timeoutToken","timeoutHandler","onTimeout","bind","isScheduled","schedule","doRun","runWhenGlobalIdle","_runWhenIdle","requestIdleCallback","cancelIdleCallback","_targetWindow","disposed","end","Date","now","deadline","didTimeout","timeRemaining","AbstractIdleValue","executor","_didRun","_executor","_value","_error","_handle","isInitialized","GlobalIdleValue","DeferredPromise","isRejected","outcome","isSettled","p","c","completeCallback","errorCallback","complete","error","Promises","settled","async","promises","firstError","all","withAsyncBody","bodyFn","AsyncIterableObject","fromArray","writer","emitMany","fromPromise","emitter","fromPromises","emitOne","merge","iterables","iterable","EMPTY","onReturn","_state","_results","_onReturn","_onStateChanged","Symbol","asyncIterator","next","done","toPromise","event","return","filterFn","fire","values","CancelableAsyncIterableObject","_source","createCancelableAsyncIterable","innerIterable","isCancellationRequested","badgeBackground","black","badgeForeground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","progressBarBackground","deepClone","deepFreeze","stack","shift","_hasOwnProperty","cloneAndChange","changer","_cloneAndChange","changed","r1","r2","i2","delete","mixin","destination","overwrite","oneKeys","otherKeys","getAllMethodNames","methods","res","getOwnPropertyNames","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","RestrictedRenderingContext","viewLayout","_restrictedRenderingContextBrand","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","viewportWidth","viewportHeight","height","getScrolledTopFromAbsoluteTop","absoluteTop","getVerticalOffsetForLineNumber","includeViewZones","getVerticalOffsetAfterLineNumber","getDecorationsInViewport","RenderingContext","viewLines","_renderingContextBrand","_viewLines","linesVisibleRangesForRange","includeNewLines","visibleRangeForPosition","position","LineVisibleRanges","outsideRenderedLine","continuesOnNextLine","HorizontalRange","_horizontalRangeBrand","FloatHorizontalRange","_floatHorizontalRangeBrand","HorizontalPosition","originalLeft","VisibleRanges","PageCoordinates","y","_pageCoordinatesBrand","toClientCoordinates","ClientCoordinates","scrollX","scrollY","clientX","clientY","_clientCoordinatesBrand","toPageCoordinates","EditorPagePosition","_editorPagePositionBrand","CoordinatesRelativeToEditor","_positionRelativeToEditorBrand","createEditorPagePosition","editorViewDomNode","editorPos","createCoordinatesRelativeToEditor","editorPagePosition","pos","scaleX","scaleY","offsetHeight","relativeX","relativeY","EditorMouseEvent","isFromPointerCapture","_editorMouseEventBrand","posx","posy","relativePos","EditorMouseEventFactory","_editorViewDomNode","_create","onContextMenu","onMouseUp","onMouseDown","MOUSE_DOWN","onPointerDown","POINTER_DOWN","onMouseLeave","MOUSE_LEAVE","onMouseMove","EditorPointerEventFactory","onPointerUp","onPointerLeave","POINTER_LEAVE","onPointerMove","GlobalEditorPointerMoveMonitor","_globalPointerMoveMonitor","_register","_keydownListener","toKeyCodeChord","isModifierKey","DynamicCssRules","_idPool","_editor","_instanceId","_counter","_rules","Map","_garbageCollectionScheduler","garbageCollect","createClassNameRef","rule","getOrCreateRule","increaseRefCount","className","decreaseRefCount","properties","computeUniqueKey","existingRule","counter","RefCountedCssRule","getContainerDomNode","JSON","stringify","hasReferences","_containerElement","_referenceCount","_styleElementDisposables","_styleElement","getCssText","str","cssValue","id","camelToDashes","letter","FastDomNode","_maxWidth","_width","_height","_top","_left","_bottom","_right","_paddingLeft","_fontFamily","_fontWeight","_fontSize","_fontStyle","_fontFeatureSettings","_fontVariationSettings","_textDecoration","_lineHeight","_letterSpacing","_className","_display","_position","_visibility","_color","_backgroundColor","_layerHint","_contain","_boxShadow","setMaxWidth","maxWidth","numberAsPixels","style","setWidth","setLeft","setBottom","bottom","setRight","right","setPaddingLeft","paddingLeft","setFontFamily","fontFamily","setFontWeight","fontWeight","setFontSize","fontSize","setFontStyle","fontStyle","setFontFeatureSettings","fontFeatureSettings","setFontVariationSettings","fontVariationSettings","setTextDecoration","textDecoration","setLineHeight","setLetterSpacing","letterSpacing","setClassName","toggleClassName","shouldHaveIt","classList","toggle","setDisplay","display","setPosition","setVisibility","visibility","setColor","color","setBackgroundColor","backgroundColor","setLayerHinting","layerHint","transform","setBoxShadow","boxShadow","setContain","contain","createFastDomNode","ctrlKeyMod","metaKeyMod","StandardKeyboardEvent","_standardKeyboardEventBrand","ctrlKey","shiftKey","altKey","metaKey","altGraphKey","getModifierState","keyCode","charCode","char","fromCharCode","toUpperCase","fromString","extractKeyCode","code","_asKeybinding","_computeKeybinding","_asKeyCodeChord","_computeKeyCodeChord","stopPropagation","HitTestResult","UnknownHitTestResult","hitTarget","type","ContentHitTestResult","injectedText","createFromDOMInfo","ctx","getPositionFromDOMInfo","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","_deduceRage","createUnknown","mouseColumn","createTextarea","createMargin","detail","createViewZone","createContentText","createContentEmpty","createContentWidget","createScrollbar","createOverlayWidget","createOutsideEditor","outsidePosition","outsideDistance","_typeToString","ElementPath","isTextArea","path","isChildOfViewLines","isStrictChildOfViewLines","isChildOfScrollableElement","isChildOfMinimap","isChildOfContentWidgets","isChildOfOverflowGuard","isChildOfOverflowingContentWidgets","isChildOfOverlayWidgets","isChildOfOverflowingOverlayWidgets","HitTestContext","viewHelper","lastRenderData","viewModel","configuration","layoutInfo","viewDomNode","stickyTabStops","typicalHalfwidthCharacterWidth","_viewHelper","getZoneAtCoord","mouseVerticalOffset","viewZoneWhitespace","getWhitespaceAtVerticalOffset","viewZoneMiddle","verticalOffset","lineCount","getLineCount","positionBefore","positionAfter","afterLineNumber","getLineMaxColumn","viewZoneId","getFullLineRangeAtCoord","isAfterLines","maxLineColumn","getLineNumberAtVerticalOffset","isInTopPadding","isInBottomPadding","findAttribute","_findAttribute","getLineWidth","getCurrentScrollTop","getCurrentScrollLeft","BareHitTestRequest","mouseContentHorizontalOffset","contentLeft","isInMarginArea","glyphMarginLeft","isInContentArea","MouseTargetFactory","_getMouseColumn","HitTestRequest","_useHitTestTarget","hitTestResult","_eventTarget","targetPath","_targetPathCacheElement","_targetPathCacheValue","_ctx","eventTarget","doHitTest","hasEventTarget","wouldBenefitFromHitTestTargetSwitch","switchToHitTestTarget","visibleColumnFromColumn","getLineContent","model","getOptions","fulfillUnknown","fulfillTextarea","fulfillMargin","fulfillViewZone","fulfillContentText","fulfillContentEmpty","fulfillContentWidget","fulfillScrollbar","fulfillOverlayWidget","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","mouseTargetIsWidget","createMouseTarget","request","_createMouseTarget","_snapToSoftTabBoundary","fromPositions","plusRange","resolvedRequest","_hitTestContentWidget","_hitTestOverlayWidget","_hitTestMinimap","_hitTestScrollbarSlider","_hitTestViewZone","_hitTestMargin","_hitTestViewCursor","_hitTestTextArea","_hitTestViewLines","_hitTestScrollbar","widgetId","d","mightBeForeignElement","cursorVerticalOffset","viewZoneData","mouseTargetType","getStartPosition","glyphMarginWidth","lineNumbersWidth","offsetX","modelCoordinate","coordinatesConverter","convertViewPositionToModelPosition","lanes","glyphLanes","getLanesAtLine","glyphMarginLane","getLineLength","lineWidth","createMouseTargetFromHitTestPosition","possibleLineNumber","getMouseColumn","columnHorizontalOffset","points","mouseCoordinates","spanNodeClientRect","getBoundingClientRect","mouseIsOverSpanNode","rng","curr","_doHitTestWithCaretRangeFromPoint","lineStartVerticalOffset","lineEndVerticalOffset","lineCenteredVerticalOffset","adjustedPageY","adjustedPage","_actualDoHitTestWithCaretRangeFromPoint","coords","shadowRoot","caretRangeFromPoint","el","elementFromPoint","TEXT_NODE","lastChild","rect","elWindow","font","getComputedStyle","getPropertyValue","innerText","step","pixelCursor","charWidthReader","CharWidthReader","getInstance","getCharWidth","charAt","shadowCaretRangeFromPoint","startContainer","parent1","parent2","parent3","_doHitTestWithCaretPositionFromPoint","hitResult","caretPositionFromPoint","offsetNode","parent1ClassName","parent2ClassName","tokenSpan","newPosition","atomicPosition","getInjectedTextAt","normalizedPosition","normalizePosition","_INSTANCE","_cache","_canvas","cacheKey","getContext","measureText","inputBackground","inputForeground","inputBorder","inputActiveOptionBorder","inputActiveOptionHoverBackground","inputActiveOptionBackground","inputActiveOptionForeground","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","selectBackground","selectListBackground","selectForeground","selectBorder","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonBorder","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","radioActiveForeground","radioActiveBackground","radioActiveBorder","radioInactiveForeground","radioInactiveBackground","radioInactiveBorder","radioInactiveHoverBackground","checkboxBackground","checkboxForeground","checkboxBorder","keybindingLabelBackground","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","Schemas","matchesScheme","isUri","matchesSomeScheme","schemes","some","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellMetadataDiff","vscodeNotebookCellOutput","vscodeNotebookCellOutputDiff","vscodeNotebookMetadata","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatCodeBlock","vscodeChatCodeCompareBlock","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","commentsInput","codeSetting","outputChannel","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","_serverRootPath","setPreferredWebSchema","schema","_remoteResourcesPath","join","rewrite","uri","authority","host","port","connectionToken","query","encodeURIComponent","FileAccessImpl","FALLBACK_AUTHORITY","asBrowserUri","resourcePath","toUri","uriToBrowserUri","with","uriOrModule","moduleIdToUrl","_VSCODE_FILE_ROOT","rootUriOrPath","joinPath","parse","modulePath","toUrl","FileAccess","COI","coiHeaders","CoopAndCoep","coiSearchParamName","getHeadersFromQuery","url","params","URL","searchParams","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","Lazy","rawValue","hash","doHash","hashVal","numberHash","initialHashVal","reduce","stringHash","objectHash","booleanHash","s","charCodeAt","leftRotate","bits","totalBits","delta","fill","dest","byteLength","toHexString","bufferOrValue","bitsize","ArrayBuffer","padStart","leftPad","StringSHA1","_bigBlock32","DataView","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","strLen","buff","buffLen","leftoverHighSurrogate","codePoint","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","bigBlock32","j","getUint32","k","temp","USUAL_WORD_SEPARATORS","DEFAULT_WORD_REGEXP","allowInWords","sep","createWordRegExp","ensureValidWordDefinition","wordDefinition","global","flags","ignoreCase","multiline","unicode","lastIndex","_defaultConfig","getWordAtText","textOffset","maxLen","substring","t1","prevRegexIndex","timeBudget","regexIndex","windowSize","thisMatch","_findRegexMatchEnclosingPosition","word","stopPos","exec","matchIndex","isFalsyOrWhitespace","_formatRegexp","format","group","idx","isNaN","htmlAttributeEncodeValue","ch","escape","escapeRegExpCharacters","haystack","needle","rtrim","ltrim","needleLen","haystackLen","lastIndexOf","convertSimple2RegExpPattern","pattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","regExpLeadsToEndlessLoop","regexp","splitLines","split","splitLinesIncludeSeparators","linesWithSeparators","splitLinesAndSeparators","ceil","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","equalsIgnoreCase","startsWithIgnoreCase","candidate","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","CodePointIterator","_offset","_str","setOffset","prevCodePoint","prevCharCode","getPrevCodePoint","nextCodePoint","eol","GraphemeIterator","_iterator","nextGraphemeLength","graphemeBreakTree","GraphemeBreakTree","iterator","initialOffset","graphemeBreakType","getGraphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeLength","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","CONTAINS_RTL","IS_BASIC_ASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","ignoreEscapedChars","singleLetterHash","breakTypeA","breakTypeB","_data","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","ambiguousCharacterData","cache","getCacheKey","locales","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","startsWith","locale","mergeMaps","_locales","getLocales","confusableDictionary","isAmbiguous","getPrimaryConfusable","getConfusableCodePoints","InvisibleCharacters","getRawData","getData","isInvisibleCharacter","codePoints","LinePart","endIndex","metadata","_linePartBrand","isWhitespace","isPseudoAfter","LineRange","otherLineRange","RenderLineInput","fauxIndentLength","lineTokens","lineDecorations","renderSpaceWidth","renderSpaceCharCode","sameSelection","otherSelections","equalsArr","DomPosition","CharacterMapping","getPartIndex","partData","getCharIndex","partCount","Uint32Array","_horizontalOffset","setColumnInfo","charOffsetToPartData","charOffset","partLength","partDataToCharOffset","searchEntry","midEntry","minEntry","maxEntry","minPartIndex","minCharIndex","maxCharIndex","RenderLineOutput","_renderLineOutputBrand","renderViewLine","beforeCount","afterCount","lineDecoration","fontIsMonospace","isOverflowing","overflowingCharCount","parts","lastCharacterMappingDefined","visibleColumn","charOffsetInPart","charHorizontalOffset","partDisplacement","tokensLen","part","partEndIndex","partType","partContainsRTL","partRendersWhitespace","partRendersWhitespaceWithWidth","partIsEmptyAndHasPseudoAfter","appendASCIICharCode","partWidth","_charIndex","_visibleColumn","charWidth","producedCharacters","appendCharCode","space","strings","isControlCharacter","to4CharHex","nls","toFixed","_renderLine","lineContainsRTL","tokenIndex","getCount","getEndOffset","getClassName","tokenContainsRTL","transformAndRemoveOverflowing","lastLinePart","tokenEndIndex","extractControlCharacters","onlyBoundary","onlyTrailing","generateLinePartForEachWhitespace","tokenType","tokensLength","lineIsEmptyOrWhitespace","wasInWhitespace","currentSelectionIndex","currentSelection","tmpIndent","isInWhitespace","nextChCode","generateWhitespace","lastCharCode","_applyRenderWhitespace","_lineDecorations","normalize","lineDecorationsLen","lineDecorationIndex","lastResultEndIndex","tokenMetadata","lastTokenEndIndex","_applyInlineDecorations","onlyAtSpaces","lastSpaceOffset","currTokenStart","piecesCount","pieceEndIndex","splitLargeTokens","ResolvedRenderLineInput","resolveRenderLineInput","RenderLineOutput2","renderViewLine2","out","build","MicrotaskDelay","roundFloat","number","decimalPoints","decimal","pow","RGBA","g","_rgbaBrand","HSLA","h","_hslaBrand","fromRGBA","rgba","chroma","_hue2rgb","q","toRGBA","hsla","HSVA","v","_hsvaBrand","cmax","m","hsva","Color","hex","Format","CSS","parseHex","red","_hsla","_hsva","getRelativeLuminance","_relativeLuminanceForComponent","isLighter","isLighterThan","another","isDarkerThan","lighten","factor","darken","isTransparent","isOpaque","opposite","makeOpaque","opaqueBackground","_toString","getLighterColor","of","relative","lum1","lum2","getDarkerColor","blue","green","cyan","lightgrey","_toTwoDigitHex","_parseHexDigit","formatRGB","formatRGBA","formatHSL","formatHSLA","formatHex","formatHexA","compact","WindowManager","mapWindowIdToZoomFactor","INSTANCE","getZoomFactor","getWindowId","addMatchMediaChangeListener","matchMedia","addEventListener","userAgent","isFirefox","isWebKit","isChrome","isSafari","isWebkitWebView","isAndroid","standalone","standaloneMatchMedia","fullScreenMatchMedia","isStandalone","sameOriginWindowChainCache","WeakMap","getParentWindowIfSameOrigin","w","location","parentLocation","origin","IframeUtils","getSameOriginWindowChain","windowChainCache","WeakRef","iframeElement","frameElement","getPositionOfChildWindowRelativeToAncestorWindow","childWindow","ancestorWindow","windowChain","windowChainEl","windowInChain","deref","boundingRect","StandardMouseEvent","timestamp","leftButton","button","middleButton","rightButton","pageX","pageY","iframeOffsets","view","StandardWheelEvent","deltaX","deltaY","targetNode","srcElement","shouldFactorDPR","chromeVersionMatch","e1","e2","devicePixelRatio","wheelDeltaY","VERTICAL_AXIS","axis","ev","deltaMode","DOM_DELTA_LINE","wheelDeltaX","HORIZONTAL_AXIS","wheelDelta","LineDecoration","_lineDecorationBrand","_equals","extractWrapped","lineLength","rLength","dec","minLineColumn","isEmpty","inlineClassName","_typeCompare","ORDER","typeCmp","DecorationSegment","Stack","stopOffsets","classNames","_metadata","consumeLowerThan","maxStopOffset","nextStartOffset","insert","stopOffset","LineDecorationsNormalizer","charCodeBefore","currentStartOffset","currentEndOffset","ok","message","assertNever","softAssert","condition","assertFn","checkAdjacentItems","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","ViewEventHandler","_shouldRender","shouldRender","forceShouldRender","setShouldRender","onDidRender","onCompositionStart","onCompositionEnd","onConfigurationChanged","onCursorStateChanged","onFlushed","onFocusChanged","onLanguageConfigurationChanged","onLineMappingChanged","onLinesChanged","onLinesDeleted","onLinesInserted","onRevealRangeRequest","onScrollChanged","onThemeChanged","onTokensColorsChanged","onZonesChanged","handleEvents","events","info","registerWindow","getWindow","getDocument","getWindows","getWindowsCount","getWindowById","hasWindow","onDidRegisterWindow","onWillUnregisterWindow","onDidUnregisterWindow","windows","mainWindowRegistration","disposables","None","registeredWindow","addDisposableListener","EventType","BEFORE_UNLOAD","size","windowId","fallbackToMain","candidateNode","defaultView","candidateEvent","clearNode","DomListener","_node","_type","_handler","removeEventListener","useCaptureOrOptions","_wrapAsStandardMouseEvent","addStandardDisposableListener","useCapture","wrapHandler","_wrapAsStandardKeyboardEvent","addStandardDisposableGenericMouseDownListener","addDisposableGenericMouseDownListener","runWhenWindowIdle","WindowIdleValue","runAtThisOrScheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","WindowIntervalTimer","defaultTarget","AnimationFrameQueueItem","priority","_runner","_canceled","execute","getClientArea","fallback","elDocument","Dimension","clientWidth","clientHeight","visualViewport","innerWidth","innerHeight","NEXT_QUEUE","CURRENT_QUEUE","animFrameRequested","inAnimationFrameRunner","targetWindowId","nextQueue","requestAnimationFrame","currentQueue","animationFrameRunner","SizeUtils","convertToPixels","parseFloat","getDimension","cssPropertyName","jsPropertyName","computedStyle","getBorderLeftWidth","getBorderRightWidth","getBorderTopWidth","getBorderBottomWidth","getPaddingLeft","getPaddingRight","getPaddingTop","getPaddingBottom","getMarginLeft","getMarginTop","getMarginRight","getMarginBottom","is","lift","getTopLeftOffset","offsetParent","offsetTop","offsetLeft","isShadowRoot","direction","getDomNodePagePosition","bb","getDomNodeZoomLevel","testElement","zoom","elementZoomLevel","getTotalWidth","margin","getContentWidth","border","padding","getContentHeight","getTotalHeight","isAncestor","testChild","testAncestor","contains","hasParentWithClass","clazz","stopAtClazzOrNode","findParentWithClass","mode","isInShadowDOM","getShadowRoot","getActiveElement","getActiveDocument","activeElement","isActiveElement","isAncestorOfActiveElement","ancestor","find","hasFocus","getActiveWindow","globalStylesheets","createStyleSheet2","WrappedStyleElement","_currentCssStyle","_styleSheet","setStyle","cssStyle","createStyleSheet","head","container","beforeAppend","disposableStore","media","globalStylesheetClones","cloneDisposable","cloneGlobalStyleSheet","globalStylesheet","getDynamicStyleSheetRules","sheet","insertRule","cssText","cssRules","sharedMutationObserver","observe","childList","mutationObservers","mutationObserversPerTarget","optionsHash","mutationObserverPerOptions","users","onDidMutate","observer","MutationObserver","mutations","resolvedMutationObserverPerOptions","disconnect","_sharedStyleSheet","getSharedStyleSheet","rules","createCSSRule","clonedGlobalStylesheet","removeCSSRulesContainingSelector","ruleName","toDelete","isCSSStyleRule","selectorText","deleteRule","isHTMLElement","HTMLElement","isHTMLAnchorElement","HTMLAnchorElement","isSVGElement","SVGElement","isMouseEvent","MouseEvent","isKeyboardEvent","KeyboardEvent","CLICK","AUXCLICK","DBLCLICK","MOUSE_UP","MOUSE_OVER","MOUSE_MOVE","MOUSE_OUT","MOUSE_ENTER","MOUSE_WHEEL","CONTEXT_MENU","WHEEL","KEY_DOWN","KEY_PRESS","KEY_UP","LOAD","UNLOAD","PAGE_SHOW","PAGE_HIDE","PASTE","ABORT","ERROR","RESIZE","SCROLL","FULLSCREEN_CHANGE","WK_FULLSCREEN_CHANGE","SELECT","CHANGE","SUBMIT","RESET","FOCUS","FOCUS_IN","FOCUS_OUT","BLUR","INPUT","STORAGE","DRAG_START","DRAG","DRAG_ENTER","DRAG_LEAVE","DRAG_OVER","DROP","DRAG_END","ANIMATION_START","ANIMATION_END","ANIMATION_ITERATION","isEventLike","EventHelper","stop","cancelBubble","saveParentsScrollTop","restoreParentsScrollTop","state","FocusTracker","hasFocusWithin","_onDidFocus","onDidFocus","_onDidBlur","onDidBlur","loosingFocus","onFocus","onBlur","_refreshStateHandler","trackFocus","sibling","append","prepend","reset","SELECTOR_REGEX","Namespace","_$","namespace","description","attrs","HTML","createElementNS","$","visible","elements","show","hide","computeScreenAwareSize","cssPx","screenPx","windowOpenNoOpener","open","animate","stepDisposable","asCSSUrl","asCSSPropertyValue","asCssValueWithDefault","cssPropertyValue","dflt","variableMatch","varArguments","hookDomPurifyHrefAndSrcSanitizer","allowedProtocols","allowDataImages","anchor","href","includes","protocol","SVG","basicMarkupHtmlTags","ModifierKeyEmitter","_subscriptions","_keyStatus","runAndSubscribe","registerListeners","defaultPrevented","repeat","lastKeyPressed","lastKeyReleased","resetKeyStatus","keyStatus","doResetKeyStatus","instance","DragAndDropObserver","callbacks","dragStartTime","onDragStart","onDrag","timeStamp","onDragEnter","onDragOver","onDragLeave","onDragEnd","onDrop","H_REGEX","groups","assign","cssKey","setProperty","camelCaseToHyphenCase","tabIndex","svgElem","quickInputBackground","quickInputForeground","quickInputTitleBackground","pickerGroupForeground","pickerGroupBorder","_deprecatedQuickInputListFocusBackground","quickInputListFocusForeground","quickInputListFocusIconForeground","quickInputListFocusBackground","decodeKeybinding","keybinding","OS","firstChord","secondChord","Keybinding","createSimpleKeybinding","chords","ctrlCmd","winCtrl","KeyCodeChord","isDuplicateModifierCase","ResolvedChord","keyLabel","keyAriaLabel","ResolvedKeybinding","AtomicTabMoveOperations","whitespaceVisibleColumn","prevTabStopPosition","prevTabStopVisibleColumn","nextRenderTabStop","currentVisibleColumn","targetVisibleColumn","MINIMAP_GUTTER_WIDTH","ConfigurationChangedEvent","_values","hasChanged","ComputeOptionsMemory","stableMinimapLayoutInput","stableFitMaxMinimapScale","stableFitRemainingWidth","BaseEditorOption","applyUpdate","compute","env","ApplyUpdateResult","newValue","didChange","arrayEquals","ComputedEditorOption","validate","SimpleEditorOption","boolean","EditorBooleanOption","default","clampedInt","minimum","maximum","EditorIntOption","clampedFloat","EditorFloatOption","float","clamp","validationFn","EditorStringOption","string","stringSet","allowedValues","renamedValues","EditorStringEnumOption","enum","_allowedValues","EditorEnumOption","defaultStringValue","convert","_convert","TextEditorCursorStyle","ShowLightbulbIconMode","EditorFontLigatures","ON","anyOf","EditorFontVariations","TRANSLATE","EditorFontWeight","SUGGESTION_VALUES","MINIMUM_VALUE","MAXIMUM_VALUE","EDITOR_FONT_DEFAULTS","errorMessage","EditorLayoutInfoComputer","computeLayout","memory","outerWidth","outerHeight","isDominatedByLongLines","viewLineCount","lineNumbersDigitCount","maxDigitWidth","pixelRatio","glyphMarginDecorationLaneCount","computeContainedMinimapLineCount","typicalViewportLineCount","extraLinesBeforeFirstLine","paddingTop","extraLinesBeyondLastLine","paddingBottom","scrollBeyondLastLine","desiredRatio","minimapLineCount","_computeMinimapLayout","minimap","enabled","renderMinimap","minimapLeft","minimapWidth","minimapHeightIsEditorHeight","minimapIsSampling","minimapScale","minimapLineHeight","minimapCanvasInnerWidth","minimapCanvasInnerHeight","minimapCanvasOuterWidth","minimapCanvasOuterHeight","couldUseMemory","side","showSlider","renderCharacters","scale","verticalScrollbarWidth","isViewportWrapping","minimapRenderCharacters","minimapMaxColumn","minimapSize","minimapSide","remainingWidth","baseCharHeight","minimapCharWidth","minimapWidthMultiplier","fitBecomesFill","maxMinimapScale","effectiveMinimapHeight","configuredMinimapScale","minimapMaxWidth","wordWrapOverride2","wordWrapOverride1","wordWrap","wordWrapColumn","showGlyphMargin","showLineNumbers","renderType","lineNumbersMinChars","scrollbar","verticalScrollbarSize","verticalScrollbarHasArrows","verticalHasArrows","scrollbarArrowSize","arrowSize","horizontalScrollbarHeight","horizontalScrollbarSize","folding","showFoldingDecoration","lineDecorationsWidth","digitCount","lineNumbersLeft","decorationsLeft","isWordWrapMinified","wrappingColumn","minimapLayout","contentWidth","viewportColumn","verticalArrowSize","decorationsWidth","overviewRuler","filterValidationDecorations","renderValidationDecorations","_scrollbarVisibilityFromString","inUntrustedWorkspace","unicodeHighlightConfigKeys","allowedCharacters","invisibleCharacters","nonBasicASCII","ambiguousCharacters","includeComments","includeStrings","allowedLocales","primitiveSet","editorOptionsRegistry","register","option","EditorOptions","acceptSuggestionOnCommitCharacter","markdownDescription","acceptSuggestionOnEnter","markdownEnumDescriptions","accessibilitySupport","enumDescriptions","tags","accessibilityPageSize","ariaLabel","ariaRequired","screenReaderAnnounceInlineSuggestion","autoClosingBrackets","autoClosingComments","autoClosingDelete","autoClosingOvertype","autoClosingQuotes","autoIndent","automaticLayout","autoSurround","bracketPairColorization","defaults","bracketPairColorizationOptions","independentColorPoolPerBracketType","_input","bracketPairGuides","bracketPairs","bracketPairsHorizontal","highlightActiveBracketPair","indentation","highlightActiveIndentation","codeLens","codeLensFontFamily","codeLensFontSize","colorDecorators","colorDecoratorActivatedOn","colorDecoratorsLimit","columnSelection","comments","insertSpace","ignoreEmptyLines","contextmenu","copyWithSyntaxHighlighting","cursorBlinking","cursorBlinkingStyle","cursorSmoothCaretAnimation","cursorStyle","Line","Block","Underline","LineThin","BlockOutline","UnderlineThin","cursorSurroundingLines","cursorSurroundingLinesStyle","cursorWidth","disableLayerHinting","disableMonospaceOptimizations","domReadOnly","dragAndDrop","emptySelectionClipboard","dropIntoEditor","showDropSelector","stickyScroll","maxLineCount","defaultModel","scrollWithEditor","extraEditorClassName","fastScrollSensitivity","cursorMoveOnType","seedSearchStringFromSelection","autoFindInSelection","globalFindClipboard","addExtraSpaceOnTop","included","fixedOverflowWidgets","foldingStrategy","foldingHighlight","foldingImportsByDefault","foldingMaximumRegions","unfoldOnClickAfterEndOfLine","fontLigatures2","fontVariations","formatOnPaste","formatOnType","glyphMargin","gotoLocation","multiple","multipleDefinitions","multipleTypeDefinitions","multipleDeclarations","multipleImplementations","multipleReferences","multipleTests","alternativeDefinitionCommand","alternativeTypeDefinitionCommand","alternativeDeclarationCommand","alternativeImplementationCommand","alternativeReferenceCommand","alternativeTestsCommand","jsonSubset","alternativeCommandOptions","deprecationMessage","hideCursorInOverviewRuler","hover","hidingDelay","sticky","above","inDiffEditor","lightbulb","OnCode","Off","On","lineNumbers","renderFn","linkedEditing","links","matchBrackets","autohide","showRegionSectionHeaders","showMarkSectionHeaders","sectionHeaderFontSize","sectionHeaderLetterSpacing","mouseStyle","mouseWheelScrollSensitivity","mouseWheelZoom","multiCursorMergeOverlapping","multiCursorModifier","comment","multiCursorPaste","multiCursorLimit","occurrencesHighlight","overviewRulerBorder","overviewRulerLanes","pasteAs","showPasteSelector","parameterHints","cycle","peekWidgetDefaultFocus","placeholder","definitionLinkOpensInPeek","quickSuggestions","types","additionalProperties","validatedOther","validatedComments","validatedStrings","quickSuggestionsDelay","readOnly","readOnlyMessage","renameOnType","markdownDeprecationMessage","restricted","renderFinalNewline","renderLineHighlight","renderLineHighlightOnlyWhenFocus","revealHorizontalRightPadding","roundedSelection","rulers","columnSchema","_element","vertical","horizontal","useShadows","horizontalHasArrows","horizontalSliderSize","verticalSliderSize","handleMouseWheel","alwaysConsumeMouseWheel","scrollByPage","ignoreHorizontalScrollbarInContentHeight","scrollBeyondLastColumn","scrollPredominantAxis","selectionClipboard","selectionHighlight","selectOnLineNumbers","showFoldingControls","showUnused","showDeprecated","inlayHints","snippetSuggestions","smartSelect","selectLeadingAndTrailingWhitespace","selectSubwords","smoothScrolling","suggest","insertMode","filterGraceful","snippetsPreventQuickSuggestions","localityBonus","shareSuggestSelections","selectionMode","showIcons","showStatusBar","preview","previewMode","showInlineDetails","showMethods","showFunctions","showConstructors","matchOnWordStartOnly","showFields","showVariables","showClasses","showStructs","showInterfaces","showModules","showProperties","showEvents","showOperators","showUnits","showValues","showConstants","showEnums","showEnumMembers","showKeywords","showWords","showColors","showFiles","showReferences","showFolders","showTypeParameters","showSnippets","showUsers","showIssues","inlineSuggest","showToolbar","suppressSuggestions","keepOnBlur","inlineEdit","inlineCompletionsAccessibilityVerbose","suggestFontSize","suggestLineHeight","suggestOnTriggerCharacters","suggestSelection","tabCompletion","unicodeHighlight","_os","_vscode","validateBooleanMap","unusualLineTerminators","useShadowDOM","useTabStops","wordBreak","wordSegmenterLocales","validLocales","Intl","Segmenter","supportedLocalesOf","wordSeparators","wordWrapBreakAfterCharacters","wordWrapBreakBeforeCharacters","editorClassName","defaultColorDecorators","tabFocusMode","wrappingInfo","wrappingIndent","wrappingStrategy","identity","LRUCachedFunction","arg1","arg2","lastCache","lastArgKey","_fn","_computeKey","CachedFunction","cachedValues","_map","_map2"],"sourceRoot":""}