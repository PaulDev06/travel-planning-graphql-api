{"version":3,"file":"100.js","mappings":"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","sources":["webpack://ruru/../../node_modules/mermaid/dist/chunks/mermaid.core/chunk-ANTBXLJU.mjs","webpack://ruru/../../node_modules/mermaid/dist/chunks/mermaid.core/pieDiagram-DBDJKBY4.mjs"],"sourcesContent":["import {\n  __name\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/diagrams/common/populateCommonDb.ts\nfunction populateCommonDb(ast, db) {\n  if (ast.accDescr) {\n    db.setAccDescription?.(ast.accDescr);\n  }\n  if (ast.accTitle) {\n    db.setAccTitle?.(ast.accTitle);\n  }\n  if (ast.title) {\n    db.setDiagramTitle?.(ast.title);\n  }\n}\n__name(populateCommonDb, \"populateCommonDb\");\n\nexport {\n  populateCommonDb\n};\n","import {\n  populateCommonDb\n} from \"./chunk-ANTBXLJU.mjs\";\nimport {\n  cleanAndMerge,\n  parseFontSize\n} from \"./chunk-U37J5Y7L.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-T57MJCP2.mjs\";\nimport {\n  __name,\n  clear,\n  configureSvgSize,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig2 as getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-VIW5F6AA.mjs\";\n\n// src/diagrams/pie/pieParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/pie/pieDb.ts\nvar DEFAULT_PIE_CONFIG = defaultConfig_default.pie;\nvar DEFAULT_PIE_DB = {\n  sections: /* @__PURE__ */ new Map(),\n  showData: false,\n  config: DEFAULT_PIE_CONFIG\n};\nvar sections = DEFAULT_PIE_DB.sections;\nvar showData = DEFAULT_PIE_DB.showData;\nvar config = structuredClone(DEFAULT_PIE_CONFIG);\nvar getConfig2 = /* @__PURE__ */ __name(() => structuredClone(config), \"getConfig\");\nvar clear2 = /* @__PURE__ */ __name(() => {\n  sections = /* @__PURE__ */ new Map();\n  showData = DEFAULT_PIE_DB.showData;\n  clear();\n}, \"clear\");\nvar addSection = /* @__PURE__ */ __name(({ label, value }) => {\n  if (value < 0) {\n    throw new Error(\n      `\"${label}\" has invalid value: ${value}. Negative values are not allowed in pie charts. All slice values must be >= 0.`\n    );\n  }\n  if (!sections.has(label)) {\n    sections.set(label, value);\n    log.debug(`added new section: ${label}, with value: ${value}`);\n  }\n}, \"addSection\");\nvar getSections = /* @__PURE__ */ __name(() => sections, \"getSections\");\nvar setShowData = /* @__PURE__ */ __name((toggle) => {\n  showData = toggle;\n}, \"setShowData\");\nvar getShowData = /* @__PURE__ */ __name(() => showData, \"getShowData\");\nvar db = {\n  getConfig: getConfig2,\n  clear: clear2,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addSection,\n  getSections,\n  setShowData,\n  getShowData\n};\n\n// src/diagrams/pie/pieParser.ts\nvar populateDb = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  db2.setShowData(ast.showData);\n  ast.sections.map(db2.addSection);\n}, \"populateDb\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"pie\", input);\n    log.debug(ast);\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/pie/pieStyles.ts\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${options.pieOuterStrokeColor};\n    stroke-width: ${options.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`, \"getStyles\");\nvar pieStyles_default = getStyles;\n\n// src/diagrams/pie/pieRenderer.ts\nimport { arc, pie as d3pie, scaleOrdinal } from \"d3\";\nvar createPieArcs = /* @__PURE__ */ __name((sections2) => {\n  const sum = [...sections2.values()].reduce((acc, val) => acc + val, 0);\n  const pieData = [...sections2.entries()].map(([label, value]) => ({ label, value })).filter((d) => d.value / sum * 100 >= 1).sort((a, b) => b.value - a.value);\n  const pie = d3pie().value((d) => d.value);\n  return pie(pieData);\n}, \"createPieArcs\");\nvar draw = /* @__PURE__ */ __name((text, id, _version, diagObj) => {\n  log.debug(\"rendering pie chart\\n\" + text);\n  const db2 = diagObj.db;\n  const globalConfig = getConfig();\n  const pieConfig = cleanAndMerge(db2.getConfig(), globalConfig.pie);\n  const MARGIN = 40;\n  const LEGEND_RECT_SIZE = 18;\n  const LEGEND_SPACING = 4;\n  const height = 450;\n  const pieWidth = height;\n  const svg = selectSvgElement(id);\n  const group = svg.append(\"g\");\n  group.attr(\"transform\", \"translate(\" + pieWidth / 2 + \",\" + height / 2 + \")\");\n  const { themeVariables } = globalConfig;\n  let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\n  outerStrokeWidth ??= 2;\n  const textPosition = pieConfig.textPosition;\n  const radius = Math.min(pieWidth, height) / 2 - MARGIN;\n  const arcGenerator = arc().innerRadius(0).outerRadius(radius);\n  const labelArcGenerator = arc().innerRadius(radius * textPosition).outerRadius(radius * textPosition);\n  group.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius + outerStrokeWidth / 2).attr(\"class\", \"pieOuterCircle\");\n  const sections2 = db2.getSections();\n  const arcs = createPieArcs(sections2);\n  const myGeneratedColors = [\n    themeVariables.pie1,\n    themeVariables.pie2,\n    themeVariables.pie3,\n    themeVariables.pie4,\n    themeVariables.pie5,\n    themeVariables.pie6,\n    themeVariables.pie7,\n    themeVariables.pie8,\n    themeVariables.pie9,\n    themeVariables.pie10,\n    themeVariables.pie11,\n    themeVariables.pie12\n  ];\n  let sum = 0;\n  sections2.forEach((section) => {\n    sum += section;\n  });\n  const filteredArcs = arcs.filter((datum) => (datum.data.value / sum * 100).toFixed(0) !== \"0\");\n  const color = scaleOrdinal(myGeneratedColors);\n  group.selectAll(\"mySlices\").data(filteredArcs).enter().append(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", (datum) => {\n    return color(datum.data.label);\n  }).attr(\"class\", \"pieCircle\");\n  group.selectAll(\"mySlices\").data(filteredArcs).enter().append(\"text\").text((datum) => {\n    return (datum.data.value / sum * 100).toFixed(0) + \"%\";\n  }).attr(\"transform\", (datum) => {\n    return \"translate(\" + labelArcGenerator.centroid(datum) + \")\";\n  }).style(\"text-anchor\", \"middle\").attr(\"class\", \"slice\");\n  group.append(\"text\").text(db2.getDiagramTitle()).attr(\"x\", 0).attr(\"y\", -(height - 50) / 2).attr(\"class\", \"pieTitleText\");\n  const allSectionData = [...sections2.entries()].map(([label, value]) => ({\n    label,\n    value\n  }));\n  const legend = group.selectAll(\".legend\").data(allSectionData).enter().append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", (_datum, index) => {\n    const height2 = LEGEND_RECT_SIZE + LEGEND_SPACING;\n    const offset = height2 * allSectionData.length / 2;\n    const horizontal = 12 * LEGEND_RECT_SIZE;\n    const vertical = index * height2 - offset;\n    return \"translate(\" + horizontal + \",\" + vertical + \")\";\n  });\n  legend.append(\"rect\").attr(\"width\", LEGEND_RECT_SIZE).attr(\"height\", LEGEND_RECT_SIZE).style(\"fill\", (d) => color(d.label)).style(\"stroke\", (d) => color(d.label));\n  legend.append(\"text\").attr(\"x\", LEGEND_RECT_SIZE + LEGEND_SPACING).attr(\"y\", LEGEND_RECT_SIZE - LEGEND_SPACING).text((d) => {\n    if (db2.getShowData()) {\n      return `${d.label} [${d.value}]`;\n    }\n    return d.label;\n  });\n  const longestTextWidth = Math.max(\n    ...legend.selectAll(\"text\").nodes().map((node) => node?.getBoundingClientRect().width ?? 0)\n  );\n  const totalWidth = pieWidth + MARGIN + LEGEND_RECT_SIZE + LEGEND_SPACING + longestTextWidth;\n  svg.attr(\"viewBox\", `0 0 ${totalWidth} ${height}`);\n  configureSvgSize(svg, height, totalWidth, pieConfig.useMaxWidth);\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/pie/pieDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles: pieStyles_default\n};\nexport {\n  diagram\n};\n"],"names":["populateCommonDb","ast","db","accDescr","setAccDescription","accTitle","setAccTitle","title","setDiagramTitle","DEFAULT_PIE_CONFIG","pie","DEFAULT_PIE_DB","sections","Map","showData","config","structuredClone","getConfig2","clear2","addSection","label","value","Error","has","set","debug","getSections","setShowData","toggle","getShowData","getConfig","clear","getDiagramTitle","getAccTitle","getAccDescription","populateDb","db2","map","parser","parse","async","input","pieStyles_default","options","pieStrokeColor","pieStrokeWidth","pieOpacity","pieOuterStrokeColor","pieOuterStrokeWidth","pieTitleTextSize","pieTitleTextColor","fontFamily","pieSectionTextColor","pieSectionTextSize","pieLegendTextColor","pieLegendTextSize","createPieArcs","sections2","sum","values","reduce","acc","val","pieData","entries","filter","d","sort","a","b","diagram","renderer","draw","text","id","_version","diagObj","globalConfig","pieConfig","svg","group","append","attr","themeVariables","outerStrokeWidth","textPosition","radius","Math","min","arcGenerator","innerRadius","outerRadius","labelArcGenerator","arcs","myGeneratedColors","pie1","pie2","pie3","pie4","pie5","pie6","pie7","pie8","pie9","pie10","pie11","pie12","forEach","section","filteredArcs","datum","data","toFixed","color","selectAll","enter","centroid","style","allSectionData","legend","_datum","index","LEGEND_RECT_SIZE","length","totalWidth","pieWidth","max","nodes","node","getBoundingClientRect","width","useMaxWidth","styles"],"sourceRoot":""}