{"version":3,"file":"8549.js","mappings":"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","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/encodedTokenAttributes.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/core/eolCounter.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/editor/common/languages/language.js"],"sourcesContent":["import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n */\nexport class TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & 255 /* MetadataConsts.LANGUAGEID_MASK */) >>> 0 /* MetadataConsts.LANGUAGEID_OFFSET */;\n    }\n    static getTokenType(metadata) {\n        return (metadata & 768 /* MetadataConsts.TOKEN_TYPE_MASK */) >>> 8 /* MetadataConsts.TOKEN_TYPE_OFFSET */;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & 30720 /* MetadataConsts.FONT_STYLE_MASK */) >>> 11 /* MetadataConsts.FONT_STYLE_OFFSET */;\n    }\n    static getForeground(metadata) {\n        return (metadata & 16744448 /* MetadataConsts.FOREGROUND_MASK */) >>> 15 /* MetadataConsts.FOREGROUND_OFFSET */;\n    }\n    static getBackground(metadata) {\n        return (metadata & 4278190080 /* MetadataConsts.BACKGROUND_MASK */) >>> 24 /* MetadataConsts.BACKGROUND_OFFSET */;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            className += ' mtki';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            className += ' mtkb';\n        }\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            className += ' mtku';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & 1 /* FontStyle.Italic */) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & 2 /* FontStyle.Bold */) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & 4 /* FontStyle.Underline */) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & 8 /* FontStyle.Strikethrough */) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n            bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n            underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */),\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function countEOL(text) {\n    let eolCount = 0;\n    let firstLineLength = 0;\n    let lastLineStart = 0;\n    let eol = 0 /* StringEOL.Unknown */;\n    for (let i = 0, len = text.length; i < len; i++) {\n        const chr = text.charCodeAt(i);\n        if (chr === 13 /* CharCode.CarriageReturn */) {\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            if (i + 1 < len && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                // \\r\\n... case\n                eol |= 2 /* StringEOL.CRLF */;\n                i++; // skip \\n\n            }\n            else {\n                // \\r... case\n                eol |= 3 /* StringEOL.Invalid */;\n            }\n            lastLineStart = i + 1;\n        }\n        else if (chr === 10 /* CharCode.LineFeed */) {\n            // \\n... case\n            eol |= 1 /* StringEOL.LF */;\n            if (eolCount === 0) {\n                firstLineLength = i;\n            }\n            eolCount++;\n            lastLineStart = i + 1;\n        }\n    }\n    if (eolCount === 0) {\n        firstLineLength = text.length;\n    }\n    return [eolCount, firstLineLength, text.length - lastLineStart, eol];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const ILanguageService = createDecorator('languageService');\n"],"names":["IThemeService","themeColorFromId","id","getThemeTypeSelector","type","DARK","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","Extensions","ThemingContribution","themingRegistry","constructor","this","themingParticipants","onThemingParticipantAddedEmitter","onColorThemeChange","participant","push","fire","idx","indexOf","splice","getThemingParticipants","registerThemingParticipant","add","Themable","themeService","super","theme","getColorTheme","_register","onDidColorThemeChange","onThemeChange","updateStyles","TokenMetadata","getLanguageId","metadata","getTokenType","containsBalancedBrackets","getFontStyle","getForeground","getBackground","getClassNameFromMetadata","className","fontStyle","getInlineStyleFromMetadata","colorMap","foreground","result","textDecoration","getPresentationFromMetadata","italic","Boolean","bold","underline","strikethrough","countEOL","text","eolCount","firstLineLength","lastLineStart","eol","i","len","length","chr","charCodeAt","ILanguageService"],"sourceRoot":""}