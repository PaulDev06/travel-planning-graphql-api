export const __webpack_id__=226;export const __webpack_ids__=[226];export const __webpack_modules__={4748:(o,r,e)=>{e.d(r,{C9:()=>p,CQ:()=>B,GV:()=>k,H8:()=>I,P9:()=>Q,QI:()=>m,QR:()=>F,Rj:()=>h,U4:()=>y,VF:()=>d,Yo:()=>w,eM:()=>D,ef:()=>l,f4:()=>f,fE:()=>s,fi:()=>A,gt:()=>u,ij:()=>x,k5:()=>O,lO:()=>v,p7:()=>g,pf:()=>S,pn:()=>C,sb:()=>T,uN:()=>b,yI:()=>L});var t=e(12003),i=e(63962),n=e(21233),c=e(70893),a=e(33237);const d=(0,n.x1)("list.focusBackground",null,t.kg("listFocusBackground","List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),l=(0,n.x1)("list.focusForeground",null,t.kg("listFocusForeground","List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),g=(0,n.x1)("list.focusOutline",{dark:c.tA,light:c.tA,hcDark:c.bu,hcLight:c.bu},t.kg("listFocusOutline","List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),u=(0,n.x1)("list.focusAndSelectionOutline",null,t.kg("listFocusAndSelectionOutline","List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.")),h=(0,n.x1)("list.activeSelectionBackground",{dark:"#04395E",light:"#0060C0",hcDark:null,hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},t.kg("listActiveSelectionBackground","List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),k=(0,n.x1)("list.activeSelectionForeground",{dark:i.Q1.white,light:i.Q1.white,hcDark:null,hcLight:null},t.kg("listActiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),s=(0,n.x1)("list.activeSelectionIconForeground",null,t.kg("listActiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),b=(0,n.x1)("list.inactiveSelectionBackground",{dark:"#37373D",light:"#E4E6F1",hcDark:null,hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},t.kg("listInactiveSelectionBackground","List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),f=(0,n.x1)("list.inactiveSelectionForeground",null,t.kg("listInactiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),p=(0,n.x1)("list.inactiveSelectionIconForeground",null,t.kg("listInactiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),B=(0,n.x1)("list.inactiveFocusBackground",null,t.kg("listInactiveFocusBackground","List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),x=(0,n.x1)("list.inactiveFocusOutline",null,t.kg("listInactiveFocusOutline","List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),v=(0,n.x1)("list.hoverBackground",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:i.Q1.white.transparent(.1),hcLight:i.Q1.fromHex("#0F4A85").transparent(.1)},t.kg("listHoverBackground","List/Tree background when hovering over items using the mouse.")),F=(0,n.x1)("list.hoverForeground",null,t.kg("listHoverForeground","List/Tree foreground when hovering over items using the mouse.")),w=(0,n.x1)("list.dropBackground",{dark:"#062F4A",light:"#D6EBFF",hcDark:null,hcLight:null},t.kg("listDropBackground","List/Tree drag and drop background when moving items over other items when using the mouse.")),L=(0,n.x1)("list.dropBetweenBackground",{dark:c.t4,light:c.t4,hcDark:null,hcLight:null},t.kg("listDropBetweenBackground","List/Tree drag and drop border color when moving items between items when using the mouse.")),m=(0,n.x1)("list.highlightForeground",{dark:"#2AAAFF",light:"#0066BF",hcDark:c.tA,hcLight:c.tA},t.kg("highlight","List/Tree foreground color of the match highlights when searching inside the list/tree.")),D=(0,n.x1)("list.focusHighlightForeground",{dark:m,light:(0,n.Hz)(h,m,"#BBE7FF"),hcDark:m,hcLight:m},t.kg("listFocusHighlightForeground","List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.")),C=((0,n.x1)("list.invalidItemForeground",{dark:"#B89500",light:"#B89500",hcDark:"#B89500",hcLight:"#B5200D"},t.kg("invalidItemForeground","List/Tree foreground color for invalid items, for example an unresolved root in explorer.")),(0,n.x1)("list.errorForeground",{dark:"#F88070",light:"#B01011",hcDark:null,hcLight:null},t.kg("listErrorForeground","Foreground color of list items containing errors.")),(0,n.x1)("list.warningForeground",{dark:"#CCA700",light:"#855F00",hcDark:null,hcLight:null},t.kg("listWarningForeground","Foreground color of list items containing warnings.")),(0,n.x1)("listFilterWidget.background",{light:(0,n.e$)(a.Cg,0),dark:(0,n.a)(a.Cg,0),hcDark:a.Cg,hcLight:a.Cg},t.kg("listFilterWidgetBackground","Background color of the type filter widget in lists and trees."))),A=(0,n.x1)("listFilterWidget.outline",{dark:i.Q1.transparent,light:i.Q1.transparent,hcDark:"#f38518",hcLight:"#007ACC"},t.kg("listFilterWidgetOutline","Outline color of the type filter widget in lists and trees.")),Q=(0,n.x1)("listFilterWidget.noMatchesOutline",{dark:"#BE1100",light:"#BE1100",hcDark:c.b1,hcLight:c.b1},t.kg("listFilterWidgetNoMatchesOutline","Outline color of the type filter widget in lists and trees, when there are no matches.")),I=(0,n.x1)("listFilterWidget.shadow",a.f9,t.kg("listFilterWidgetShadow","Shadow color of the type filter widget in lists and trees.")),y=((0,n.x1)("list.filterMatchBackground",{dark:a.Ub,light:a.Ub,hcDark:null,hcLight:null},t.kg("listFilterMatchHighlight","Background color of the filtered match.")),(0,n.x1)("list.filterMatchBorder",{dark:a.EC,light:a.EC,hcDark:c.b1,hcLight:c.bu},t.kg("listFilterMatchHighlightBorder","Border color of the filtered match.")),(0,n.x1)("list.deemphasizedForeground",{dark:"#8C8C8C",light:"#8E8E90",hcDark:"#A7A8A9",hcLight:"#666666"},t.kg("listDeemphasizedForeground","List/Tree foreground color for items that are deemphasized.")),(0,n.x1)("tree.indentGuidesStroke",{dark:"#585858",light:"#a9a9a9",hcDark:"#a9a9a9",hcLight:"#a5a5a5"},t.kg("treeIndentGuidesStroke","Tree stroke color for the indentation guides."))),S=(0,n.x1)("tree.inactiveIndentGuidesStroke",(0,n.JO)(y,.4),t.kg("treeInactiveIndentGuidesStroke","Tree stroke color for the indentation guides that are not active.")),O=(0,n.x1)("tree.tableColumnsBorder",{dark:"#CCCCCC20",light:"#61616120",hcDark:null,hcLight:null},t.kg("tableColumnsBorder","Table border color between columns.")),T=(0,n.x1)("tree.tableOddRowsBackground",{dark:(0,n.JO)(c.CU,.04),light:(0,n.JO)(c.CU,.04),hcDark:null,hcLight:null},t.kg("tableOddRowsBackgroundColor","Background color for odd table rows."));(0,n.x1)("editorActionList.background",a.Cg,t.kg("editorActionListBackground","Action List background color.")),(0,n.x1)("editorActionList.foreground",a.Fi,t.kg("editorActionListForeground","Action List foreground color.")),(0,n.x1)("editorActionList.focusForeground",k,t.kg("editorActionListFocusForeground","Action List foreground color for the focused item.")),(0,n.x1)("editorActionList.focusBackground",h,t.kg("editorActionListFocusBackground","Action List background color for the focused item."))},4968:(o,r,e)=>{var t;function i(o){return o===t.HIGH_CONTRAST_DARK||o===t.HIGH_CONTRAST_LIGHT}function n(o){return o===t.DARK||o===t.HIGH_CONTRAST_DARK}e.d(r,{Bb:()=>i,HD:()=>n,zM:()=>t}),function(o){o.DARK="dark",o.LIGHT="light",o.HIGH_CONTRAST_DARK="hcDark",o.HIGH_CONTRAST_LIGHT="hcLight"}(t||(t={}))},31768:(o,r,e)=>{e.d(r,{BT:()=>k,WM:()=>a,bX:()=>l,cI:()=>u,gn:()=>g,mh:()=>h,zR:()=>d});var t=e(12003),i=e(63962),n=e(21233),c=e(70893);(0,n.x1)("sash.hoverBorder",c.tA,t.kg("sashActiveBorder","Border color of active sashes."));const a=(0,n.x1)("badge.background",{dark:"#4D4D4D",light:"#C4C4C4",hcDark:i.Q1.black,hcLight:"#0F4A85"},t.kg("badgeBackground","Badge background color. Badges are small information labels, e.g. for search results count.")),d=(0,n.x1)("badge.foreground",{dark:i.Q1.white,light:"#333",hcDark:i.Q1.white,hcLight:i.Q1.white},t.kg("badgeForeground","Badge foreground color. Badges are small information labels, e.g. for search results count.")),l=(0,n.x1)("scrollbar.shadow",{dark:"#000000",light:"#DDDDDD",hcDark:null,hcLight:null},t.kg("scrollbarShadow","Scrollbar shadow to indicate that the view is scrolled.")),g=(0,n.x1)("scrollbarSlider.background",{dark:i.Q1.fromHex("#797979").transparent(.4),light:i.Q1.fromHex("#646464").transparent(.4),hcDark:(0,n.JO)(c.b1,.6),hcLight:(0,n.JO)(c.b1,.4)},t.kg("scrollbarSliderBackground","Scrollbar slider background color.")),u=(0,n.x1)("scrollbarSlider.hoverBackground",{dark:i.Q1.fromHex("#646464").transparent(.7),light:i.Q1.fromHex("#646464").transparent(.7),hcDark:(0,n.JO)(c.b1,.8),hcLight:(0,n.JO)(c.b1,.8)},t.kg("scrollbarSliderHoverBackground","Scrollbar slider background color when hovering.")),h=(0,n.x1)("scrollbarSlider.activeBackground",{dark:i.Q1.fromHex("#BFBFBF").transparent(.4),light:i.Q1.fromHex("#000000").transparent(.6),hcDark:c.b1,hcLight:c.b1},t.kg("scrollbarSliderActiveBackground","Scrollbar slider background color when clicked on.")),k=(0,n.x1)("progressBar.background",{dark:i.Q1.fromHex("#0E70C0"),light:i.Q1.fromHex("#0E70C0"),hcDark:c.b1,hcLight:c.b1},t.kg("progressBarBackground","Background color of the progress bar that can show for long running operations."))},50866:(o,r,e)=>{e.d(r,{$$:()=>s,C1:()=>v,C5:()=>K,G_:()=>Q,HD:()=>M,Hc:()=>A,I$:()=>b,In:()=>T,Ip:()=>V,L4:()=>d,L9:()=>f,Oc:()=>W,Q1:()=>I,Qf:()=>z,T5:()=>x,T9:()=>S,UL:()=>B,Uk:()=>_,XJ:()=>y,YS:()=>p,ZB:()=>R,Zg:()=>g,_$:()=>F,c1:()=>k,cw:()=>l,eU:()=>$,eY:()=>L,h9:()=>w,jO:()=>E,jr:()=>q,kP:()=>G,lW:()=>D,nZ:()=>U,r:()=>O,rv:()=>m,t0:()=>N,uN:()=>u,xO:()=>H,xW:()=>J,yq:()=>C,zU:()=>j});var t=e(12003),i=e(63962),n=e(21233),c=e(70893),a=e(33237);const d=(0,n.x1)("input.background",{dark:"#3C3C3C",light:i.Q1.white,hcDark:i.Q1.black,hcLight:i.Q1.white},t.kg("inputBoxBackground","Input box background.")),l=(0,n.x1)("input.foreground",c.CU,t.kg("inputBoxForeground","Input box foreground.")),g=(0,n.x1)("input.border",{dark:null,light:null,hcDark:c.b1,hcLight:c.b1},t.kg("inputBoxBorder","Input box border.")),u=(0,n.x1)("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:c.b1,hcLight:c.b1},t.kg("inputBoxActiveOptionBorder","Border color of activated options in input fields.")),h=(0,n.x1)("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},t.kg("inputOption.hoverBackground","Background color of activated options in input fields.")),k=(0,n.x1)("inputOption.activeBackground",{dark:(0,n.JO)(c.tA,.4),light:(0,n.JO)(c.tA,.2),hcDark:i.Q1.transparent,hcLight:i.Q1.transparent},t.kg("inputOption.activeBackground","Background hover color of options in input fields.")),s=(0,n.x1)("inputOption.activeForeground",{dark:i.Q1.white,light:i.Q1.black,hcDark:c.CU,hcLight:c.CU},t.kg("inputOption.activeForeground","Foreground color of activated options in input fields.")),b=((0,n.x1)("input.placeholderForeground",{light:(0,n.JO)(c.CU,.5),dark:(0,n.JO)(c.CU,.5),hcDark:(0,n.JO)(c.CU,.7),hcLight:(0,n.JO)(c.CU,.7)},t.kg("inputPlaceholderForeground","Input box foreground color for placeholder text.")),(0,n.x1)("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:i.Q1.black,hcLight:i.Q1.white},t.kg("inputValidationInfoBackground","Input validation background color for information severity."))),f=(0,n.x1)("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:c.CU},t.kg("inputValidationInfoForeground","Input validation foreground color for information severity.")),p=(0,n.x1)("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:c.b1,hcLight:c.b1},t.kg("inputValidationInfoBorder","Input validation border color for information severity.")),B=(0,n.x1)("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:i.Q1.black,hcLight:i.Q1.white},t.kg("inputValidationWarningBackground","Input validation background color for warning severity.")),x=(0,n.x1)("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:c.CU},t.kg("inputValidationWarningForeground","Input validation foreground color for warning severity.")),v=(0,n.x1)("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:c.b1,hcLight:c.b1},t.kg("inputValidationWarningBorder","Input validation border color for warning severity.")),F=(0,n.x1)("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:i.Q1.black,hcLight:i.Q1.white},t.kg("inputValidationErrorBackground","Input validation background color for error severity.")),w=(0,n.x1)("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:c.CU},t.kg("inputValidationErrorForeground","Input validation foreground color for error severity.")),L=(0,n.x1)("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:c.b1,hcLight:c.b1},t.kg("inputValidationErrorBorder","Input validation border color for error severity.")),m=(0,n.x1)("dropdown.background",{dark:"#3C3C3C",light:i.Q1.white,hcDark:i.Q1.black,hcLight:i.Q1.white},t.kg("dropdownBackground","Dropdown background.")),D=(0,n.x1)("dropdown.listBackground",{dark:null,light:null,hcDark:i.Q1.black,hcLight:i.Q1.white},t.kg("dropdownListBackground","Dropdown list background.")),C=(0,n.x1)("dropdown.foreground",{dark:"#F0F0F0",light:c.CU,hcDark:i.Q1.white,hcLight:c.CU},t.kg("dropdownForeground","Dropdown foreground.")),A=(0,n.x1)("dropdown.border",{dark:m,light:"#CECECE",hcDark:c.b1,hcLight:c.b1},t.kg("dropdownBorder","Dropdown border.")),Q=(0,n.x1)("button.foreground",i.Q1.white,t.kg("buttonForeground","Button foreground color.")),I=(0,n.x1)("button.separator",(0,n.JO)(Q,.4),t.kg("buttonSeparator","Button separator color.")),y=(0,n.x1)("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},t.kg("buttonBackground","Button background color.")),S=(0,n.x1)("button.hoverBackground",{dark:(0,n.a)(y,.2),light:(0,n.e$)(y,.2),hcDark:y,hcLight:y},t.kg("buttonHoverBackground","Button background color when hovering.")),O=(0,n.x1)("button.border",c.b1,t.kg("buttonBorder","Button border color.")),T=(0,n.x1)("button.secondaryForeground",{dark:i.Q1.white,light:i.Q1.white,hcDark:i.Q1.white,hcLight:c.CU},t.kg("buttonSecondaryForeground","Secondary button foreground color.")),H=(0,n.x1)("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:i.Q1.white},t.kg("buttonSecondaryBackground","Secondary button background color.")),U=(0,n.x1)("button.secondaryHoverBackground",{dark:(0,n.a)(H,.2),light:(0,n.e$)(H,.2),hcDark:null,hcLight:null},t.kg("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),E=(0,n.x1)("radio.activeForeground",s,t.kg("radioActiveForeground","Foreground color of active radio option.")),_=(0,n.x1)("radio.activeBackground",k,t.kg("radioBackground","Background color of active radio option.")),V=(0,n.x1)("radio.activeBorder",u,t.kg("radioActiveBorder","Border color of the active radio option.")),G=(0,n.x1)("radio.inactiveForeground",null,t.kg("radioInactiveForeground","Foreground color of inactive radio option.")),J=(0,n.x1)("radio.inactiveBackground",null,t.kg("radioInactiveBackground","Background color of inactive radio option.")),R=(0,n.x1)("radio.inactiveBorder",{light:(0,n.JO)(E,.2),dark:(0,n.JO)(E,.2),hcDark:(0,n.JO)(E,.4),hcLight:(0,n.JO)(E,.2)},t.kg("radioInactiveBorder","Border color of the inactive radio option.")),q=(0,n.x1)("radio.inactiveHoverBackground",h,t.kg("radioHoverBackground","Background color of inactive active radio option when hovering.")),W=(0,n.x1)("checkbox.background",m,t.kg("checkbox.background","Background color of checkbox widget.")),N=((0,n.x1)("checkbox.selectBackground",a.Cg,t.kg("checkbox.select.background","Background color of checkbox widget when the element it's in is selected.")),(0,n.x1)("checkbox.foreground",C,t.kg("checkbox.foreground","Foreground color of checkbox widget."))),K=(0,n.x1)("checkbox.border",A,t.kg("checkbox.border","Border color of checkbox widget.")),M=((0,n.x1)("checkbox.selectBorder",c.t4,t.kg("checkbox.select.border","Border color of checkbox widget when the element it's in is selected.")),(0,n.x1)("keybindingLabel.background",{dark:new i.Q1(new i.bU(128,128,128,.17)),light:new i.Q1(new i.bU(221,221,221,.4)),hcDark:i.Q1.transparent,hcLight:i.Q1.transparent},t.kg("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut."))),$=(0,n.x1)("keybindingLabel.foreground",{dark:i.Q1.fromHex("#CCCCCC"),light:i.Q1.fromHex("#555555"),hcDark:i.Q1.white,hcLight:c.CU},t.kg("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),j=(0,n.x1)("keybindingLabel.border",{dark:new i.Q1(new i.bU(51,51,51,.6)),light:new i.Q1(new i.bU(204,204,204,.4)),hcDark:new i.Q1(new i.bU(111,195,223)),hcLight:c.b1},t.kg("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),z=(0,n.x1)("keybindingLabel.bottomBorder",{dark:new i.Q1(new i.bU(68,68,68,.6)),light:new i.Q1(new i.bU(187,187,187,.4)),hcDark:new i.Q1(new i.bU(111,195,223)),hcLight:c.CU},t.kg("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut."))},73187:(o,r,e)=>{e.d(r,{D7:()=>s,SN:()=>k,Ux:()=>h,c6:()=>g,dd:()=>l,g$:()=>d,pm:()=>u});var t=e(12003),i=e(21233),n=e(70893),c=e(50866),a=e(4748);const d=(0,i.x1)("menu.border",{dark:null,light:null,hcDark:n.b1,hcLight:n.b1},t.kg("menuBorder","Border color of menus.")),l=(0,i.x1)("menu.foreground",c.yq,t.kg("menuForeground","Foreground color of menu items.")),g=(0,i.x1)("menu.background",c.rv,t.kg("menuBackground","Background color of menu items.")),u=(0,i.x1)("menu.selectionForeground",a.GV,t.kg("menuSelectionForeground","Foreground color of the selected menu item in menus.")),h=(0,i.x1)("menu.selectionBackground",a.Rj,t.kg("menuSelectionBackground","Background color of the selected menu item in menus.")),k=(0,i.x1)("menu.selectionBorder",{dark:null,light:null,hcDark:n.bu,hcLight:n.bu},t.kg("menuSelectionBorder","Border color of the selected menu item in menus.")),s=(0,i.x1)("menu.separatorBackground",{dark:"#606060",light:"#D4D4D4",hcDark:n.b1,hcLight:n.b1},t.kg("menuSeparatorBackground","Color of a separator menu item in menus."))},79352:(o,r,e)=>{e.d(r,{Al:()=>f,EL:()=>d,HJ:()=>l,NB:()=>u,c7:()=>b,er:()=>g,iw:()=>h,nH:()=>s});var t=e(12003),i=e(63962),n=e(21233),c=e(33237),a=e(4748);const d=(0,n.x1)("quickInput.background",c.Cg,t.kg("pickerBackground","Quick picker background color. The quick picker widget is the container for pickers like the command palette.")),l=(0,n.x1)("quickInput.foreground",c.Fi,t.kg("pickerForeground","Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")),g=(0,n.x1)("quickInputTitle.background",{dark:new i.Q1(new i.bU(255,255,255,.105)),light:new i.Q1(new i.bU(0,0,0,.06)),hcDark:"#000000",hcLight:i.Q1.white},t.kg("pickerTitleBackground","Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")),u=(0,n.x1)("pickerGroup.foreground",{dark:"#3794FF",light:"#0066BF",hcDark:i.Q1.white,hcLight:"#0F4A85"},t.kg("pickerGroupForeground","Quick picker color for grouping labels.")),h=(0,n.x1)("pickerGroup.border",{dark:"#3F3F46",light:"#CCCEDB",hcDark:i.Q1.white,hcLight:"#0F4A85"},t.kg("pickerGroupBorder","Quick picker color for grouping borders.")),k=(0,n.x1)("quickInput.list.focusBackground",null,"",void 0,t.kg("quickInput.list.focusBackground deprecation","Please use quickInputList.focusBackground instead")),s=(0,n.x1)("quickInputList.focusForeground",a.GV,t.kg("quickInput.listFocusForeground","Quick picker foreground color for the focused item.")),b=(0,n.x1)("quickInputList.focusIconForeground",a.fE,t.kg("quickInput.listFocusIconForeground","Quick picker icon foreground color for the focused item.")),f=(0,n.x1)("quickInputList.focusBackground",{dark:(0,n.yL)(k,a.Rj),light:(0,n.yL)(k,a.Rj),hcDark:null,hcLight:null},t.kg("quickInput.listFocusBackground","Quick picker background color for the focused item."))}};
//# sourceMappingURL=226.js.map