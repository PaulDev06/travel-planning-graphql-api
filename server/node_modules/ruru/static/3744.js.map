{"version":3,"file":"3744.js","mappings":"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","sources":["webpack://ruru/../../node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://ruru/../../node_modules/lodash-es/_baseSlice.js","webpack://ruru/../../node_modules/lodash-es/drop.js","webpack://ruru/../../node_modules/lodash-es/assign.js","webpack://ruru/../../node_modules/lodash-es/pickBy.js","webpack://ruru/../../node_modules/lodash-es/isRegExp.js","webpack://ruru/../../node_modules/lodash-es/_baseIsRegExp.js","webpack://ruru/../../node_modules/@chevrotain/gast/lib/src/model.js","webpack://ruru/../../node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://ruru/../../node_modules/lodash-es/_baseSome.js","webpack://ruru/../../node_modules/lodash-es/some.js","webpack://ruru/../../node_modules/lodash-es/includes.js","webpack://ruru/../../node_modules/lodash-es/_arrayEvery.js","webpack://ruru/../../node_modules/lodash-es/_baseEvery.js","webpack://ruru/../../node_modules/lodash-es/every.js","webpack://ruru/../../node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://ruru/../../node_modules/lodash-es/uniq.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/constants.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://ruru/../../node_modules/lodash-es/negate.js","webpack://ruru/../../node_modules/lodash-es/reject.js","webpack://ruru/../../node_modules/lodash-es/indexOf.js","webpack://ruru/../../node_modules/lodash-es/difference.js","webpack://ruru/../../node_modules/lodash-es/_baseDifference.js","webpack://ruru/../../node_modules/lodash-es/compact.js","webpack://ruru/../../node_modules/lodash-es/head.js","webpack://ruru/../../node_modules/@chevrotain/utils/lib/src/print.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/lexer.js","webpack://ruru/../../node_modules/@chevrotain/utils/lib/src/timer.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/tokens.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://ruru/../../node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://ruru/../../node_modules/lodash-es/_arrayAggregator.js","webpack://ruru/../../node_modules/lodash-es/_baseAggregator.js","webpack://ruru/../../node_modules/lodash-es/groupBy.js","webpack://ruru/../../node_modules/lodash-es/_createAggregator.js","webpack://ruru/../../node_modules/lodash-es/dropRight.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://ruru/../../node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://ruru/../../node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://ruru/../../node_modules/langium/lib/utils/errors.js","webpack://ruru/../../node_modules/langium/lib/languages/generated/ast.js","webpack://ruru/../../node_modules/lodash-es/_baseMap.js","webpack://ruru/../../node_modules/lodash-es/_baseSet.js","webpack://ruru/../../node_modules/lodash-es/_basePickBy.js","webpack://ruru/../../node_modules/lodash-es/clone.js","webpack://ruru/../../node_modules/lodash-es/last.js","webpack://ruru/../../node_modules/lodash-es/isString.js","webpack://ruru/../../node_modules/langium/lib/parser/token-builder.js","webpack://ruru/../../node_modules/langium/lib/utils/regexp-utils.js","webpack://ruru/../../node_modules/lodash-es/_trimmedEndIndex.js","webpack://ruru/../../node_modules/lodash-es/_baseTrim.js","webpack://ruru/../../node_modules/lodash-es/toNumber.js","webpack://ruru/../../node_modules/lodash-es/toFinite.js","webpack://ruru/../../node_modules/langium/lib/syntax-tree.js","webpack://ruru/../../node_modules/vscode-uri/lib/esm/index.mjs","webpack://ruru/../../node_modules/lodash-es/toInteger.js","webpack://ruru/../../node_modules/langium/lib/utils/stream.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-JEIROHC2.mjs","webpack://ruru/../../node_modules/langium/lib/workspace/file-system-provider.js","webpack://ruru/../../node_modules/lodash-es/findIndex.js","webpack://ruru/../../node_modules/lodash-es/find.js","webpack://ruru/../../node_modules/lodash-es/_createFind.js","webpack://ruru/../../node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://ruru/../../node_modules/lodash-es/flatten.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs","webpack://ruru/../../node_modules/vscode-jsonrpc/lib/common/events.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs","webpack://ruru/../../node_modules/lodash-es/_baseHas.js","webpack://ruru/../../node_modules/lodash-es/has.js","webpack://ruru/../../node_modules/lodash-es/min.js","webpack://ruru/../../node_modules/lodash-es/map.js","webpack://ruru/../../node_modules/langium/lib/utils/cst-utils.js","webpack://ruru/../../node_modules/langium/lib/utils/ast-utils.js","webpack://ruru/../../node_modules/lodash-es/defaults.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://ruru/../../node_modules/langium/lib/utils/grammar-loader.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs","webpack://ruru/../../node_modules/lodash-es/_baseLt.js","webpack://ruru/../../node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://ruru/../../node_modules/lodash-es/_baseExtremum.js","webpack://ruru/../../node_modules/langium/lib/dependency-injection.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs","webpack://ruru/../../node_modules/vscode-jsonrpc/lib/common/is.js","webpack://ruru/../../node_modules/chevrotain-allstar/lib/atn.js","webpack://ruru/../../node_modules/chevrotain-allstar/lib/dfa.js","webpack://ruru/../../node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://ruru/../../node_modules/lodash-es/uniqBy.js","webpack://ruru/../../node_modules/langium/lib/parser/cst-node-builder.js","webpack://ruru/../../node_modules/langium/lib/parser/langium-parser.js","webpack://ruru/../../node_modules/langium/lib/parser/parser-builder-base.js","webpack://ruru/../../node_modules/langium/lib/utils/promise-utils.js","webpack://ruru/../../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://ruru/../../node_modules/langium/lib/workspace/documents.js","webpack://ruru/../../node_modules/langium/lib/references/linker.js","webpack://ruru/../../node_modules/langium/lib/references/name-provider.js","webpack://ruru/../../node_modules/langium/lib/utils/uri-utils.js","webpack://ruru/../../node_modules/langium/lib/validation/validation-registry.js","webpack://ruru/../../node_modules/langium/lib/validation/document-validator.js","webpack://ruru/../../node_modules/langium/lib/references/references.js","webpack://ruru/../../node_modules/langium/lib/utils/collections.js","webpack://ruru/../../node_modules/langium/lib/references/scope-computation.js","webpack://ruru/../../node_modules/langium/lib/references/scope.js","webpack://ruru/../../node_modules/langium/lib/utils/caching.js","webpack://ruru/../../node_modules/langium/lib/references/scope-provider.js","webpack://ruru/../../node_modules/langium/lib/serializer/json-serializer.js","webpack://ruru/../../node_modules/langium/lib/service-registry.js","webpack://ruru/../../node_modules/langium/lib/workspace/ast-descriptions.js","webpack://ruru/../../node_modules/langium/lib/workspace/ast-node-locator.js","webpack://ruru/../../node_modules/langium/lib/utils/disposable.js","webpack://ruru/../../node_modules/langium/lib/workspace/configuration.js","webpack://ruru/../../node_modules/langium/lib/workspace/document-builder.js","webpack://ruru/../../node_modules/langium/lib/workspace/index-manager.js","webpack://ruru/../../node_modules/langium/lib/workspace/workspace-manager.js","webpack://ruru/../../node_modules/langium/lib/parser/lexer.js","webpack://ruru/../../node_modules/langium/lib/documentation/jsdoc.js","webpack://ruru/../../node_modules/langium/lib/documentation/documentation-provider.js","webpack://ruru/../../node_modules/langium/lib/documentation/comment-provider.js","webpack://ruru/../../node_modules/langium/lib/parser/async-parser.js","webpack://ruru/../../node_modules/langium/lib/workspace/workspace-lock.js","webpack://ruru/../../node_modules/langium/lib/serializer/hydrator.js","webpack://ruru/../../node_modules/langium/lib/default-module.js","webpack://ruru/../../node_modules/langium/lib/languages/grammar-config.js","webpack://ruru/../../node_modules/langium/lib/parser/langium-parser-builder.js","webpack://ruru/../../node_modules/langium/lib/parser/completion-parser-builder.js","webpack://ruru/../../node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://ruru/../../node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://ruru/../../node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://ruru/../../node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://ruru/../../node_modules/lodash-es/flatMap.js","webpack://ruru/../../node_modules/langium/lib/utils/grammar-utils.js","webpack://ruru/../../node_modules/langium/lib/parser/value-converter.js","webpack://ruru/../../node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs"],"sourcesContent":["// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.3.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return [AbstractElement, AbstractRule, AbstractType, Action, Alternatives, ArrayLiteral, ArrayType, Assignment, BooleanLiteral, CharacterRange, Condition, Conjunction, CrossReference, Disjunction, EndOfFile, Grammar, GrammarImport, Group, InferredType, Interface, Keyword, NamedArgument, NegatedToken, Negation, NumberLiteral, Parameter, ParameterReference, ParserRule, ReferenceType, RegexToken, ReturnType, RuleCall, SimpleType, StringLiteral, TerminalAlternatives, TerminalGroup, TerminalRule, TerminalRuleCall, Type, TypeAttribute, TypeDefinition, UnionType, UnorderedGroup, UntilToken, ValueLiteral, Wildcard];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case AbstractElement: {\n                return {\n                    name: AbstractElement,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case ArrayLiteral: {\n                return {\n                    name: ArrayLiteral,\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case ArrayType: {\n                return {\n                    name: ArrayType,\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case BooleanLiteral: {\n                return {\n                    name: BooleanLiteral,\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case Conjunction: {\n                return {\n                    name: Conjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Disjunction: {\n                return {\n                    name: Disjunction,\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case Grammar: {\n                return {\n                    name: Grammar,\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case GrammarImport: {\n                return {\n                    name: GrammarImport,\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case InferredType: {\n                return {\n                    name: InferredType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case Interface: {\n                return {\n                    name: Interface,\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case NamedArgument: {\n                return {\n                    name: NamedArgument,\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Negation: {\n                return {\n                    name: Negation,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NumberLiteral: {\n                return {\n                    name: NumberLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case Parameter: {\n                return {\n                    name: Parameter,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case ParameterReference: {\n                return {\n                    name: ParameterReference,\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case ParserRule: {\n                return {\n                    name: ParserRule,\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case ReferenceType: {\n                return {\n                    name: ReferenceType,\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case ReturnType: {\n                return {\n                    name: ReturnType,\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case SimpleType: {\n                return {\n                    name: SimpleType,\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case StringLiteral: {\n                return {\n                    name: StringLiteral,\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case TerminalRule: {\n                return {\n                    name: TerminalRule,\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Type: {\n                return {\n                    name: Type,\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case TypeAttribute: {\n                return {\n                    name: TypeAttribute,\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case UnionType: {\n                return {\n                    name: UnionType,\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case Action: {\n                return {\n                    name: Action,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case Alternatives: {\n                return {\n                    name: Alternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Assignment: {\n                return {\n                    name: Assignment,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case CharacterRange: {\n                return {\n                    name: CharacterRange,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case CrossReference: {\n                return {\n                    name: CrossReference,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case EndOfFile: {\n                return {\n                    name: EndOfFile,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Group: {\n                return {\n                    name: Group,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case Keyword: {\n                return {\n                    name: Keyword,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case NegatedToken: {\n                return {\n                    name: NegatedToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case RegexToken: {\n                return {\n                    name: RegexToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case RuleCall: {\n                return {\n                    name: RuleCall,\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case TerminalAlternatives: {\n                return {\n                    name: TerminalAlternatives,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalGroup: {\n                return {\n                    name: TerminalGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case TerminalRuleCall: {\n                return {\n                    name: TerminalRuleCall,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case UnorderedGroup: {\n                return {\n                    name: UnorderedGroup,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case UntilToken: {\n                return {\n                    name: UntilToken,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case Wildcard: {\n                return {\n                    name: Wildcard,\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    constructor() {\n        /**\n         * The list of diagnostics stored during the lexing process of a single text.\n         */\n        this.diagnostics = [];\n    }\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    flushLexingReport(text) {\n        return { diagnostics: this.popDiagnostics() };\n    }\n    popDiagnostics() {\n        const diagnostics = [...this.diagnostics];\n        this.diagnostics = [];\n        return diagnostics;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n        };\n        if (typeof pattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u') || regex.flags.includes('s')) {\n            // Unicode and dotall regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        const keywordPattern = this.buildKeywordPattern(keyword, caseInsensitive);\n        const tokenType = {\n            name: keyword.value,\n            PATTERN: keywordPattern,\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n        if (typeof keywordPattern === 'function') {\n            tokenType.LINE_BREAKS = true;\n        }\n        return tokenType;\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n/**\n * A set of all characters that are considered whitespace by the '\\s' RegExp character class.\n * Taken from [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions/Character_classes).\n */\nexport const whitespaceCharacters = ('\\f\\n\\r\\t\\v\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007' +\n    '\\u2008\\u2009\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff').split('');\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return whitespaceCharacters.some((ws) => regexp.test(ws));\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false, iterator: other[Symbol.iterator]() }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = state.iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        return new StreamImpl(() => ({ set: new Set(), internalState: this.startFn() }), state => {\n            let result;\n            do {\n                result = this.nextFn(state.internalState);\n                if (!result.done) {\n                    const value = by ? by(result.value) : result.value;\n                    if (!state.set.has(value)) {\n                        state.set.add(value);\n                        return result;\n                    }\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  TreemapGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/treemap/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/treemap/tokenBuilder.ts\nvar TreemapTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"TreemapTokenBuilder\");\n  }\n  constructor() {\n    super([\"treemap\"]);\n  }\n};\n\n// src/language/treemap/valueConverter.ts\nvar classDefRegex = /classDef\\s+([A-Z_a-z]\\w+)(?:\\s+([^\\n\\r;]*))?;?/;\nvar TreemapValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"TreemapValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"NUMBER2\") {\n      return parseFloat(input.replace(/,/g, \"\"));\n    } else if (rule.name === \"SEPARATOR\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"STRING2\") {\n      return input.substring(1, input.length - 1);\n    } else if (rule.name === \"INDENTATION\") {\n      return input.length;\n    } else if (rule.name === \"ClassDef\") {\n      if (typeof input !== \"string\") {\n        return input;\n      }\n      const match = classDefRegex.exec(input);\n      if (match) {\n        return {\n          $type: \"ClassDefStatement\",\n          className: match[1],\n          styleText: match[2] || void 0\n        };\n      }\n    }\n    return void 0;\n  }\n};\n\n// src/language/treemap/treemap-validator.ts\nfunction registerValidationChecks(services) {\n  const validator = services.validation.TreemapValidator;\n  const registry = services.validation.ValidationRegistry;\n  if (registry) {\n    const checks = {\n      Treemap: validator.checkSingleRoot.bind(validator)\n      // Remove unused validation for TreemapRow\n    };\n    registry.register(checks, validator);\n  }\n}\n__name(registerValidationChecks, \"registerValidationChecks\");\nvar TreemapValidator = class {\n  static {\n    __name(this, \"TreemapValidator\");\n  }\n  /**\n   * Validates that a treemap has only one root node.\n   * A root node is defined as a node that has no indentation.\n   */\n  checkSingleRoot(doc, accept) {\n    let rootNodeIndentation;\n    for (const row of doc.TreemapRows) {\n      if (!row.item) {\n        continue;\n      }\n      if (rootNodeIndentation === void 0 && // Check if this is a root node (no indentation)\n      row.indent === void 0) {\n        rootNodeIndentation = 0;\n      } else if (row.indent === void 0) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      } else if (rootNodeIndentation !== void 0 && rootNodeIndentation >= parseInt(row.indent, 10)) {\n        accept(\"error\", \"Multiple root nodes are not allowed in a treemap.\", {\n          node: row,\n          property: \"item\"\n        });\n      }\n    }\n  }\n};\n\n// src/language/treemap/module.ts\nvar TreemapModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new TreemapTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new TreemapValueConverter(), \"ValueConverter\")\n  },\n  validation: {\n    TreemapValidator: /* @__PURE__ */ __name(() => new TreemapValidator(), \"TreemapValidator\")\n  }\n};\nfunction createTreemapServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Treemap = inject(\n    createDefaultCoreModule({ shared }),\n    TreemapGeneratedModule,\n    TreemapModule\n  );\n  shared.ServiceRegistry.register(Treemap);\n  registerValidationChecks(Treemap);\n  return { shared, Treemap };\n}\n__name(createTreemapServices, \"createTreemapServices\");\n\nexport {\n  TreemapModule,\n  createTreemapServices\n};\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn, // endColumn uses the correct index\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n    RangeComparison[RangeComparison[\"Outside\"] = 5] = \"Outside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character <= to.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character >= to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else if (endInside) {\n        return RangeComparison.OverlapFront;\n    }\n    else {\n        return RangeComparison.Outside;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-BN7GFLIU.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-T44TD3VJ.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-KMC2YHZD.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-WFWHJNB7.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-JEIROHC2.mjs\";\nimport {\n  RadarModule,\n  createRadarServices\n} from \"./chunks/mermaid-parser.core/chunk-WFRQ32O7.mjs\";\nimport {\n  TreemapModule,\n  createTreemapServices\n} from \"./chunks/mermaid-parser.core/chunk-XRWGC2XP.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap\n} from \"./chunks/mermaid-parser.core/chunk-4KMFLZZN.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-63CPKGFF.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-HUATNLJX.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-WTHONI2E.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-O4VJ6CD3.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-ZV4HHKMB.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\"),\n  radar: /* @__PURE__ */ __name(async () => {\n    const { createRadarServices: createRadarServices2 } = await import(\"./chunks/mermaid-parser.core/radar-NJJJXTRR.mjs\");\n    const parser = createRadarServices2().Radar.parser.LangiumParser;\n    parsers.radar = parser;\n  }, \"radar\"),\n  treemap: /* @__PURE__ */ __name(async () => {\n    const { createTreemapServices: createTreemapServices2 } = await import(\"./chunks/mermaid-parser.core/treemap-75Q7IDZK.mjs\");\n    const parser = createTreemapServices2().Treemap.parser.LangiumParser;\n    parsers.treemap = parser;\n  }, \"treemap\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Radar,\n  RadarGeneratedModule,\n  RadarModule,\n  Statement,\n  Treemap,\n  TreemapGeneratedModule,\n  TreemapModule,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  createRadarServices,\n  createTreemapServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  isTreemap,\n  parse\n};\n","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Axis = \"Axis\";\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar ClassDefStatement = \"ClassDefStatement\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Curve = \"Curve\";\nvar Edge = \"Edge\";\nvar Entry = \"Entry\";\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Group = \"Group\";\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Item = \"Item\";\nvar Junction = \"Junction\";\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Option = \"Option\";\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Radar = \"Radar\";\nvar Service = \"Service\";\nvar Treemap = \"Treemap\";\nfunction isTreemap(item) {\n  return reflection.isInstance(item, Treemap);\n}\n__name(isTreemap, \"isTreemap\");\nvar TreemapRow = \"TreemapRow\";\nvar Direction = \"Direction\";\nvar Leaf = \"Leaf\";\nvar Section = \"Section\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [Architecture, Axis, Branch, Checkout, CherryPicking, ClassDefStatement, Commit, Curve, Direction, Edge, Entry, GitGraph, Group, Info, Item, Junction, Leaf, Merge, Option, Packet, PacketBlock, Pie, PieSection, Radar, Section, Service, Statement, Treemap, TreemapRow];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      case Leaf:\n      case Section: {\n        return this.isSubtype(Item, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      case \"Entry:axis\": {\n        return Axis;\n      }\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case Architecture: {\n        return {\n          name: Architecture,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Axis: {\n        return {\n          name: Axis,\n          properties: [\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Branch: {\n        return {\n          name: Branch,\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case Checkout: {\n        return {\n          name: Checkout,\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case CherryPicking: {\n        return {\n          name: CherryPicking,\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case ClassDefStatement: {\n        return {\n          name: ClassDefStatement,\n          properties: [\n            { name: \"className\" },\n            { name: \"styleText\" }\n          ]\n        };\n      }\n      case Commit: {\n        return {\n          name: Commit,\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Curve: {\n        return {\n          name: Curve,\n          properties: [\n            { name: \"entries\", defaultValue: [] },\n            { name: \"label\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Edge: {\n        return {\n          name: Edge,\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Entry: {\n        return {\n          name: Entry,\n          properties: [\n            { name: \"axis\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case GitGraph: {\n        return {\n          name: GitGraph,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Group: {\n        return {\n          name: Group,\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Info: {\n        return {\n          name: Info,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Item: {\n        return {\n          name: Item,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      case Junction: {\n        return {\n          name: Junction,\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case Merge: {\n        return {\n          name: Merge,\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case Option: {\n        return {\n          name: Option,\n          properties: [\n            { name: \"name\" },\n            { name: \"value\", defaultValue: false }\n          ]\n        };\n      }\n      case Packet: {\n        return {\n          name: Packet,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PacketBlock: {\n        return {\n          name: PacketBlock,\n          properties: [\n            { name: \"bits\" },\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case Pie: {\n        return {\n          name: Pie,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case PieSection: {\n        return {\n          name: PieSection,\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Radar: {\n        return {\n          name: Radar,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"axes\", defaultValue: [] },\n            { name: \"curves\", defaultValue: [] },\n            { name: \"options\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Service: {\n        return {\n          name: Service,\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Treemap: {\n        return {\n          name: Treemap,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" },\n            { name: \"TreemapRows\", defaultValue: [] }\n          ]\n        };\n      }\n      case TreemapRow: {\n        return {\n          name: TreemapRow,\n          properties: [\n            { name: \"indent\" },\n            { name: \"item\" }\n          ]\n        };\n      }\n      case Direction: {\n        return {\n          name: Direction,\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case Leaf: {\n        return {\n          name: Leaf,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case Section: {\n        return {\n          name: Section,\n          properties: [\n            { name: \"classSelector\" },\n            { name: \"name\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Info\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Packet\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"packet\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"bits\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]}]},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Pie\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Architecture\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"LeftPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"RightPort\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Arrow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@28\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@29\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"GitGraph\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@24\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"name\":\"REFERENCE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\nvar loadedRadarGrammar;\nvar RadarGrammar = /* @__PURE__ */ __name(() => loadedRadarGrammar ?? (loadedRadarGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Radar\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Radar\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\"radar-beta:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"radar-beta\"},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"axis\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"axes\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"curve\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"curves\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"Assignment\",\"feature\":\"options\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Label\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"[\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"]\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Axis\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Curve\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\"{\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\"}\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"Entries\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\",\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Assignment\",\"feature\":\"entries\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"DetailedEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"axis\",\"operator\":\"=\",\"terminal\":{\"$type\":\"CrossReference\",\"type\":{\"$ref\":\"#/rules@2\"},\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"deprecatedSyntax\":false}},{\"$type\":\"Keyword\",\"value\":\":\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"NumberEntry\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Option\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showLegend\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"ticks\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"max\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"min\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"graticule\"}},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"GRATICULE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"circle\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"polygon\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"EOL\",\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"FLOAT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+\\\\\\\\.[0-9]+(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*(?!\\\\\\\\.)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"}},{\"$type\":\"TerminalRuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"([^\\\\\"\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*\\\\\"|'([^'\\\\\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\.)*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]([-\\\\\\\\w]*\\\\\\\\w)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Entry\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"axis\",\"isOptional\":true,\"type\":{\"$type\":\"ReferenceType\",\"referenceType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@2\"}}}},{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"types\":[],\"usedGrammars\":[]}`)), \"RadarGrammar\");\nvar loadedTreemapGrammar;\nvar TreemapGrammar = /* @__PURE__ */ __name(() => loadedTreemapGrammar ?? (loadedTreemapGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Treemap\",\"rules\":[{\"$type\":\"ParserRule\",\"fragment\":true,\"name\":\"TitleAndAccessibilities\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"BOOLEAN\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"boolean\"},\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"true\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"false\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"entry\":true,\"name\":\"Treemap\",\"returnType\":{\"$ref\":\"#/interfaces@4\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"TreemapRows\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]}}],\"cardinality\":\"*\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"TREEMAP_KEYWORD\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap-beta\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"treemap\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"CLASS_DEF\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/classDef\\\\\\\\s+([a-zA-Z_][a-zA-Z0-9_]+)(?:\\\\\\\\s+([^;\\\\\\\\r\\\\\\\\n]*))?(?:;)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STYLE_SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":::\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"SEPARATOR\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\":\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"COMMA\",\"definition\":{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\",\"}},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WS\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"ML_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\%\\\\\\\\%[^\\\\\\\\n]*/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"NL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"TreemapRow\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"indent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"item\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]}]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"ClassDef\",\"dataType\":\"string\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Item\",\"returnType\":{\"$ref\":\"#/interfaces@0\"},\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Section\",\"returnType\":{\"$ref\":\"#/interfaces@1\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Leaf\",\"returnType\":{\"$ref\":\"#/interfaces@2\"},\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@23\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@22\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"classSelector\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INDENTATION\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[ \\\\\\\\t]{1,}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[a-zA-Z_][a-zA-Z0-9_]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"NUMBER2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9_\\\\\\\\.\\\\\\\\,]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"MyNumber\",\"dataType\":\"number\",\"definition\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING2\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Item\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"name\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"classSelector\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Section\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[]},{\"$type\":\"Interface\",\"name\":\"Leaf\",\"superTypes\":[{\"$ref\":\"#/interfaces@0\"}],\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"value\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"number\"},\"isOptional\":false}]},{\"$type\":\"Interface\",\"name\":\"ClassDefStatement\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"className\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"styleText\",\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"},\"isOptional\":false}],\"superTypes\":[]},{\"$type\":\"Interface\",\"name\":\"Treemap\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"TreemapRows\",\"type\":{\"$type\":\"ArrayType\",\"elementType\":{\"$type\":\"SimpleType\",\"typeRef\":{\"$ref\":\"#/rules@14\"}}},\"isOptional\":false},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[],\"$comment\":\"/**\\\\n * Treemap grammar for Langium\\\\n * Converted from mindmap grammar\\\\n *\\\\n * The ML_COMMENT and NL hidden terminals handle whitespace, comments, and newlines\\\\n * before the treemap keyword, allowing for empty lines and comments before the\\\\n * treemap declaration.\\\\n */\"}`)), \"TreemapGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar RadarLanguageMetaData = {\n  languageId: \"radar\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar TreemapLanguageMetaData = {\n  languageId: \"treemap\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false,\n  mode: \"production\"\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar RadarGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => RadarGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => RadarLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar TreemapGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => TreemapGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => TreemapLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  Radar,\n  Treemap,\n  isTreemap,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  RadarGeneratedModule,\n  TreemapGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        set: () => {\n            throw new Error('Cannot set property on injected service container');\n        },\n        get: (obj, prop) => {\n            if (prop === isProxy) {\n                return true;\n            }\n            else {\n                return _resolve(obj, prop, module, injector || proxy);\n            }\n        },\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)), // used by for..in\n        has: (_, prop) => prop in module, // used by ..in..\n        ownKeys: () => [...Object.getOwnPropertyNames(module)] // used by for..in\n    });\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. Visit https://langium.org/docs/reference/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  RadarGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/radar/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/radar/tokenBuilder.ts\nvar RadarTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"RadarTokenBuilder\");\n  }\n  constructor() {\n    super([\"radar-beta\"]);\n  }\n};\n\n// src/language/radar/module.ts\nvar RadarModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new RadarTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createRadarServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Radar = inject(\n    createDefaultCoreModule({ shared }),\n    RadarGeneratedModule,\n    RadarModule\n  );\n  shared.ServiceRegistry.register(Radar);\n  return { shared, Radar };\n}\n__name(createRadarServices, \"createRadarServices\");\n\nexport {\n  RadarModule,\n  createRadarServices\n};\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        var _a;\n        return (_a = this.nodeStack[this.nodeStack.length - 1]) !== null && _a !== void 0 ? _a : this.rootNode;\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, !feature);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    addHiddenNodes(tokens) {\n        const nodes = [];\n        for (const token of tokens) {\n            const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            leafNode.root = this.rootNode;\n            nodes.push(leafNode);\n        }\n        let current = this.current;\n        let added = false;\n        // If we are within a composite node, we add the hidden nodes to the content\n        if (current.content.length > 0) {\n            current.content.push(...nodes);\n            return;\n        }\n        // Otherwise we are at a newly created node\n        // Instead of adding the hidden nodes here, we search for the first parent node with content\n        while (current.container) {\n            const index = current.container.content.indexOf(current);\n            if (index > 0) {\n                // Add the hidden nodes before the current node\n                current.container.content.splice(index, 0, ...nodes);\n                added = true;\n                break;\n            }\n            current = current.container;\n        }\n        // If we arrive at the root node, we add the hidden nodes at the beginning\n        // This is the case if the hidden nodes are the first nodes in the tree\n        if (!added) {\n            this.rootNode.content.unshift(...nodes);\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getExplicitRuleType, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.allRules = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { skipValidations: production, errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    getRule(name) {\n        return this.allRules.get(name);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = this.computeRuleType(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    computeRuleType(rule) {\n        if (rule.fragment) {\n            return undefined;\n        }\n        else if (isDataTypeRule(rule)) {\n            return DatatypeSymbol;\n        }\n        else {\n            const explicit = getExplicitRuleType(rule);\n            return explicit !== null && explicit !== void 0 ? explicit : rule.name;\n        }\n    }\n    parse(input, options = {}) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const ruleMethod = options.rule ? this.allRules.get(options.rule) : this.mainRule;\n        if (!ruleMethod) {\n            throw new Error(options.rule ? `No rule found with name '${options.rule}'` : 'No main rule available.');\n        }\n        const result = ruleMethod.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenNodes(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        this.lexerResult = undefined;\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            lexerReport: lexerResult.report,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            // Only create a new AST node in case the calling rule is not a fragment rule\n            const createNode = !this.isRecording() && $type !== undefined;\n            if (createNode) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (result === undefined && createNode) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    extractHiddenTokens(token) {\n        const hiddenTokens = this.lexerResult.hidden;\n        if (!hiddenTokens.length) {\n            return [];\n        }\n        const offset = token.startOffset;\n        for (let i = 0; i < hiddenTokens.length; i++) {\n            const token = hiddenTokens[i];\n            if (token.startOffset > offset) {\n                return hiddenTokens.splice(0, i);\n            }\n        }\n        return hiddenTokens.splice(0, hiddenTokens.length);\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const hiddenTokens = this.extractHiddenTokens(token);\n            this.nodeBuilder.addHiddenNodes(hiddenTokens);\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        let cstNode;\n        if (!this.isRecording() && !fragment) {\n            // We only want to create a new CST node if the subrule actually creates a new AST node.\n            // In other cases like calls of fragment rules the current CST/AST is populated further.\n            // Note that skipping this initialization and leaving cstNode unassigned also skips the subrule assignment later on.\n            // This is intended, as fragment rules only enrich the current AST node\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const object = this.assignWithoutOverride(result, current);\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            if (action.feature && action.operator) {\n                last = this.construct();\n                this.nodeBuilder.removeNode(last.$cstNode);\n                const node = this.nodeBuilder.buildCompositeNode(action);\n                node.content.push(last.$cstNode);\n                const newItem = { $type };\n                this.stack.push(newItem);\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n            else {\n                last.$type = $type;\n            }\n        }\n    }\n    construct() {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        this.stack.pop();\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        // The target was parsed from a unassigned subrule\n        // After the subrule construction, it received a cst node\n        // This CST node will later be overriden by the cst node builder\n        // To prevent references to stale AST nodes in the CST,\n        // we need to remove the reference here\n        const targetCstNode = target.$cstNode;\n        if (targetCstNode) {\n            targetCstNode.astNode = undefined;\n            target.$cstNode = undefined;\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input, { mode: 'partial' });\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        this.allRules.set(rule.name, ruleMethod);\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, fragment, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy({\n                    // If validations are skipped, don't log the lookahead warnings\n                    logging: config.skipValidations ? () => { } : undefined\n                }) }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const parserContext = {\n        parser,\n        tokens,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        parserContext.parser.rule(rule, buildElement(ctx, rule.definition));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const fragment = rule.fragment;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), fragment, ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule: ${ruleCall.rule.$refText}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        // The terminal is a data type rule here. Everything else will result in a validation error.\n        const rule = terminal.rule.ref;\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), false, crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.parser.getRule(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = performance.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = performance.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n        // prevent calling delayNextTick every iteration of loop\n        // where delayNextTick takes up the majority or all of the\n        // globalInterruptionPeriod itself\n        lastTick = performance.now();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, token) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, textDocument, token);\n        }\n        else {\n            return this.create(uri, textDocument, token);\n        }\n    }\n    fromString(text, uri, token) {\n        if (CancellationToken.is(token)) {\n            return this.createAsync(uri, text, token);\n        }\n        else {\n            return this.create(uri, text, token);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content, options) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content, options);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText(), options);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text, options) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text, options);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            const linker = this.serviceRegistry.getServices(uri).references.Linker;\n            linker.unlink(langiumDoc);\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        var _a;\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            ref._ref = ref_resolving;\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                    else {\n                        // Try to load the target AST node later using the already provided description\n                        ref._ref = undefined;\n                    }\n                }\n            }\n            catch (err) {\n                console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n                const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}` });\n            }\n            // Add the reference to the document's array of references\n            // Only add if the reference has been not been resolved earlier\n            // Otherwise we end up with duplicates\n            // See also implementation of `buildReference`\n            document.references.push(ref);\n        }\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    this._ref = ref_resolving;\n                    const document = findRootNode(node).$document;\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return this._ref = undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                    document === null || document === void 0 ? void 0 : document.references.push(this);\n                }\n                else if (this._ref === ref_resolving) {\n                    throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        var _a;\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n            const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = findRootNode(refInfo.container).$document;\n        if (document && document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n    function normalize(uri) {\n        return URI.parse(uri.toString()).toString();\n    }\n    UriUtils.normalize = normalize;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../index.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.entriesBefore = [];\n        this.entriesAfter = [];\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n            else {\n                assertUnreachable(callbacks);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, node, accept, cancelToken), 'An error occurred during validation', accept, node);\n        };\n    }\n    async handleException(functionality, messageContext, accept, node) {\n        try {\n            await functionality();\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error(`${messageContext}:`, err);\n            if (err instanceof Error && err.stack) {\n                console.error(err.stack);\n            }\n            const messageDetails = err instanceof Error ? err.message : String(err);\n            accept('error', `${messageContext}: ${messageDetails}`, { node });\n        }\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n    /**\n     * Register logic which will be executed once before validating all the nodes of an AST/Langium document.\n     * This helps to prepare or initialize some information which are required or reusable for the following checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map for mapping names to nodes could be established.\n     * During the usual checks on the nodes, they are put into this map with their name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerBeforeDocument(checkBefore, thisObj = this) {\n        this.entriesBefore.push(this.wrapPreparationException(checkBefore, 'An error occurred during set-up of the validation', thisObj));\n    }\n    /**\n     * Register logic which will be executed once after validating all the nodes of an AST/Langium document.\n     * This helps to finally evaluate information which are collected during the checks on the AstNodes.\n     *\n     * As an example, for validating unique fully-qualified names of nodes in the AST,\n     * here the map with all the collected nodes and their names is checked\n     * and validation hints are created for all nodes with the same name.\n     *\n     * Note that this approach makes validations stateful, which is relevant e.g. when cancelling the validation.\n     * Therefore it is recommended to clear stored information\n     * _before_ validating an AST to validate each AST unaffected from other ASTs\n     * AND _after_ validating the AST to free memory by information which are no longer used.\n     *\n     * @param checkBefore a set-up function which will be called once before actually validating an AST\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    registerAfterDocument(checkAfter, thisObj = this) {\n        this.entriesAfter.push(this.wrapPreparationException(checkAfter, 'An error occurred during tear-down of the validation', thisObj));\n    }\n    wrapPreparationException(check, messageContext, thisObj) {\n        return async (rootNode, accept, categories, cancelToken) => {\n            await this.handleException(() => check.call(thisObj, rootNode, accept, categories, cancelToken), messageContext, accept, rootNode);\n        };\n    }\n    get checksBefore() {\n        return this.entriesBefore;\n    }\n    get checksAfter() {\n        return this.entriesAfter;\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        var _a, _b, _c;\n        const lexerDiagnostics = [...parseResult.lexerErrors, ...(_b = (_a = parseResult.lexerReport) === null || _a === void 0 ? void 0 : _a.diagnostics) !== null && _b !== void 0 ? _b : []];\n        for (const lexerDiagnostic of lexerDiagnostics) {\n            const severity = (_c = lexerDiagnostic.severity) !== null && _c !== void 0 ? _c : 'error';\n            const diagnostic = {\n                severity: toDiagnosticSeverity(severity),\n                range: {\n                    start: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column - 1\n                    },\n                    end: {\n                        line: lexerDiagnostic.line - 1,\n                        character: lexerDiagnostic.column + lexerDiagnostic.length - 1\n                    }\n                },\n                message: lexerDiagnostic.message,\n                data: toDiagnosticData(severity),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await this.validateAstBefore(rootNode, options, acceptor, cancelToken);\n        await this.validateAstNodes(rootNode, options, acceptor, cancelToken);\n        await this.validateAstAfter(rootNode, options, acceptor, cancelToken);\n        return validationItems;\n    }\n    async validateAstBefore(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksBefore = this.validationRegistry.checksBefore;\n        for (const checkBefore of checksBefore) {\n            await interruptAndCheck(cancelToken);\n            await checkBefore(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    async validateAstNodes(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n    }\n    async validateAstAfter(rootNode, options, acceptor, cancelToken = CancellationToken.None) {\n        var _a;\n        const checksAfter = this.validationRegistry.checksAfter;\n        for (const checkAfter of checksAfter) {\n            await interruptAndCheck(cancelToken);\n            await checkAfter(rootNode, acceptor, (_a = options.categories) !== null && _a !== void 0 ? _a : [], cancelToken);\n        }\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\n/**\n * Transforms the diagnostic severity from the {@link LexingDiagnosticSeverity} format to LSP's `DiagnosticSeverity` format.\n *\n * @param severity The lexing diagnostic severity\n * @returns Diagnostic severity according to `vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity`\n */\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1;\n        case 'warning':\n            return 2;\n        case 'info':\n            return 3;\n        case 'hint':\n            return 4;\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport function toDiagnosticData(severity) {\n    switch (severity) {\n        case 'error':\n            return diagnosticData(DocumentValidator.LexingError);\n        case 'warning':\n            return diagnosticData(DocumentValidator.LexingWarning);\n        case 'info':\n            return diagnosticData(DocumentValidator.LexingInfo);\n        case 'hint':\n            return diagnosticData(DocumentValidator.LexingHint);\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.LexingWarning = 'lexing-warning';\n    DocumentValidator.LexingInfo = 'lexing-info';\n    DocumentValidator.LexingHint = 'lexing-hint';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCancelled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    /**\n     * Creates a new document cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     *\n     * Providing a state here will use `DocumentBuilder#onDocumentPhase` instead,\n     * which triggers on all documents that have been affected by this change, assuming that the\n     * state is `DocumentState.Linked` or a later state.\n     */\n    constructor(sharedServices, state) {\n        super(uri => uri.toString());\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onDocumentPhase(state, document => {\n                this.clear(document.uri.toString());\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                for (const uri of deleted) { // react only on deleted documents\n                    this.clear(uri);\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n                const allUris = changed.concat(deleted); // react on both changed and deleted documents\n                for (const uri of allUris) {\n                    this.clear(uri);\n                }\n            }));\n        }\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace is added, changed or deleted, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    /**\n     * Creates a new workspace cache.\n     *\n     * @param sharedServices Service container instance to hook into document lifecycle events.\n     * @param state Optional document state on which the cache should evict.\n     * If not provided, the cache will evict on `DocumentBuilder#onUpdate`.\n     * *Deleted* documents are considered in both cases.\n     */\n    constructor(sharedServices, state) {\n        super();\n        if (state) {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onBuildPhase(state, () => {\n                this.clear();\n            }));\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate((_changed, deleted) => {\n                if (deleted.length > 0) { // react only on deleted documents\n                    this.clear();\n                }\n            }));\n        }\n        else {\n            this.toDispose.push(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n                this.clear();\n            }));\n        }\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options) {\n        const serializeOptions = options !== null && options !== void 0 ? options : {};\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, serializeOptions);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options) {\n        const deserializeOptions = options !== null && options !== void 0 ? options : {};\n        const root = JSON.parse(content);\n        this.linkNode(root, root, deserializeOptions);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    /**\n     * @deprecated Use the new `fileExtensionMap` (or `languageIdMap`) property instead.\n     */\n    get map() {\n        return this.fileExtensionMap;\n    }\n    constructor(services) {\n        this.languageIdMap = new Map();\n        this.fileExtensionMap = new Map();\n        this.textDocuments = services === null || services === void 0 ? void 0 : services.workspace.TextDocuments;\n    }\n    register(language) {\n        const data = language.LanguageMetaData;\n        for (const ext of data.fileExtensions) {\n            if (this.fileExtensionMap.has(ext)) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${data.languageId}'.`);\n            }\n            this.fileExtensionMap.set(ext, language);\n        }\n        this.languageIdMap.set(data.languageId, language);\n        if (this.languageIdMap.size === 1) {\n            this.singleton = language;\n        }\n        else {\n            this.singleton = undefined;\n        }\n    }\n    getServices(uri) {\n        var _a, _b;\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.languageIdMap.size === 0) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const languageId = (_b = (_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(uri)) === null || _b === void 0 ? void 0 : _b.languageId;\n        if (languageId !== undefined) {\n            const services = this.languageIdMap.get(languageId);\n            if (services) {\n                return services;\n            }\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.fileExtensionMap.get(ext);\n        if (!services) {\n            if (languageId) {\n                throw new Error(`The service registry contains no services for the extension '${ext}' for language '${languageId}'.`);\n            }\n            else {\n                throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n            }\n        }\n        return services;\n    }\n    hasServices(uri) {\n        try {\n            this.getServices(uri);\n            return true;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n    get all() {\n        return Array.from(this.languageIdMap.values());\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document) {\n        const doc = document !== null && document !== void 0 ? document : getDocument(node);\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: doc.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Emitter } from '../utils/event.js';\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.onConfigurationSectionUpdateEmitter = new Emitter();\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            const configuration = change.settings[section];\n            this.updateSectionConfiguration(section, configuration);\n            this.onConfigurationSectionUpdateEmitter.fire({ section, configuration });\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n    get onConfigurationSectionUpdate() {\n        return this.onConfigurationSectionUpdateEmitter.event;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.documentPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect and sort all documents that we should rebuild\n        const rebuildDocuments = this.sortDocuments(this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray());\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Sort the given documents by priority. By default, documents with an open text document are prioritized.\n     * This is useful to ensure that visible documents show their diagnostics before all other documents.\n     *\n     * This improves the responsiveness in large workspaces as users usually don't care about diagnostics\n     * in files that are currently not opened in the editor.\n     */\n    sortDocuments(documents) {\n        let left = 0;\n        let right = documents.length - 1;\n        while (left < right) {\n            while (left < documents.length && this.hasTextDocument(documents[left])) {\n                left++;\n            }\n            while (right >= 0 && !this.hasTextDocument(documents[right])) {\n                right--;\n            }\n            if (left < right) {\n                [documents[left], documents[right]] = [documents[right], documents[left]];\n            }\n        }\n        return documents;\n    }\n    hasTextDocument(doc) {\n        var _a;\n        return Boolean((_a = this.textDocuments) === null || _a === void 0 ? void 0 : _a.get(doc.uri));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     *\n     * @param documents The documents to build.\n     * @param options the {@link BuildOptions} to use.\n     * @param cancelToken A cancellation token that can be used to cancel the build.\n     * @returns A promise that resolves when the build is done.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    /**\n     * Runs prior to beginning the build process to update the {@link DocumentBuildState} for each document\n     *\n     * @param documents collection of documents to be built\n     * @param options the {@link BuildOptions} to use\n     */\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    /**\n     * Runs a cancelable operation on a set of documents to bring them to a specified {@link DocumentState}.\n     *\n     * @param documents The array of documents to process.\n     * @param targetState The target {@link DocumentState} to bring the documents to.\n     * @param cancelToken A token that can be used to cancel the operation.\n     * @param callback A function to be called for each document.\n     * @returns A promise that resolves when all documents have been processed or the operation is canceled.\n     * @throws Will throw `OperationCancelled` if the operation is canceled via a `CancellationToken`.\n     */\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(doc => doc.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n            await this.notifyDocumentPhase(document, targetState, cancelToken);\n        }\n        // Do not use `filtered` here, as that will miss documents that have previously reached the current target state\n        // For example, this happens in case the cancellation triggers between the processing of two documents\n        // Or files that were picked up during the workspace initialization\n        const targetStateDocs = documents.filter(doc => doc.state === targetState);\n        await this.notifyBuildPhase(targetStateDocs, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    onDocumentPhase(targetState, callback) {\n        this.documentPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.documentPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyDocumentPhase(document, state, cancelToken) {\n        const listeners = this.documentPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            try {\n                await listener(document, cancelToken);\n            }\n            catch (err) {\n                // Ignore cancellation errors\n                // We want to finish the listeners before throwing\n                if (!isOperationCancelled(err)) {\n                    throw err;\n                }\n            }\n        }\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        const listenersCopy = listeners.slice();\n        for (const listener of listenersCopy) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    get workspaceFolders() {\n        return this.folders;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer, defaultLexerErrorProvider } from 'chevrotain';\nexport class DefaultLexerErrorMessageProvider {\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return defaultLexerErrorProvider.buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column);\n    }\n    buildUnableToPopLexerModeMessage(token) {\n        return defaultLexerErrorProvider.buildUnableToPopLexerModeMessage(token);\n    }\n}\nexport const DEFAULT_TOKENIZE_OPTIONS = { mode: 'full' };\nexport class DefaultLexer {\n    constructor(services) {\n        this.errorMessageProvider = services.parser.LexerErrorMessageProvider;\n        this.tokenBuilder = services.parser.TokenBuilder;\n        const tokens = this.tokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        const production = services.LanguageMetaData.mode === 'production';\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full',\n            skipValidations: production,\n            errorMessageProvider: this.errorMessageProvider\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text, _options = DEFAULT_TOKENIZE_OPTIONS) {\n        var _a, _b, _c;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : [],\n            report: (_c = (_b = this.tokenBuilder).flushLexingReport) === null || _c === void 0 ? void 0 : _c.call(_b, text)\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser which simply wraps the sync parser in a promise.\n *\n * @remarks\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text, _cancelToken) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled, startCancelableOperation } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = startCancelableOperation();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken = CancellationToken.None) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport ? this.dehydrateLexerReport(result.lexerReport) : undefined,\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            parserErrors: result.parserErrors.map(e => (Object.assign(Object.assign({}, e), { message: e.message }))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    dehydrateLexerReport(lexerReport) {\n        // By default, lexer reports are serializable\n        return lexerReport;\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            lexerReport: result.lexerReport,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (!node) {\n            return undefined;\n        }\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        return element;\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer, DefaultLexerErrorMessageProvider } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider(),\n            LexerErrorMessageProvider: () => new DefaultLexerErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: (services) => new DefaultServiceRegistry(services),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp, isWhitespace } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !isWhitespace(terminalRegex(terminalRule));\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\n/**\n * This function is used at development time (for code generation and the internal type system) to get the type of the AST node produced by the given rule.\n * For data type rules, the name of the rule is returned,\n * e.g. \"INT_value returns number: MY_INT;\" returns \"INT_value\".\n * @param rule the given rule\n * @returns the name of the AST node type of the rule\n */\nexport function getRuleTypeName(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\n/**\n * This function is used at runtime to get the actual type of the values produced by the given rule at runtime.\n * For data type rules, the name of the declared return type of the rule is returned (if any),\n * e.g. \"INT_value returns number: MY_INT;\" returns \"number\".\n * @param rule the given rule\n * @returns the name of the type of the produced values of the rule at runtime\n */\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-4KMFLZZN.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n"],"names":["toFastProperties","toBecomeFast","FakeConstructor","prototype","fakeInstance","fakeAccess","bar","array","start","end","index","length","result","Array","n","guard","undefined","toInteger","Object","hasOwnProperty","object","source","isArrayLike","keys","key","call","predicate","props","prop","value","path","nodeIsRegExp","isRegExp","isObjectLike","AbstractProduction","definition","this","_definition","constructor","accept","visitor","visit","forEach","prod","options","super","idx","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","node","convertDefinition","serializedNonTerminal","type","name","nonTerminalName","isString","label","separator","terminalType","serializedTerminal","tokType","obj","LABEL","terminalLabel","pattern","PATTERN","Error","nodeAny","visitNonTerminal","visitAlternative","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","collection","func","isArray","nativeMax","Math","max","fromIndex","indexOf","isOptionalProd","alreadyVisited","subProd","push","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","terminal","refProd","flatProd","fullOrRest","concat","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","first","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","args","arguments","apply","values","isArrayLikeObject","iteratee","comparator","includes","isCommon","valuesLength","outer","computed","valuesIndex","resIndex","PRINT_ERROR","msg","console","error","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","toString","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","flags","ignoreCase","e","message","msgSuffix","i","terms","term","atom","addOptimizedIdxToResult","complement","code","range","rangeCode","from","to","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","quantifier","atLeast","isWholeOptional","optimizedCharIdx","char","String","fromCharCode","upperChar","toUpperCase","charCodeAt","lowerChar","toLowerCase","handleIgnoreCase","findCode","setNode","targetCharCodes","find","codeOrRange","targetCode","CharCodeFinder","found","visitChildren","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","canMatchCharCode","charCodes","RegExp","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","sticky","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","tokenType","isFunction","has","isShortPattern","LineTerminatorOptimizedTester","test","text","len","lastIndex","c","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","map","charCodeToOptimizedIdxMap","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenTypeIdx","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","token","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypes","tokenTypesAndParents","clone","categories","searching","currTokType","CATEGORIES","newCategories","isEmpty","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","defaultLexerErrorProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","fullText","startOffset","line","column","charAt","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","positionTracking","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","errorMessageProvider","traceInitPerf","skipValidations","recoveryEnabled","freeze","Lexer","lexerDefinition","config","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","modes","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","join","traceInitMaxIdent","log","traceMethod","traceInitVal","Infinity","actualDefinition","hasOnlySingleMode","defaultMode","errors","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","isUndefined","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","longerAlt","LONGER_ALT","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","trackLines","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","details","buildLineBreakIssueMessage","warningDescriptor","LINE_BREAKS","NO_LINE_BREAKS_FLAGS","performWarningRuntimeChecks","allModeNames","currModDef","currModName","validModesNames","missingResult","tokenTypesWithMissingPattern","filter","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","visitEndAnchor","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","visitStartAnchor","startAnchorVisitor","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","multiline","global","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","reduce","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","clazz","group","GROUP","SKIPPED","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","exec","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","validatePatterns","currAnalyzeResult","tracer","defaults","useSticky","debug","action","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","replace","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","pop","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","unicode","optimizedCodes","analyzeTokenTypes","allErrMessagesString","chopInput","identity","match","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","offset","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","startLine","startColumn","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","substring","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","endLine","endColumn","oldColumn","endOffset","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","rule","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ref","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","initializer","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","alternatives","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","alts","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","size","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","item","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","alternative","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","getExtraProductionArgument","OccurrenceValidationCollector","allProductions","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","flatMap","currRefRule","firstProd","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","_a","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","rules","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","validateAmbiguousAlternationAlternatives","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","other","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","topLevelRules","collectorVisitor","allRuleProductions","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","reset","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","defineProperty","enumerable","configurable","writable","defaultVisit","ctx","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","children","CstVisitorDefinitionError","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","className","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","actualOptions","topRulesTable","topLevels","refResolver","definitionErrors","validationErrors","tokensMap","duplicateErrors","productionGroups","duplicates","currGroup","currDuplicates","defError","DUPLICATE_PRODUCTIONS","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","Map","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","get","set","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","cstNode","location","fullRuleName","create","ruleCstNode","prevToken","loc","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","ruleNames","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","createBaseSemanticVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","input","newInput","howMuch","soughtIdx","newState","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","isObject","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","context","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","ErrorWithLocation","character","assertUnreachable","_","AbstractRule","AbstractType","Condition","TypeDefinition","ValueLiteral","AbstractElement","isAbstractElement","reflection","isInstance","ArrayLiteral","ArrayType","BooleanLiteral","isBooleanLiteral","Conjunction","isConjunction","Disjunction","isDisjunction","Grammar","GrammarImport","InferredType","isInferredType","Interface","isInterface","NamedArgument","Negation","isNegation","NumberLiteral","Parameter","ParameterReference","isParameterReference","ParserRule","isParserRule","ReferenceType","ReturnType","isReturnType","SimpleType","isSimpleType","StringLiteral","TerminalRule","isTerminalRule","Type","isType","TypeAttribute","UnionType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","isCharacterRange","CrossReference","isCrossReference","EndOfFile","isEndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","isNegatedToken","RegexToken","isRegexToken","RuleCall","isRuleCall","TerminalAlternatives","isTerminalAlternatives","TerminalGroup","isTerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","isUntilToken","Wildcard","isWildcard","LangiumGrammarAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","getTypeMetaData","properties","defaultValue","customizer","nested","newValue","objValue","paths","DefaultTokenBuilder","diagnostics","buildTokens","grammar","reachableRules","terminalTokens","buildTerminalTokens","buildKeywordTokens","terminalToken","unshift","flushLexingReport","popDiagnostics","fragment","buildTerminalToken","toArray","regex","requiresCustomPattern","regexPatternFunction","hidden","stickyRegex","distinct","sort","a","b","keyword","buildKeywordToken","Boolean","caseInsensitive","keywordPattern","buildKeywordPattern","findLongerAlt","longerAlts","NEWLINE_REGEXP","regexpParser","TerminalRegExpVisitor","isStarting","endRegexpStack","endRegex","startRegexp","visitGroup","escapedChar","escapeRegExp","begin","isMultilineComment","regexp","whitespaceCharacters","split","isWhitespace","some","ws","getCaseInsensitivePattern","letter","partialMatches","partial","re","process","tmp","appendRaw","nbChars","substr","appendOptional","partialRegExp","reWhitespace","reTrimStart","string","slice","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","INFINITY","isSymbol","valueOf","isBinary","isAstNode","isReference","$refText","isAstNodeDescription","isLinkingError","reference","AbstractAstReflection","subtypes","allSubtypes","existing","getAllSubTypes","allTypes","types","possibleSubType","isCompositeCstNode","content","isLeafCstNode","isRootCstNode","LIB","r","o","s","h","lastIndexOf","resolve","cwd","normalize","isAbsolute","relative","f","u","l","g","_makeLong","dirname","basename","extname","format","dir","root","base","ext","parse","sep","delimiter","win32","posix","exports","d","Symbol","toStringTag","URI","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","p","decodeURIComponent","A","w","joinPath","resolvePath","remainder","StreamImpl","startFn","nextFn","iterator","state","next","done","count","toSet","Set","toMap","keyFn","valueFn","entryStream","element","firstDone","DONE_RESULT","addSeparator","searchElement","every","callbackfn","nonNullable","initialValue","previousValue","reduceRight","recursiveReduce","findIndex","mapped","isIterable","flat","depth","stream","head","tail","skipCount","limit","maxSize","by","internalState","add","exclude","otherKeySet","ownKey","EMPTY_STREAM","collections","collIndex","arrIndex","TreeStreamImpl","iterators","includeRoot","pruned","prune","Reduction","sum","product","min","ArchitectureTokenBuilder","ArchitectureValueConverter","runCustomConverter","_cstNode","trim","ArchitectureModule","parser","TokenBuilder","ValueConverter","createArchitectureServices","shared","Architecture","ServiceRegistry","register","EmptyFileSystemProvider","readFile","readDirectory","EmptyFileSystem","fileSystemProvider","findIndexFunc","iterable","_ral","RAL","install","ral","InfoTokenBuilder","InfoModule","createInfoServices","Info","TreemapTokenBuilder","classDefRegex","TreemapValueConverter","parseFloat","styleText","registerValidationChecks","services","validator","validation","TreemapValidator","registry","ValidationRegistry","checks","Treemap","checkSingleRoot","bind","doc","rootNodeIndentation","row","TreemapRows","TreemapModule","createTreemapServices","Emitter","Event","ral_1","_disposable","dispose","None","CallbackList","callback","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","splice","invoke","ret","callbacks","contexts","default","_options","event","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","PacketTokenBuilder","PacketModule","createPacketServices","Packet","RangeComparison","streamCst","isChildNode","child","parent","tokenToRange","toDocumentSegment","inRange","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","Outside","compareRange","DefaultNameRegexp","findCommentNode","commentNames","getPreviousNode","isCommentNode","linkContentToContainer","entries","startsWith","$container","$containerProperty","$containerIndex","getContainerOfType","typePredicate","getDocument","findRootNode","$document","streamContents","keyIndex","arrayIndex","isAstNodeInRange","streamAllContents","streamAst","astNode","nodeRange","$cstNode","streamReferences","assignMandatoryProperties","typeMetaData","genericNode","copyDefaultValue","propertyType","objectProto","sources","propsIndex","propsLength","parsers","initializers","info","async","createInfoServices2","LangiumParser","packet","createPacketServices2","pie","createPieServices","createPieServices2","Pie","architecture","createArchitectureServices2","gitGraph","createGitGraphServices","createGitGraphServices2","GitGraph","radar","createRadarServices","createRadarServices2","Radar","treemap","createTreemapServices2","diagramType","lexerErrors","parserErrors","MermaidParseError","err","minimalGrammarModule","LanguageMetaData","fileExtensions","languageId","minimalSharedGrammarModule","AstReflection","loadGrammarFromJson","json","createMinimalGrammarServices","serializer","JsonSerializer","deserialize","workspace","LangiumDocumentFactory","fromModel","__defProp","__name","target","Statement","Axis","Branch","Checkout","CherryPicking","ClassDefStatement","Commit","Curve","Edge","Entry","Item","Junction","Merge","PacketBlock","PieSection","Service","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","loadedRadarGrammar","loadedTreemapGrammar","TreemapRow","Direction","Leaf","Section","MermaidAstReflection","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","RadarGrammar","TreemapGrammar","InfoLanguageMetaData","mode","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","RadarLanguageMetaData","TreemapLanguageMetaData","MermaidGeneratedSharedModule","InfoGeneratedModule","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","RadarGeneratedModule","TreemapGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","runCommonConverter","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Is","events_1","CancellationToken","isCancellationRequested","onCancellationRequested","Cancelled","is","candidate","boolean","shortcutEvent","handle","setTimeout","MutableToken","_isCancelled","cancel","_emitter","_token","current","Module","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","__requested__","cause","value2","value1","RadarTokenBuilder","RadarModule","PieTokenBuilder","PieValueConverter","PieModule","stringArray","number","Number","elem","buildATNKey","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","tokenRef","currentRule","nonTerminal","ruleToStartState","left","right","addTransition","ruleRef","defineDecisionState","makeAlts","optional","epsilon","decisionMap","block","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","blkStart","blkEnd","loop","loopback","entry","loopEnd","decisionStates","decision","buildRuleHandle","stop","ruleToStopState","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","elements","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","ruleLength","createRuleStartAndStopATNStates","ruleBlock","createATN","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","flatten","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","atnState","numberOfTransitions","closure","computeStartState","performLookahead","s0","previousD","getExistingTargetState","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","lookahead","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","buildAmbiguityError","nextTransitions","actualToken","possibleTokenTypes","tokenPath","edges","mapKey","atnStack","getEpsilonTarget","CstNodeBuilder","nodeStack","rootNode","buildRootNode","RootCstNodeImpl","buildCompositeNode","feature","compositeNode","CompositeCstNodeImpl","grammarSource","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","addHiddenNodes","nodes","added","construct","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","items","addParents","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","wrapOption","wrapMany","wrapAtLeastOne","getRule","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","computeRuleType","ruleMethod","DEFINE_RULE","startImplementation","mainRule","explicit","lexerResult","clear","lexerReport","report","createNode","extractHiddenTokens","hiddenTokens","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","newItem","assignWithoutOverride","buildReference","existingValue","targetCstNode","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","actionType","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","parameters","buildRuleCallPredicate","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","groupIdx","lParser","wrapped","wrap","groupState","trackedAlternatives","delete","buildUnorderedGroup","buildGroup","cardinality","condition","true","guardCondition","crossRef","terminalRule","assignTerminal","getRuleName","lastTick","isOperationCancelled","interruptAndCheck","performance","now","Promise","setImmediate","promise","reject","arg","FullTextDocument","uri","version","_uri","_languageId","_version","_content","_lineOffsets","getText","offsetAt","update","changes","change","isIncremental","getWellformedRange","lineOffsets","addedLineOffsets","computeLineOffsets","diff","isFull","getLineOffsets","positionAt","low","high","mid","ensureBeforeEOL","position","lineOffset","nextLineOffset","isEOL","lineCount","rangeLength","TextDocument","mergeSort","data","compare","leftIdx","rightIdx","isAtLineStart","textOffset","ch","getWellformedEdit","textEdit","newText","document","applyEdits","edits","sortedEdits","lastModifiedOffset","spans","DocumentState","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","TextDocuments","FileSystemProvider","fromUri","cancellationToken","createAsync","fromTextDocument","textDocument","fromString","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","unlink","Changed","precomputedScopes","deleteDocument","ref_resolving","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","getAstNodePath","$nodeDescription","nodeDescription","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","UriUtils","ValidationCategory","DocumentValidator","equals","fromPath","toPath","fromParts","toParts","repeat","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","nodeElem","nameNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","sourceUri","sourcePath","targetUri","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","cache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onBuildPhase","onUpdate","_changed","deleted","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","documentation","CommentProvider","serialize","serializeOptions","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserializeOptions","linkNode","sourceText","textRegions","comments","uriConverter","_c","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","fileExtensionMap","languageIdMap","language","singleton","hasServices","diagnosticData","entriesBefore","entriesAfter","checksRecord","thisObj","category","check","wrapValidationException","addEntry","handleException","functionality","messageContext","getChecks","registerBeforeDocument","checkBefore","wrapPreparationException","registerAfterDocument","checkAfter","checksBefore","checksAfter","DefaultDocumentValidator","validationRegistry","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerDiagnostics","lexerDiagnostic","severity","diagnostic","toDiagnosticSeverity","toDiagnosticData","getSource","parserError","linkingError","containerType","toDiagnostic","validationItems","acceptor","validateAstBefore","validateAstNodes","validateAstAfter","getDiagnosticRange","codeDescription","tags","relatedInformation","LexingWarning","LexingInfo","LexingHint","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","Disposable","DefaultConfigurationProvider","_ready","settings","workspaceConfig","onConfigurationSectionUpdateEmitter","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","onConfigurationSectionUpdate","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","documentPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","sortDocuments","Linked","hasTextDocument","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyDocumentPhase","targetStateDocs","notifyBuildPhase","onDocumentPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","listenersCopy","getBuildOptions","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","workspaceFolders","folders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexerErrorMessageProvider","DEFAULT_TOKENIZE_OPTIONS","DefaultLexer","LexerErrorMessageProvider","tokenBuilder","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","isJSDoc","firstRegex","lastRegex","opts","currentLine","currentCharacter","tagMatch","fullMatch","inlineTagMatches","matchAll","startPosition","parseJSDocComment","parseJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","multilineCommentRules","DefaultAsyncParser","syncParser","_cancelToken","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateLexerReport","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","prepareLangiumParser","createLangiumParser","CompletionParser","createCompletionParser","References","Hydrator","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","cc","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","saveState","restoreState","consumeChar","disjunction","multiLine","isRegExpFlag","popChar","peekChar","isTerm","isAssertion","assertion","isBacktracking","atMost","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","isPatternCharacter","patternCharacter","isQuantifier","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","parseHexDigits","classPatternCharacterAtom","isClassAtom","classAtom","isRangeDash","classEscape","capturing","groupAst","nextChar","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","subChild","visitPattern","visitFlags","visitDisjunction","visitWordBoundary","visitNonWordBoundary","visitGroupBackReference","visitQuantifier","getAllReachableRules","allTerminals","entryRule","getEntryRule","topMostRules","getHiddenRules","ruleDfs","visitedSet","refRule","getCrossReferenceTerminal","nameAssigment","findNameAssignment","isCommentTerminal","terminalRegex","findNodesForProperty","findNodesForPropertyInternal","findNodeForProperty","nodeFeature","findNodeForKeyword","treeIterator","keywordNodes","childNode","findNodesForKeywordInternal","findAssignment","startNode","findNameAssignmentInternal","go","refType","childAssignment","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","getActionType","getRuleType","abstractElementToRegex","flagText","WILDCARD","withCardinality","keywordToRegex","until","negate","lastSlash","regexFlags","DefaultValueConverter","convertInt","convertString","convertID","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","GitGraphTokenBuilder","GitGraphModule"],"sourceRoot":""}