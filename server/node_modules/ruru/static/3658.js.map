{"version":3,"file":"3658.js","mappings":"sHAOO,IAAIA,EAOJ,SAASC,EAAeC,GAC3B,OAAOA,IAAWF,EAAYG,oBAAsBD,IAAWF,EAAYI,mBAC/E,CACO,SAASC,EAAOH,GACnB,OAAOA,IAAWF,EAAYM,MAAQJ,IAAWF,EAAYG,kBACjE,C,oCAXA,SAAWH,GACPA,EAAkB,KAAI,OACtBA,EAAmB,MAAI,QACvBA,EAAgC,mBAAI,SACpCA,EAAiC,oBAAI,SACxC,CALD,CAKGA,IAAgBA,EAAc,CAAC,G,6DCO3B,MAAMO,EAAW,IAdxB,MACI,WAAAC,GACIC,KAAKC,KAAO,IAAIC,GACpB,CACA,GAAAC,CAAIC,EAAIH,GACJ,KAAU,KAAeG,IACzB,KAAU,KAAeH,IACzB,MAAWD,KAAKC,KAAKI,IAAID,GAAK,8CAC9BJ,KAAKC,KAAKK,IAAIF,EAAIH,EACtB,CACA,EAAAM,CAAGH,GACC,OAAOJ,KAAKC,KAAKO,IAAIJ,IAAO,IAChC,E,kBCbG,IAAIK,E,oCACX,SAAWA,GACPA,EAAMC,WAAa,IAAIR,IACvBO,EAAME,UAAY,aAClBF,EAAMG,gBAAkB,mBAIxBH,EAAMI,uBAHN,SAAgCC,GAC5B,OAAOA,EAAKL,EAAMG,kBAAoB,EAC1C,CAEH,CARD,CAQGH,IAAUA,EAAQ,CAAC,IACf,MAAMM,EAAwBC,EAAgB,wBAa9C,SAASA,EAAgBC,GAC5B,GAAIR,EAAMC,WAAWL,IAAIY,GACrB,OAAOR,EAAMC,WAAWF,IAAIS,GAEhC,MAAMb,EAAK,SAAUc,EAAQC,EAAKC,GAC9B,GAAyB,IAArBC,UAAUC,OACV,MAAM,IAAIC,MAAM,qEAlB5B,SAAgCnB,EAAIc,EAAQE,GACpCF,EAAOT,EAAME,aAAeO,EAC5BA,EAAOT,EAAMG,iBAAiBY,KAAK,CAAEpB,KAAIgB,WAGzCF,EAAOT,EAAMG,iBAAmB,CAAC,CAAER,KAAIgB,UACvCF,EAAOT,EAAME,WAAaO,EAElC,CAYQO,CAAuBrB,EAAIc,EAAQE,EACvC,EAGA,OAFAhB,EAAGsB,SAAW,IAAMT,EACpBR,EAAMC,WAAWJ,IAAIW,EAAWb,GACzBA,CACX,C","sources":["webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","webpack://ruru/../../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n"],"names":["ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","Registry","constructor","this","data","Map","add","id","has","set","as","get","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","ctor","IInstantiationService","createDecorator","serviceId","target","key","index","arguments","length","Error","push","storeServiceDependency","toString"],"sourceRoot":""}