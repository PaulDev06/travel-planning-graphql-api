export const __webpack_id__=1237;export const __webpack_ids__=[1237];export const __webpack_modules__={21233:(r,o,e)=>{e.d(o,{Bb:()=>l,Fd:()=>s,Gu:()=>h,HP:()=>u,Hz:()=>F,JO:()=>p,a:()=>b,e$:()=>m,oG:()=>B,x1:()=>f,yL:()=>x});var t=e(72667),n=e(30325),i=e(63962),d=e(22573),c=e(3361),a=e(28976),g=e(12003);function l(r){return`--vscode-${r.replace(/\./g,"-")}`}function h(r){return`var(${l(r)})`}function u(r,o){return`var(${l(r)}, ${o})`}const s={ColorContribution:"base.contributions.colors"},k=new class{constructor(){this._onDidChangeSchema=new d.vl,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(r,o,e,t=!1,n){const i={id:r,description:e,defaults:o,needsTransparency:t,deprecationMessage:n};this.colorsById[r]=i;const d={type:"string",format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return n&&(d.deprecationMessage=n),t&&(d.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",d.patternErrorMessage=g.kg("transparecyRequired","This color must be transparent or it will obscure content")),this.colorSchema.properties[r]={description:e,oneOf:[d,{type:"string",const:"default",description:g.kg("useDefault","Use the default color.")}]},this.colorReferenceSchema.enum.push(r),this.colorReferenceSchema.enumDescriptions.push(e),this._onDidChangeSchema.fire(),r}getColors(){return Object.keys(this.colorsById).map(r=>this.colorsById[r])}resolveDefaultColor(r,o){const e=this.colorsById[r];if(e?.defaults)return v(null!==(t=e.defaults)&&"object"==typeof t&&"light"in t&&"dark"in t?e.defaults[o.type]:e.defaults,o);var t}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort((r,o)=>{const e=-1===r.indexOf(".")?0:1,t=-1===o.indexOf(".")?0:1;return e!==t?e-t:r.localeCompare(o)}).map(r=>`- \`${r}\`: ${this.colorsById[r].description}`).join("\n")}};function f(r,o,e,t,n){return k.registerColor(r,o,e,t,n)}function m(r,o){return{op:0,value:r,factor:o}}function b(r,o){return{op:1,value:r,factor:o}}function p(r,o){return{op:2,value:r,factor:o}}function x(...r){return{op:4,values:r}}function F(r,o,e){return{op:6,if:r,then:o,else:e}}function B(r,o,e,t){return{op:5,value:r,background:o,factor:e,transparency:t}}function v(r,o){if(null!==r)return"string"==typeof r?"#"===r[0]?i.Q1.fromHex(r):o.getColor(r):r instanceof i.Q1?r:"object"==typeof r?function(r,o){switch(r.op){case 0:return v(r.value,o)?.darken(r.factor);case 1:return v(r.value,o)?.lighten(r.factor);case 2:return v(r.value,o)?.transparent(r.factor);case 3:{const e=v(r.background,o);return e?v(r.value,o)?.makeOpaque(e):v(r.value,o)}case 4:for(const e of r.values){const r=v(e,o);if(r)return r}return;case 6:return v(o.defines(r.if)?r.then:r.else,o);case 5:{const e=v(r.value,o);if(!e)return;const t=v(r.background,o);return t?e.isDarkerThan(t)?i.Q1.getLighterColor(e,t,r.factor).transparent(r.transparency):i.Q1.getDarkerColor(e,t,r.factor).transparent(r.transparency):e.transparent(r.factor*r.transparency)}default:throw(0,t.xb)(r)}}(r,o):void 0}a.O.add(s.ColorContribution,k);const C="vscode://schemas/workbench-colors",D=a.O.as(c.F.JSONContribution);D.registerSchema(C,k.getColorSchema());const w=new n.uC(()=>D.notifySchemaChanged(C),200);k.onDidChangeSchema(()=>{w.isScheduled()||w.schedule()})},31237:(r,o,e)=>{e.d(o,{FdG:()=>t.Fd,buw:()=>n.bu,GuP:()=>t.Gu,Bbc:()=>t.Bb,HP_:()=>t.HP,WMx:()=>a.WM,zRE:()=>a.zR,sAS:()=>d.sA,vV$:()=>d.vV,etE:()=>d.et,mc0:()=>d.mc,XJc:()=>b.XJ,raQ:()=>b.r,G_h:()=>b.G_,T9h:()=>b.T9,xOA:()=>b.xO,Inn:()=>b.In,nZG:()=>b.nZ,Q1$:()=>b.Q1,OcU:()=>b.Oc,C5U:()=>b.C5,t0B:()=>b.t0,b1q:()=>n.b1,EY1:()=>d.EY,ZEf:()=>d.ZE,Gj6:()=>d.Gj,ld8:()=>d.ld,$BZ:()=>d.$B,GNm:()=>d.GN,Ztu:()=>d.Zt,YtV:()=>d.Yt,AN$:()=>d.AN,Rbi:()=>d.Rb,f3U:()=>d.f3,Ubg:()=>d.Ub,ECk:()=>d.EC,p8Y:()=>d.p8,S5J:()=>d.S5,By2:()=>d.By,i61:()=>d.i6,WfR:()=>d.Wf,oZ8:()=>d.oZ,tan:()=>d.t,IIb:()=>d.II,pOz:()=>d.pO,WL6:()=>d.WL,P6i:()=>d.P6,B2L:()=>d.B2,sjA:()=>d.sj,_pU:()=>d._p,HwT:()=>d.Hw,seu:()=>d.se,rm4:()=>d.rm,QwA:()=>d.Qw,whs:()=>d.wh,Stt:()=>d.St,Hng:()=>d.Hn,CgL:()=>d.Cg,sIe:()=>d.sI,FiB:()=>d.Fi,tAP:()=>n.tA,CU6:()=>n.CU,t4B:()=>n.t4,c1f:()=>b.c1,uNK:()=>b.uN,$$0:()=>b.$$,L4c:()=>b.L4,Zgs:()=>b.Zg,cws:()=>b.cw,_$n:()=>b._$,eYZ:()=>b.eY,h9z:()=>b.h9,I$A:()=>b.I$,YSW:()=>b.YS,L9Z:()=>b.L9,ULt:()=>b.UL,C1n:()=>b.C1,T5N:()=>b.T5,HDX:()=>b.HD,zUX:()=>b.zU,Qfh:()=>b.Qf,eUu:()=>b.eU,Rjz:()=>p.Rj,GVV:()=>p.GV,fED:()=>p.fE,yIp:()=>p.yI,Yoe:()=>p.Yo,pnl:()=>p.pn,P9Z:()=>p.P9,fiM:()=>p.fi,H8q:()=>p.H8,gtq:()=>p.gt,VFX:()=>p.VF,efJ:()=>p.ef,eMz:()=>p.eM,p7Y:()=>p.p7,QI5:()=>p.QI,lO1:()=>p.lO,QRv:()=>p.QR,CQ3:()=>p.CQ,ijf:()=>p.ij,uNx:()=>p.uN,f4y:()=>p.f4,C9U:()=>p.C9,c6Y:()=>x.c6,g$2:()=>x.g$,dd_:()=>x.dd,Ux$:()=>x.Ux,SNb:()=>x.SN,pmr:()=>x.pm,D7X:()=>x.D7,ILr:()=>f,yLC:()=>k,AjU:()=>g,K1Z:()=>m,KoI:()=>u,yr0:()=>h,Xp1:()=>l,uMG:()=>s,yLr:()=>t.yL,fAP:()=>d.fA,z5H:()=>d.z5,iwL:()=>F.iw,NBf:()=>F.NB,tYX:()=>d.tY,bNw:()=>d.bN,JPj:()=>d.JP,BTi:()=>a.BT,ELA:()=>F.EL,HJZ:()=>F.HJ,AlL:()=>F.Al,nH:()=>F.nH,c7i:()=>F.c7,er1:()=>F.er,Ukx:()=>b.Uk,Ips:()=>b.Ip,jOE:()=>b.jO,xWN:()=>b.xW,ZBU:()=>b.ZB,kPT:()=>b.kP,jr9:()=>b.jr,x1A:()=>t.x1,bXl:()=>a.bX,mhZ:()=>a.mh,gnV:()=>a.gn,cI_:()=>a.cI,rvE:()=>b.rv,HcB:()=>b.Hc,yqq:()=>b.yq,lWP:()=>b.lW,k5u:()=>p.k5,sbQ:()=>p.sb,vwp:()=>n.vw,JO0:()=>t.JO,pft:()=>p.pf,U4U:()=>p.U4,DSL:()=>d.DS,f9l:()=>d.f9});var t=e(21233),n=e(70893),i=e(12003),d=e(33237),c=e(63962),a=e(31768);const g=(0,t.x1)("minimap.findMatchHighlight",{light:"#d18616",dark:"#d18616",hcDark:"#AB5A00",hcLight:"#0F4A85"},i.kg("minimapFindMatchHighlight","Minimap marker color for find matches."),!0),l=(0,t.x1)("minimap.selectionOccurrenceHighlight",{light:"#c9c9c9",dark:"#676767",hcDark:"#ffffff",hcLight:"#0F4A85"},i.kg("minimapSelectionOccurrenceHighlight","Minimap marker color for repeating editor selections."),!0),h=(0,t.x1)("minimap.selectionHighlight",{light:"#ADD6FF",dark:"#264F78",hcDark:"#ffffff",hcLight:"#0F4A85"},i.kg("minimapSelectionHighlight","Minimap marker color for the editor selection."),!0),u=(0,t.x1)("minimap.infoHighlight",{dark:d.pO,light:d.pO,hcDark:d.II,hcLight:d.II},i.kg("minimapInfo","Minimap marker color for infos.")),s=(0,t.x1)("minimap.warningHighlight",{dark:d.Hn,light:d.Hn,hcDark:d.St,hcLight:d.St},i.kg("overviewRuleWarning","Minimap marker color for warnings.")),k=(0,t.x1)("minimap.errorHighlight",{dark:new c.Q1(new c.bU(255,18,18,.7)),light:new c.Q1(new c.bU(255,18,18,.7)),hcDark:new c.Q1(new c.bU(255,50,50,1)),hcLight:"#B5200D"},i.kg("minimapError","Minimap marker color for errors.")),f=(0,t.x1)("minimap.background",null,i.kg("minimapBackground","Minimap background color.")),m=(0,t.x1)("minimap.foregroundOpacity",c.Q1.fromHex("#000f"),i.kg("minimapForegroundOpacity",'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.'));(0,t.x1)("minimapSlider.background",(0,t.JO)(a.gn,.5),i.kg("minimapSliderBackground","Minimap slider background color.")),(0,t.x1)("minimapSlider.hoverBackground",(0,t.JO)(a.cI,.5),i.kg("minimapSliderHoverBackground","Minimap slider background color when hovering.")),(0,t.x1)("minimapSlider.activeBackground",(0,t.JO)(a.mh,.5),i.kg("minimapSliderActiveBackground","Minimap slider background color when clicked on.")),(0,t.x1)("charts.foreground",n.CU,i.kg("chartsForeground","The foreground color used in charts.")),(0,t.x1)("charts.lines",(0,t.JO)(n.CU,.5),i.kg("chartsLines","The color used for horizontal lines in charts.")),(0,t.x1)("charts.red",d.Rb,i.kg("chartsRed","The red color used in chart visualizations.")),(0,t.x1)("charts.blue",d.pO,i.kg("chartsBlue","The blue color used in chart visualizations.")),(0,t.x1)("charts.yellow",d.Hn,i.kg("chartsYellow","The yellow color used in chart visualizations.")),(0,t.x1)("charts.orange",g,i.kg("chartsOrange","The orange color used in chart visualizations.")),(0,t.x1)("charts.green",{dark:"#89D185",light:"#388A34",hcDark:"#89D185",hcLight:"#374e06"},i.kg("chartsGreen","The green color used in chart visualizations.")),(0,t.x1)("charts.purple",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},i.kg("chartsPurple","The purple color used in chart visualizations."));var b=e(50866),p=e(4748),x=e(73187),F=e(79352);(0,t.x1)("search.resultsInfoForeground",{light:n.CU,dark:(0,t.JO)(n.CU,.65),hcDark:n.CU,hcLight:n.CU},i.kg("search.resultsInfoForeground","Color of the text in the search viewlet's completion message.")),(0,t.x1)("searchEditor.findMatchBackground",{light:(0,t.JO)(d.Ub,.66),dark:(0,t.JO)(d.Ub,.66),hcDark:d.Ub,hcLight:d.Ub},i.kg("searchEditor.queryMatch","Color of the Search Editor query matches.")),(0,t.x1)("searchEditor.findMatchBorder",{light:(0,t.JO)(d.EC,.66),dark:(0,t.JO)(d.EC,.66),hcDark:d.EC,hcLight:d.EC},i.kg("searchEditor.editorFindMatchBorder","Border color of the Search Editor query matches."))},33237:(r,o,e)=>{e.d(o,{$B:()=>G,AN:()=>k,B2:()=>M,By:()=>g,Cg:()=>l,DS:()=>j,EC:()=>O,EY:()=>q,Fi:()=>h,GN:()=>_,Gj:()=>$,Hn:()=>m,Hw:()=>Q,II:()=>x,JP:()=>gr,P6:()=>S,Qw:()=>w,Rb:()=>s,S5:()=>A,St:()=>b,Ub:()=>y,WL:()=>T,Wf:()=>E,Yt:()=>a,ZE:()=>W,Zt:()=>B,_p:()=>U,bN:()=>lr,et:()=>X,f3:()=>L,f9:()=>z,fA:()=>dr,i6:()=>F,ld:()=>P,mc:()=>N,oZ:()=>I,p8:()=>H,pO:()=>p,rm:()=>C,sA:()=>V,sI:()=>u,se:()=>v,sj:()=>J,t:()=>D,tY:()=>ar,vV:()=>Y,wh:()=>f,z5:()=>cr});var t=e(12003),n=e(63962),i=e(21233),d=e(70893),c=e(31768);const a=(0,i.x1)("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:n.Q1.black,hcLight:n.Q1.white},t.kg("editorBackground","Editor background color.")),g=(0,i.x1)("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:n.Q1.white,hcLight:d.CU},t.kg("editorForeground","Editor default foreground color.")),l=((0,i.x1)("editorStickyScroll.background",a,t.kg("editorStickyScrollBackground","Background color of sticky scroll in the editor")),(0,i.x1)("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},t.kg("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),(0,i.x1)("editorStickyScroll.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("editorStickyScrollBorder","Border color of sticky scroll in the editor")),(0,i.x1)("editorStickyScroll.shadow",c.bX,t.kg("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor")),(0,i.x1)("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:n.Q1.white},t.kg("editorWidgetBackground","Background color of editor widgets, such as find/replace."))),h=(0,i.x1)("editorWidget.foreground",d.CU,t.kg("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),u=(0,i.x1)("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:d.b1,hcLight:d.b1},t.kg("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")),s=((0,i.x1)("editorWidget.resizeBorder",null,t.kg("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),(0,i.x1)("editorError.background",null,t.kg("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},t.kg("editorError.foreground","Foreground color of error squigglies in the editor."))),k=(0,i.x1)("editorError.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},t.kg("errorBorder","If set, color of double underlines for errors in the editor.")),f=(0,i.x1)("editorWarning.background",null,t.kg("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),m=(0,i.x1)("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},t.kg("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),b=(0,i.x1)("editorWarning.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#FFCC00").transparent(.8),hcLight:n.Q1.fromHex("#FFCC00").transparent(.8)},t.kg("warningBorder","If set, color of double underlines for warnings in the editor.")),p=((0,i.x1)("editorInfo.background",null,t.kg("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},t.kg("editorInfo.foreground","Foreground color of info squigglies in the editor."))),x=(0,i.x1)("editorInfo.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},t.kg("infoBorder","If set, color of double underlines for infos in the editor.")),F=(0,i.x1)("editorHint.foreground",{dark:n.Q1.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},t.kg("editorHint.foreground","Foreground color of hint squigglies in the editor.")),B=((0,i.x1)("editorHint.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},t.kg("hintBorder","If set, color of double underlines for hints in the editor.")),(0,i.x1)("editorLink.activeForeground",{dark:"#4E94CE",light:n.Q1.blue,hcDark:n.Q1.cyan,hcLight:"#292929"},t.kg("activeLinkForeground","Color of active links."))),v=(0,i.x1)("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},t.kg("editorSelectionBackground","Color of the editor selection.")),C=(0,i.x1)("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:n.Q1.white},t.kg("editorSelectionForeground","Color of the selected text for high contrast.")),D=(0,i.x1)("editor.inactiveSelectionBackground",{light:(0,i.JO)(v,.5),dark:(0,i.JO)(v,.5),hcDark:(0,i.JO)(v,.7),hcLight:(0,i.JO)(v,.5)},t.kg("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),w=(0,i.x1)("editor.selectionHighlightBackground",{light:(0,i.oG)(v,a,.3,.6),dark:(0,i.oG)(v,a,.3,.6),hcDark:null,hcLight:null},t.kg("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0),L=((0,i.x1)("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:d.bu,hcLight:d.bu},t.kg("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),(0,i.x1)("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},t.kg("editorFindMatch","Color of the current search match.")),(0,i.x1)("editor.findMatchForeground",null,t.kg("editorFindMatchForeground","Text color of the current search match."))),y=(0,i.x1)("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},t.kg("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0),H=(0,i.x1)("editor.findMatchHighlightForeground",null,t.kg("findMatchHighlightForeground","Foreground color of the other search matches."),!0),O=((0,i.x1)("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},t.kg("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editor.findMatchBorder",{light:null,dark:null,hcDark:d.bu,hcLight:d.bu},t.kg("editorFindMatchBorder","Border color of the current search match.")),(0,i.x1)("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:d.bu,hcLight:d.bu},t.kg("findMatchHighlightBorder","Border color of the other search matches."))),A=(0,i.x1)("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:(0,i.JO)(d.bu,.4),hcLight:(0,i.JO)(d.bu,.4)},t.kg("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),E=((0,i.x1)("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},t.kg("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("editorHoverWidget.background",l,t.kg("hoverBackground","Background color of the editor hover."))),I=((0,i.x1)("editorHoverWidget.foreground",h,t.kg("hoverForeground","Foreground color of the editor hover.")),(0,i.x1)("editorHoverWidget.border",u,t.kg("hoverBorder","Border color of the editor hover."))),S=((0,i.x1)("editorHoverWidget.statusBarBackground",{dark:(0,i.a)(E,.2),light:(0,i.e$)(E,.05),hcDark:l,hcLight:l},t.kg("statusBarBackground","Background color of the editor hover status bar.")),(0,i.x1)("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:n.Q1.white,hcLight:n.Q1.black},t.kg("editorInlayHintForeground","Foreground color of inline hints"))),T=(0,i.x1)("editorInlayHint.background",{dark:(0,i.JO)(c.WM,.1),light:(0,i.JO)(c.WM,.1),hcDark:(0,i.JO)(n.Q1.white,.1),hcLight:(0,i.JO)(c.WM,.1)},t.kg("editorInlayHintBackground","Background color of inline hints")),Q=(0,i.x1)("editorInlayHint.typeForeground",S,t.kg("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),U=(0,i.x1)("editorInlayHint.typeBackground",T,t.kg("editorInlayHintBackgroundTypes","Background color of inline hints for types")),J=(0,i.x1)("editorInlayHint.parameterForeground",S,t.kg("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),M=(0,i.x1)("editorInlayHint.parameterBackground",T,t.kg("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),R=(0,i.x1)("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},t.kg("editorLightBulbForeground","The color used for the lightbulb actions icon.")),q=((0,i.x1)("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},t.kg("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),(0,i.x1)("editorLightBulbAi.foreground",R,t.kg("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),(0,i.x1)("editor.snippetTabstopHighlightBackground",{dark:new n.Q1(new n.bU(124,124,124,.3)),light:new n.Q1(new n.bU(10,50,100,.2)),hcDark:new n.Q1(new n.bU(124,124,124,.3)),hcLight:new n.Q1(new n.bU(10,50,100,.2))},t.kg("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),(0,i.x1)("editor.snippetTabstopHighlightBorder",null,t.kg("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),(0,i.x1)("editor.snippetFinalTabstopHighlightBackground",null,t.kg("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),(0,i.x1)("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new n.Q1(new n.bU(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},t.kg("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet.")),new n.Q1(new n.bU(155,185,85,.2))),W=new n.Q1(new n.bU(255,0,0,.2)),$=(0,i.x1)("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},t.kg("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),_=(0,i.x1)("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},t.kg("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),P=((0,i.x1)("diffEditor.insertedLineBackground",{dark:q,light:q,hcDark:null,hcLight:null},t.kg("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("diffEditor.removedLineBackground",{dark:W,light:W,hcDark:null,hcLight:null},t.kg("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("diffEditorGutter.insertedLineBackground",null,t.kg("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),(0,i.x1)("diffEditorGutter.removedLineBackground",null,t.kg("diffEditorRemovedLineGutter","Background color for the margin where lines got removed.")),(0,i.x1)("diffEditorOverview.insertedForeground",null,t.kg("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content."))),G=(0,i.x1)("diffEditorOverview.removedForeground",null,t.kg("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content.")),z=((0,i.x1)("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},t.kg("diffEditorInsertedOutline","Outline color for the text that got inserted.")),(0,i.x1)("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},t.kg("diffEditorRemovedOutline","Outline color for text that got removed.")),(0,i.x1)("diffEditor.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("diffEditorBorder","Border color between the two text editors.")),(0,i.x1)("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},t.kg("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),(0,i.x1)("diffEditor.unchangedRegionBackground","sideBar.background",t.kg("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),(0,i.x1)("diffEditor.unchangedRegionForeground","foreground",t.kg("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),(0,i.x1)("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},t.kg("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor.")),(0,i.x1)("widget.shadow",{dark:(0,i.JO)(n.Q1.black,.36),light:(0,i.JO)(n.Q1.black,.16),hcDark:null,hcLight:null},t.kg("widgetShadow","Shadow color of widgets such as find/replace inside the editor."))),j=(0,i.x1)("widget.border",{dark:null,light:null,hcDark:d.b1,hcLight:d.b1},t.kg("widgetBorder","Border color of widgets such as find/replace inside the editor.")),Z=(0,i.x1)("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},t.kg("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse")),N=((0,i.x1)("toolbar.hoverOutline",{dark:null,light:null,hcDark:d.bu,hcLight:d.bu},t.kg("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),(0,i.x1)("toolbar.activeBackground",{dark:(0,i.a)(Z,.1),light:(0,i.e$)(Z,.1),hcDark:null,hcLight:null},t.kg("toolbarActiveBackground","Toolbar background when holding the mouse over actions")),(0,i.x1)("breadcrumb.foreground",(0,i.JO)(d.CU,.8),t.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items."))),Y=(0,i.x1)("breadcrumb.background",a,t.kg("breadcrumbsBackground","Background color of breadcrumb items.")),X=(0,i.x1)("breadcrumb.focusForeground",{light:(0,i.e$)(d.CU,.2),dark:(0,i.a)(d.CU,.1),hcDark:(0,i.a)(d.CU,.1),hcLight:(0,i.a)(d.CU,.1)},t.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),V=(0,i.x1)("breadcrumb.activeSelectionForeground",{light:(0,i.e$)(d.CU,.2),dark:(0,i.a)(d.CU,.1),hcDark:(0,i.a)(d.CU,.1),hcLight:(0,i.a)(d.CU,.1)},t.kg("breadcrumbsSelectedForeground","Color of selected breadcrumb items.")),K=((0,i.x1)("breadcrumbPicker.background",l,t.kg("breadcrumbsSelectedBackground","Background color of breadcrumb item picker.")),n.Q1.fromHex("#40C8AE").transparent(.5)),rr=n.Q1.fromHex("#40A6FF").transparent(.5),or=n.Q1.fromHex("#606060").transparent(.4),er=(0,i.x1)("merge.currentHeaderBackground",{dark:K,light:K,hcDark:null,hcLight:null},t.kg("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),tr=((0,i.x1)("merge.currentContentBackground",(0,i.JO)(er,.4),t.kg("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("merge.incomingHeaderBackground",{dark:rr,light:rr,hcDark:null,hcLight:null},t.kg("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),nr=((0,i.x1)("merge.incomingContentBackground",(0,i.JO)(tr,.4),t.kg("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("merge.commonHeaderBackground",{dark:or,light:or,hcDark:null,hcLight:null},t.kg("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),ir=((0,i.x1)("merge.commonContentBackground",(0,i.JO)(nr,.4),t.kg("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,i.x1)("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},t.kg("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."))),dr=((0,i.x1)("editorOverviewRuler.currentContentForeground",{dark:(0,i.JO)(er,1),light:(0,i.JO)(er,1),hcDark:ir,hcLight:ir},t.kg("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),(0,i.x1)("editorOverviewRuler.incomingContentForeground",{dark:(0,i.JO)(tr,1),light:(0,i.JO)(tr,1),hcDark:ir,hcLight:ir},t.kg("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),(0,i.x1)("editorOverviewRuler.commonContentForeground",{dark:(0,i.JO)(nr,1),light:(0,i.JO)(nr,1),hcDark:ir,hcLight:ir},t.kg("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts.")),(0,i.x1)("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:"#AB5A00"},t.kg("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0)),cr=(0,i.x1)("editorOverviewRuler.selectionHighlightForeground","#A0A0A0CC",t.kg("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),ar=(0,i.x1)("problemsErrorIcon.foreground",s,t.kg("problemsErrorIconForeground","The color used for the problems error icon.")),gr=(0,i.x1)("problemsWarningIcon.foreground",m,t.kg("problemsWarningIconForeground","The color used for the problems warning icon.")),lr=(0,i.x1)("problemsInfoIcon.foreground",p,t.kg("problemsInfoIconForeground","The color used for the problems info icon."))},70893:(r,o,e)=>{e.d(o,{CU:()=>d,b1:()=>g,bu:()=>l,t4:()=>c,tA:()=>a,vw:()=>h});var t=e(12003),n=e(63962),i=e(21233);const d=(0,i.x1)("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},t.kg("foreground","Overall foreground color. This color is only used if not overridden by a component.")),c=((0,i.x1)("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},t.kg("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),(0,i.x1)("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},t.kg("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),(0,i.x1)("descriptionForeground",{light:"#717171",dark:(0,i.JO)(d,.7),hcDark:(0,i.JO)(d,.7),hcLight:(0,i.JO)(d,.7)},t.kg("descriptionForeground","Foreground color for description text providing additional information, for example for a label.")),(0,i.x1)("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},t.kg("iconForeground","The default color for icons in the workbench."))),a=(0,i.x1)("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},t.kg("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),g=(0,i.x1)("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},t.kg("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),l=(0,i.x1)("contrastActiveBorder",{light:null,dark:null,hcDark:a,hcLight:a},t.kg("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast.")),h=((0,i.x1)("selection.background",null,t.kg("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.")),(0,i.x1)("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},t.kg("textLinkForeground","Foreground color for links in text.")));(0,i.x1)("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},t.kg("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),(0,i.x1)("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:n.Q1.black,hcLight:"#292929"},t.kg("textSeparatorForeground","Color for text separators.")),(0,i.x1)("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},t.kg("textPreformatForeground","Foreground color for preformatted text segments.")),(0,i.x1)("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},t.kg("textPreformatBackground","Background color for preformatted text segments.")),(0,i.x1)("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},t.kg("textBlockQuoteBackground","Background color for block quotes in text.")),(0,i.x1)("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:n.Q1.white,hcLight:"#292929"},t.kg("textBlockQuoteBorder","Border color for block quotes in text.")),(0,i.x1)("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:n.Q1.black,hcLight:"#F2F2F2"},t.kg("textCodeBlockBackground","Background color for code blocks in text."))}};
//# sourceMappingURL=1237.js.map